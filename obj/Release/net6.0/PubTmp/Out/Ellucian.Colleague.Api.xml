<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ellucian.Colleague.Api</name>
    </assembly>
    <members>
        <member name="T:Ellucian.Colleague.Api.Areas.Planning.Controllers.LocalTestController">
            <summary>
            Test utilities controller for planning module.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.LocalTestController.#ctor(Ellucian.Colleague.Configuration.DmiSettings,Ellucian.Web.Security.ICurrentUserFactory,Ellucian.Colleague.Domain.Repositories.IRoleRepository,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            constructor
            </summary>
            <param name="dmiSettings"></param>
            <param name="currentUserFactory"></param>
            <param name="roleRepository"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.LocalTestController.ScanRulesAsync">
            <summary>
            Scan of rules to determine which will not be executed in .net
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.LocalTestController.Evaluation">
            <summary>
            Gets the evaluation test page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.LocalTestController.Evaluation(Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluation)">
            <summary>
            Submits an evaluation request with a program to evaluated for the logged in person
            NOTE: This method is currently not working due to a platform level issue with CurrentUser
                  Platform team has a task CSSPO-8655 to correct this (Q3 2023 Sprint 1) 
             
            </summary>
            <param name="testEvaluation"><see cref="T:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluation"/> model</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.LocalTestController.EvaluationResult">
            <summary>
            Gets the evaluation result page for the student and program.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController">
            <summary>
            Provides the test utilities for the planning area.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.PersonIdKey">
            <summary>
            Person id string.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.#ctor(Ellucian.Web.Security.JwtHelper,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructor.
            </summary>
            <param name="jwtHelper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.Index">
            <summary>
            Gets the test index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.DegreePlan">
            <summary>
            Gets the test degree plan index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.PostDegreePlan">
            <summary>
            Submits a request to run the degree plan test.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.Advisees">
            <summary>
            Gets the test advisees index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.PostAdvisees">
            <summary>
            Submits a request to run the advisees test.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.Evaluation">
            <summary>
            Gets the test evaluation page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.Evaluation(Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluation)">
            <summary>
            Submits a request to run the evaluation test.
            </summary>
            <param name="evaluation"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Planning.Controllers.TestController.Done">
            <summary>
            Gets the done page.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluation">
            <summary>
            Test evaluation model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluation.Program">
            <summary>
            Gets or sets the program.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluationResult">
            <summary>
            Test evaluation result model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluationResult.PersonId">
            <summary>
            Gets or sets the person id.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluationResult.ProgramId">
            <summary>
            Gets or sets the program id.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluationResult.Evaluation">
            <summary>
            Gets or sets the evaluation result text.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestEvaluationResult.Log">
            <summary>
            Gets or sets the evaluation log.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestScanRules">
            <summary>
            Test scan rules model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestScanRules.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestScanRules.Supported">
            <summary>
            gets or sets the number of supported rules.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestScanRules.Count">
            <summary>
            Gets or sets the total number of rules.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestScanRules.NotSupportedNames">
            <summary>
            List of rules that will not be supported.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Planning.Models.Tests.TestScanRules.Log">
            <summary>
            Gets or sets the log output.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController">
            <summary>
            Provides the test utilities for the student area.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.PersonIdKey">
            <summary>
            Person id string.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Controller constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Index">
            <summary>
            Gets the index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Subjects">
            <summary>
            Gets the subject test index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.PostSubjects">
            <summary>
            Submits a subject test.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.SectionsForCourses">
            <summary>
            Gets the sections for courses test index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.SectionsForCourses(Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSectionsForCourses)">
            <summary>
            Submits a request to test getting sections for pages.
            </summary>
            <param name="sectionsForCourses"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Credits">
            <summary>
            Gets the test credits index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.PostCredits">
            <summary>
            Submits a request to run the credits tests.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.CourseSearch">
            <summary>
            Gets the test course search index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.CourseSearch(Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourseSearch)">
            <summary>
            Submits a request to run the course search test.
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.CourseSearchParallel">
            <summary>
            Gets the test course search parallel index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.CourseSearchParallel(Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourseSearch)">
            <summary>
            Submits a request to run the course search parallel test.
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Courses">
            <summary>
            Gets the test courses index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Courses(Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourses)">
            <summary>
            Submits a request to run the courses by ids test.
            </summary>
            <param name="courses"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Sections">
            <summary>
            Gets the test section index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Sections(Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSections)">
            <summary>
            Submits a request to run the sections test.
            </summary>
            <param name="sections"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Faculty">
            <summary>
            Gets the test faculty index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Faculty(Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestFaculty)">
            <summary>
            Submits a request to run the the faculty test.
            </summary>
            <param name="faculty"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Areas.Student.Controllers.TestController.Done">
            <summary>
            Gets the done page.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourses">
            <summary>
            Test courses model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourses.CourseIds">
            <summary>
            Gets or sets the course ids.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourseSearch">
            <summary>
            Test course search model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestCourseSearch.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestFaculty">
            <summary>
            Test faculty model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestFaculty.FacultyIds">
            <summary>
            Gets or sets the faculty ids.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSections">
            <summary>
            Test sections model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSections.SectionIds">
            <summary>
            Gets or sets the section ids.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSections.FromCache">
            <summary>
            Gets or sets a flag indicating if the cache should be used.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSectionsForCourses">
            <summary>
            Test sections for courses model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSectionsForCourses.CourseIds">
            <summary>
            Gets or sets the course id.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Areas.Student.Models.Tests.TestSectionsForCourses.FromCache">
            <summary>
            Gets or sets a flag indicating if the cache should be used.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Bootstrapper">
            <summary>
            Manages the initial configuration of the web API layer, including container registration.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Bootstrapper.ExecuteAllRulesInColleague">
            <summary>
            When set true in appSettings, the logic to convert rules into .NET expression trees will be disabled.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Bootstrapper.DataProtectionApplicationDiscriminator">
            <summary>
            This provides the application discriminator for data protection APIs.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Bootstrapper.LoggingLevelSwitch">
            <summary>
            This property set/get an instance of the Serilog LoggingLevelSwitch
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Bootstrapper.ColleagueTimeZone">
            <summary>
            The setting for the Colleague Time Zone
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Bootstrapper.SupportedCultures">
            <summary>
            For formatting purposes.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Bootstrapper.SupportedUICultures">
            <summary>
            For language UI elements.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Bootstrapper.KeyManagementStrategies">
            <summary>
            For key management strategies.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Bootstrapper.DefaultUiCulture">
            <summary>
            Default UI culture (i.e. prior to any user-specific settings)
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Bootstrapper.DefaultCulture">
            <summary>
            Default culture (i.e. prior to any user-specific settings)
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Bootstrapper.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Serilog.ILogger)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="appConfiguration"></param>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Bootstrapper.GetLoadableTypes(System.Reflection.Assembly)">
            <summary>
            Determines which assemblys are able to be loaded
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AdminController">
            <summary>
            Web API administration controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.#ctor(Ellucian.Web.Http.Configuration.ISettingsRepository,Ellucian.Colleague.Coordination.Base.Services.IConfigurationService,Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Colleague.Configuration.ColleagueSettings,Ellucian.Colleague.Configuration.DmiSettings,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Hosting.Server.IServer,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Logging.ILoggerFactory,Ellucian.Web.Cache.ICacheProvider,Microsoft.Extensions.Options.IOptionsMonitor{Ellucian.Web.Http.Configuration.ApiSettingRepositorySettings},Microsoft.Extensions.Hosting.IHostEnvironment,Ellucian.Colleague.Api.Utility.AppConfigUtility,Ellucian.Web.Security.JwtHelper,Ellucian.Colleague.Api.Options.DataProtectionSettings,Microsoft.Extensions.Hosting.IApplicationLifetime,Ellucian.Logging.AuditLoggingAdapter,Microsoft.Extensions.Options.IOptions{Ellucian.Colleague.Api.Models.ColleaguePubSubOptions},StackExchange.Redis.ISubscriber)">
            <summary>
            Default constructor.
            </summary>
            <param name="settingsRepository">ISettingsRepository instance</param>
            <param name="configurationService">IConfigurationService instance</param>
            <param name="apiSettings">IConfigurationService instance</param>
            <param name="collSettings">IConfigurationService instance</param>
            <param name="dmiSettings">IConfigurationService instance</param>
            <param name="logger">ILogger instance</param>
            <param name="server"></param>
            <param name="httpContextAccessor"></param>
            <param name="loggerFactory"></param>
            <param name="cacheProvider"></param>
            <param name="apiSettingsRepositorySettings"></param>
            <param name="hostEnvironment"></param>
            <param name="appConfigUtility"></param>
            <param name="jwtHelper"></param>
            <param name="dataProtectionSettings"></param>
            <param name="appLifetime"></param>
            <param name="auditLoggingAdapter"></param>
            <param name="configManagementPubSubOptions"></param>
            <param name="pubSubSubscriber"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Index">
            <summary>
            Gets the main API administration page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.ConnectionSettings">
            <summary>
            Gets the API connection settings page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.ConnectionSettings(System.String)">
            <summary>
            Post the API connection settings page.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Culture">
            <summary>
            Gets the API culture settings page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Culture(System.String)">
            <summary>
            Post the API logging settings page.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.KeyManagement">
            <summary>
            Gets the API key management page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.KeyManagement(Ellucian.Colleague.Api.Models.KeyManagementViewModel)">
            <summary>
            Gets the API key management page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Logging">
            <summary>
            Gets the API logging settings page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Logging(System.String)">
            <summary>
            Post the API logging settings page.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.LoggingLevel(System.String)">
            <summary>
            Desiged as an API method to allow for a simple change for the log level.
            </summary>
            <param name="loggingLevel">One of the valid options: Off, Error, Warning, Information, Verbose</param>
            <returns>OK or BadRequest</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.ApiSettingsProfile">
            <summary>
            Gets the API settings profile page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.ApiSettingsProfile(System.String)">
            <summary>
            Posts the API settings profile page.
            </summary>
            <param name="model">JSON string representing a <see cref="T:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel"/></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.ApiSettings">
            <summary>
            Processes a user's request to access API settings
            </summary>
            <returns>The ApiSettings view</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.ApiSettings(System.String)">
            <summary>
            Processes a user's request to update API settings
            </summary>
            <param name="model">The Api settings view model</param>
            <returns>The settings confirmation view</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.OauthSettings">
            <summary>
            Gets the API connection settings page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.OauthSettings(System.String)">
            <summary>
            Post the API connection settings page.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Login(System.String,System.String)">
            <summary>
            Gets the login page used by the API settings pages.
            </summary>
            <param name="returnUrl">URL to return to after login, if any.</param>
            <param name="error">Error message from a previous failed login.</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Login(Ellucian.Colleague.Api.Models.TestLogin,System.String)">
            <summary>
            Submits the login page used by the API settings pages.
            </summary>
            <param name="credentials"><see cref="T:Ellucian.Colleague.Api.Models.TestLogin"/> model</param>
            <param name="returnUrl">URL to return to after login, if any.</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Logout">
            <summary>
            Submits a logout for the login used by the API settings pages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.SettingsConfirmation">
            <summary>
            Gets the API settings confirmation page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.TestAppConnectionAsync(Ellucian.Colleague.Api.Models.TestConnection)">
            <summary>
            Submits a request to test the app listener connection setting to DMI.
            </summary>
            <param name="model"><see cref="T:Ellucian.Colleague.Api.Models.TestConnection"/> model</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.TestOauthSettingsAsync(Ellucian.Colleague.Api.Models.TestConnection)">
            <summary>
            Submits a request to test the OAuth setting URL and Proxy UserID/Password.
            </summary>
            <param name="model"><see cref="T:Ellucian.Colleague.Api.Models.TestConnection"/> model</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.TestDASConnectionAsync(Ellucian.Colleague.Api.Models.TestConnection)">
            <summary>
            Submits a request to test the connection setting to DAS.
            </summary>
            <param name="model"><see cref="M:Ellucian.Colleague.Api.Controllers.AdminController.TestDASConnectionAsync(Ellucian.Colleague.Api.Models.TestConnection)"/>model</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.PerformBackupConfig">
            <summary>
            Backup all API configs
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AdminController.UtilityCacheRepository">
            <summary>
            Private repository class which extends the base caching repository; a bit of a hack so this controller
            can access methods in the abstract base caching repository
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.Copy(System.String,System.String)">
            <summary>
            Copies source directory contents to target
            </summary>
            <param name="sourceDirectory"></param>
            <param name="targetDirectory"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdminController.CopyAll(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Copies all files from source directory contents to target
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AboutController">
            <summary>
            Provides specific version information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AboutController.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Provides the About-related endpoints
            </summary>
            <param name="contextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AboutController.GetAboutAsync">
            <summary>
            Retrieves version information for the Colleague Web API.
            </summary>
            <returns>Version information.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController">
            <summary>
            Controller for Academic Credentials
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IAcademicCredentialService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the Academic Credentials Controller class.
            </summary>
            <param name="academicCredentialService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAcademicCredentialService">IAcademicCredentialService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController.GetAcademicCredentialsAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Academic Credentials
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicCredential">Academic Credentials.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController.GetAcademicCredentialByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Academic Credential by GUID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AcademicCredential">Academic Credential.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController.PostAcademicCredentialAsync(Ellucian.Colleague.Dtos.AcademicCredential)">
            <summary>        
            Creates an Academic Credential
            </summary>
            <param name="academicCredential"><see cref="T:Ellucian.Colleague.Dtos.AcademicCredential">AcademicCredential</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicCredential">AcademicCredential</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController.PutAcademicCredentialAsync(System.String,Ellucian.Colleague.Dtos.AcademicCredential)">
            <summary>        
            Updates an AcademicCredential.
            </summary>
            <param name="id">Id of the Academic Credential to update</param>
            <param name="academicCredential"><see cref="T:Ellucian.Colleague.Dtos.AcademicCredential">AcademicCredential</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AcademicCredential">AcademicCredential</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCredentialsController.DeleteAcademicCredentialAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Academic Credential
            </summary>
            <param name="id">Id of the Academic Credential to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AddressesController">
            <summary>
            Provides access to Address data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IAddressService,Ellucian.Colleague.Domain.Base.Repositories.IAddressRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AddressesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="addressService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAddressService">IAddressService</see></param>
            <param name="addressRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IAddressRepository">IAddressRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.GetPersonAddresses2Async(System.String)">
            <summary>
            Get all current addresses for a person
            </summary>
            <param name="personId">Person to get addresses for</param>
            <returns>List of Address Objects <see cref="T:Ellucian.Colleague.Dtos.Base.Address">Address</see></returns>
            <accessComments>Authenticated users can retrieve their own address information; authenticated users with the VIEW.PERSON.INFORMATION or EDIT.VENDOR.BANKING.INFORMATION permission code can retrieve address information for others.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.QueryAddressesAsync(Ellucian.Colleague.Dtos.Base.AddressQueryCriteria)">
            <summary>
            Get a list of Addresses from a list of Person keys
            </summary>
            <param name="criteria">Address Query Criteria including PersonIds list.</param>
            <returns>List of Address Objects <see cref="T:Ellucian.Colleague.Dtos.Base.Address">Address</see></returns>
            <accessComments>User must have VIEW.ADDRESS permission or search for their own address(es)</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.GetAddressByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Read (GET) a Address using a GUID
            </summary>
            <param name="guid">GUID to desired Address</param>
            <returns>An address object <see cref="T:Ellucian.Colleague.Dtos.Addresses"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.GetAddressByGuid2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Read (GET) a Address using a GUID
            </summary>
            <param name="guid">GUID to desired Address</param>
            <returns>An address object <see cref="T:Ellucian.Colleague.Dtos.Addresses"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.GetAddressesAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Get all addresses with paging
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.GetAddresses2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Get all addresses with paging
            </summary>
            <param name="page"></param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.PutAddressAsync(System.String,Ellucian.Colleague.Dtos.Addresses)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Update a Address Record in Colleague (Not Supported)
            </summary>
            <param name="id">Guid to Address in Colleague</param>
            <param name="address"><see cref="T:Ellucian.Colleague.Dtos.Addresses">Address</see> to update</param>
            <returns>An address object <see cref="T:Ellucian.Colleague.Dtos.Addresses"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.PutAddress2Async(System.String,Ellucian.Colleague.Dtos.Addresses)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Update a Address Record in Colleague (Not Supported)
            </summary>
            <param name="id">Guid to Address in Colleague</param>
            <param name="address"><see cref="T:Ellucian.Colleague.Dtos.Addresses">Address</see> to update</param>
            <returns>An address object <see cref="T:Ellucian.Colleague.Dtos.Addresses"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.PostAddressAsync(Ellucian.Colleague.Dtos.Addresses)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Create a Address Record in Colleague (Not Supported)
            </summary>
            <param name="address"><see cref="T:Ellucian.Colleague.Dtos.Addresses">Address</see> to create</param>
            <returns>An address object <see cref="T:Ellucian.Colleague.Dtos.Addresses"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressesController.DeleteAddressAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Delete an existing Address in Colleague 
            </summary>
            <param name="id">Unique ID representing the Address to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController">
            <summary>
            Provides access to AddressType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IAddressTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AddressTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="addressTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAddressTypeService">IAddressTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController.GetAddressTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all address types.
            </summary>
            <returns>All AddressType objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController.GetAddressTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves an address type by GUID.
            </summary>
            /// <param name="id">Unique ID representing the Address Type to get</param>
            <returns>An AddressType object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController.DeleteAddressTypesAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Delete an existing Address type in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the Address Type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController.PutAddressTypesAsync(Ellucian.Colleague.Dtos.AddressType2)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Update a Address Type Record in Colleague (Not Supported)
            </summary>
            <param name="AddressType"><see cref="!:AddressType2">AddressType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AddressTypesController.PostAddressTypesAsync(Ellucian.Colleague.Dtos.AddressType2)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Create a Address Type Record in Colleague (Not Supported)
            </summary>
            <param name="AddressType"><see cref="!:AddressType2">AddressType</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController">
            <summary>
            Provides access to AdmissionApplicationSupportingItemStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IAdmissionApplicationSupportingItemStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationSupportingItemStatusesController class.
            </summary>
            <param name="admissionApplicationSupportingItemStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAdmissionApplicationSupportingItemStatusesService">IAdmissionApplicationSupportingItemStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController.GetAdmissionApplicationSupportingItemStatusesAsync">
            <summary>
            Return all admissionApplicationSupportingItemStatuses
            </summary>
            <returns>List of AdmissionApplicationSupportingItemStatuses <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemStatus"/> objects representing matching admissionApplicationSupportingItemStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController.GetAdmissionApplicationSupportingItemStatusByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationSupportingItemStatus using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplicationSupportingItemStatus</param>
            <returns>A admissionApplicationSupportingItemStatus object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemStatus"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController.PostAdmissionApplicationSupportingItemStatusAsync(Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemStatus)">
            <summary>
            Create (POST) a new admissionApplicationSupportingItemStatus
            </summary>
            <param name="admissionApplicationSupportingItemStatus">DTO of the new admissionApplicationSupportingItemStatus</param>
            <returns>A admissionApplicationSupportingItemStatus object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemStatus"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController.PutAdmissionApplicationSupportingItemStatusAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemStatus)">
            <summary>
            Update (PUT) an existing admissionApplicationSupportingItemStatus
            </summary>
            <param name="guid">GUID of the admissionApplicationSupportingItemStatus to update</param>
            <param name="admissionApplicationSupportingItemStatus">DTO of the updated admissionApplicationSupportingItemStatus</param>
            <returns>A admissionApplicationSupportingItemStatus object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemStatus"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AdmissionApplicationSupportingItemStatusesController.DeleteAdmissionApplicationSupportingItemStatusAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationSupportingItemStatus
            </summary>
            <param name="guid">GUID to desired admissionApplicationSupportingItemStatus</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController">
            <summary>
            Provides access to AlternativeCredentialTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IAlternativeCredentialTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AlternativeCredentialTypesController class.
            </summary>
            <param name="alternativeCredentialTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAlternativeCredentialTypesService">IAlternativeCredentialTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController.GetAlternativeCredentialTypesAsync">
            <summary>
            Return all alternativeCredentialTypes
            </summary>
            <returns>List of AlternativeCredentialTypes <see cref="T:Ellucian.Colleague.Dtos.AlternativeCredentialTypes"/> objects representing matching alternativeCredentialTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController.GetAlternativeCredentialTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a alternativeCredentialTypes using a GUID
            </summary>
            <param name="guid">GUID to desired alternativeCredentialTypes</param>
            <returns>A alternativeCredentialTypes object <see cref="T:Ellucian.Colleague.Dtos.AlternativeCredentialTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController.PostAlternativeCredentialTypesAsync(Ellucian.Colleague.Dtos.AlternativeCredentialTypes)">
            <summary>
            Create (POST) a new alternativeCredentialTypes
            </summary>
            <param name="alternativeCredentialTypes">DTO of the new alternativeCredentialTypes</param>
            <returns>A alternativeCredentialTypes object <see cref="T:Ellucian.Colleague.Dtos.AlternativeCredentialTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController.PutAlternativeCredentialTypesAsync(System.String,Ellucian.Colleague.Dtos.AlternativeCredentialTypes)">
            <summary>
            Update (PUT) an existing alternativeCredentialTypes
            </summary>
            <param name="guid">GUID of the alternativeCredentialTypes to update</param>
            <param name="alternativeCredentialTypes">DTO of the updated alternativeCredentialTypes</param>
            <returns>A alternativeCredentialTypes object <see cref="T:Ellucian.Colleague.Dtos.AlternativeCredentialTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AlternativeCredentialTypesController.DeleteAlternativeCredentialTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a alternativeCredentialTypes
            </summary>
            <param name="guid">GUID to desired alternativeCredentialTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController">
            <summary>
            Provides access to Attachment Collection data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IAttachmentCollectionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AttachmentsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="attachmentCollectionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAttachmentCollectionService">IAttachmentCollectionService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController.GetAttachmentCollectionByIdAsync(System.String)">
            <summary>
            Get the attachment collection by ID
            </summary>
            <param name="id">The attachment collection Id</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollection">Attachment Collection</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController.GetAttachmentCollectionsByUserAsync">
            <summary>
            Get the attachment collections for current user
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollection">Attachment Collections</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController.PostAsync(Ellucian.Colleague.Dtos.Base.AttachmentCollection)">
            <summary>
            Create the new attachment collection
            </summary>
            <param name="attachmentCollection">The updated <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollection">Attachment Collection</see></param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollection">Attachment Collection</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController.PutAsync(System.String,Ellucian.Colleague.Dtos.Base.AttachmentCollection)">
            <summary>
            Update the attachment collection
            </summary>
            <param name="id">The ID of the attachment collection</param>
            <param name="attachmentCollection">The updated <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollection">Attachment Collection</see></param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollection">Attachment Collection</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentCollectionsController.GetEffectivePermissionsAsync(System.String)">
            <summary>
            Get this user's effective permissions for the attachment collection
            </summary>
            <param name="id">The ID of the attachment collection</param>
            <returns>This user's <see cref="T:Ellucian.Colleague.Dtos.Base.AttachmentCollectionEffectivePermissions">Attachment Collection Effective Permissions</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController">
            <summary>
            Provides access to Attachment data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IAttachmentService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes a new instance of the AttachmentsController class.
            </summary>
            <param name="attachmentService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IAttachmentService">IAttachmentService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings">API settings</param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.GetAttachmentsAsync(System.String,System.String,System.String)">
            <summary>
            Get attachments
            </summary>
            <param name="owner">Owner (optional) to get attachments for</param>
            <param name="collectionId">Collection Id (optional) to get attachments for</param>
            <param name="tagOne">TagOne value to get attachments for</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Base.Attachment">Attachments</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.GetAttachmentContentAsync(System.String)">
            <summary>
            Get the attachment's content
            </summary>
            <param name="id">Id of the attachment whose content is requested</param>
            <returns>A IActionResult with the attachment contents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.QueryAttachmentsByPostAsync(Ellucian.Colleague.Dtos.Base.AttachmentSearchCriteria)">
            <summary>
            Query attachments
            </summary>
            <param name="criteria"></param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Base.Attachment">Attachments</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.PostAsync">
            <summary>
            Create the new attachment
            </summary>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Base.Attachment">Attachment</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.PutAsync(System.String,Ellucian.Colleague.Dtos.Base.Attachment)">
            <summary>
            Update the attachment
            </summary>
            <param name="id">ID of the attachment to update</param>
            <param name="attachment">The <see cref="T:Ellucian.Colleague.Dtos.Base.Attachment">Attachment</see> to update</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Base.Attachment">Attachment</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AttachmentsController.DeleteAsync(System.String)">
            <summary>
            Delete the attachment
            </summary>
            <param name="id">Id of the attachment to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.MultipartRequestHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MultipartRequestHelper.GetBoundary(Microsoft.Net.Http.Headers.MediaTypeHeaderValue,System.Int32)">
            <summary>
            
            </summary>
            <param name="contentType"></param>
            <param name="lengthLimit"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MultipartRequestHelper.IsMultipartContentType(System.String)">
            <summary>
            
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MultipartRequestHelper.HasFormDataContentDisposition(Microsoft.Net.Http.Headers.ContentDispositionHeaderValue)">
            <summary>
            
            </summary>
            <param name="contentDisposition"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MultipartRequestHelper.HasMixedContentDisposition(Microsoft.Net.Http.Headers.ContentDispositionHeaderValue)">
            <summary>
            
            </summary>
            <param name="contentDisposition"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MultipartRequestHelper.HasFileContentDisposition(Microsoft.Net.Http.Headers.ContentDispositionHeaderValue)">
            <summary>
            
            </summary>
            <param name="contentDisposition"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.AuthenticationSchemeController">
            <summary>
            Endpoints for authentication schemes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AuthenticationSchemeController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IAuthenticationSchemeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for Authentication Scheme controller
            </summary>
            <param name="authenticationSchemeService">Authentication scheme service</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.AuthenticationSchemeController.GetAuthenticationSchemeAsync(System.String)">
            <summary>
            Retrieves the authentication scheme for the given username.
            </summary>
            <param name="username">Username for which to retrieve the authentication scheme</param>
            <returns>Authentication scheme for the given username. Null if the user did not have an authentication scheme defined.</returns>
            <accessComments>This endpoint is accessible anonymously.</accessComments>
            <note>This request supports anonymous access. No Colleague entity data is exposed via this anonymous request. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.BankingInformationConfigurationsController">
            <summary>
            Exposes methods to interact with Configuration objects for Colleague Self Service Banking Information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BankingInformationConfigurationsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IBankingInformationConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="adapterRegistry"></param>
            <param name="bankingInformationConfigurationService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BankingInformationConfigurationsController.GetAsync">
            <summary>
            Get the Configuration object for Colleague Self Service Banking Information
            </summary>
            <returns>Returns a single banking information configuration object</returns>
            <note>Banking Information Configuration is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.BanksController">
            <summary>
            Exposes Bank Routing Information functionality
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BanksController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Domain.Base.Repositories.IBankRepository,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiate a new BankRoutingInformationController
            </summary>
            <param name="logger"></param>
            <param name="bankRepository"></param>
            <param name="adapterRegistry"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BanksController.GetBankAsync(System.String)">
            <summary>
            Get a bank resource by its id. This endpoint looks for banks known to Colleague's payroll system as well as the
            universe of US banks that participate in electronic bank transfers. Canadian banks are only included if they are entered in Colleague's payroll system.
            For US Banks, the id is the bank's routing id. For Canadian banks, the id is the combination of the bank's institution id and the branch number, separated by a hyphen
            in the following format: {institutionId}-{branchNumber}
            </summary>
            <param name="id">Routing id of a US bank or institutionId-branchNumber of a Canadian bank</param>
            <returns>A Bank object.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.BatchJobController">
            <summary>
            Provides access to batch jobs.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BatchJobController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IBatchJobService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Default constructor for the batch job controller.
            </summary>
            <param name="batchJobService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BatchJobController.GetBatchJobStateAsync(System.String)">
            <summary>
            Retrieves batch job status information for the provided job ID.
            </summary>
            <param name="jobId">ID from an already submitted job.</param>
            <returns>An batch job state object <see cref="T:Ellucian.Colleague.Dtos.Base.BatchJobState"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BatchJobController.PostBatchJobAsync(Ellucian.Colleague.Dtos.Base.BatchJobSubmit)">
            <summary>
            Allows a user to submit a batch job request. Permissions are determined by the code of the requested job type
            </summary>
            <param name="jobSubmission"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.BulkLoadRequestController">
            <summary>
            Provides access to BulkLoadRequest
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BulkLoadRequestController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IBulkLoadRequestService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BulkLoadRequestController class.
            </summary>
            <param name="bulkLoadRequestService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IBulkLoadRequestService">IBulkLoadRequestService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BulkLoadRequestController.PostBulkLoadRequestAsync(Ellucian.Colleague.Dtos.BulkLoadRequest)">
            <summary>
            Create (POST) a new BulkLoadRequest
            </summary>
            <param name="bulkLoadRequestDto">DTO of the new BulkLoadRequest</param>
            <returns>A BulkLoadRequest object <see cref="T:Ellucian.Colleague.Dtos.BulkLoadRequest"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.BulkLoadRequestController.GetBulkLoadRequestStatusAsync(Ellucian.Web.Http.Models.QueryStringFilter,System.String)">
            <summary>
             Get the status of the bulk request
            </summary>
            <param name="criteria">filter</param>
            <param name="guid">guid</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.BulkLoadGet">object</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController">
            <summary>
            Provides access to Citizenship Statuses data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RacesController class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController.GetCitizenshipStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves all citizenship statuses.
            </summary>
            <returns>All CitizenshipStatuses objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController.GetCitizenshipStatusByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves a citizenship status by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CitizenshipStatus">CitizenshipStatus.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController.PutCitizenshipStatusAsync(Ellucian.Colleague.Dtos.CitizenshipStatus)">
            <summary>
            Updates a CitizenshipStatus.
            </summary>
            <param name="citizenshipStatus"><see cref="!:CitizenshipStatus">CitizenshipStatus</see> to update</param>
            <returns>Newly updated <see cref="!:CitizenshipStatus">CitizenshipStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController.PostCitizenshipStatusAsync(Ellucian.Colleague.Dtos.CitizenshipStatus)">
            <summary>
            Creates a CitizenshipStatus.
            </summary>
            <param name="citizenshipStatus"><see cref="!:CitizenshipStatus">CitizenshipStatus</see> to create</param>
            <returns>Newly created <see cref="!:CitizenshipStatus">CitizenshipStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CitizenshipStatusesController.DeleteCitizenshipStatusAsync(System.String)">
            <summary>
            Delete (DELETE) an existing CitizenshipStatus
            </summary>
            <param name="id">Id of the CitizenshipStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController">
            <summary>
            Provides access to CollectionConfigurationSettings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICollectionConfigurationSettingsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CollectionConfigurationSettingsController class.
            </summary>
            <param name="collectionConfigurationSettingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICollectionConfigurationSettingsService">ICollectionConfigurationSettingsService</see></param>
            <param name="actionAccessor"></param>
            <param name="logger">Interface to logger</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.GetCollectionConfigurationSettingsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all collectionConfigurationSettings
            </summary>
            <returns>List of CollectionConfigurationSettings <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettings"/> objects representing matching collectionConfigurationSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.GetCollectionConfigurationSettingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a collectionConfigurationSettings using a GUID
            </summary>
            <param name="guid">GUID to desired collectionConfigurationSettings</param>
            <returns>A collectionConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.GetCollectionConfigurationSettingsOptionsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all collectionConfigurationSettings options
            </summary>
            <returns>List of CollectionConfigurationSettings <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettingsOptions"/> objects representing matching collectionConfigurationSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.GetCollectionConfigurationSettingsOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a collectionConfigurationSettings using a GUID
            </summary>
            <param name="guid">GUID to desired collectionConfigurationSettings</param>
            <returns>A collectionConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettingsOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.PutCollectionConfigurationSettingsAsync(System.String,Ellucian.Colleague.Dtos.CollectionConfigurationSettings)">
            <summary>
            Update (PUT) an existing CollectionConfigurationSettings
            </summary>
            <param name="guid">GUID of the collectionConfigurationSettings to update</param>
            <param name="collectionConfigurationSettings">DTO of the updated collectionConfigurationSettings</param>
            <returns>A CollectionConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.PostCollectionConfigurationSettingsAsync(Ellucian.Colleague.Dtos.CollectionConfigurationSettings)">
            <summary>
            Create (POST) a new collectionConfigurationSettings
            </summary>
            <param name="collectionConfigurationSettings">DTO of the new collectionConfigurationSettings</param>
            <returns>A collectionConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettings"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.PutCollectionConfigurationSettingsOptionsAsync(Ellucian.Colleague.Dtos.CollectionConfigurationSettingsOptions)">
            <summary>
            Update (PUT) an existing collectionConfigurationSettingsOptions
            </summary>
            <param name="collectionConfigurationSettings">DTO of the new collectionConfigurationSettings</param>
            <returns>A collectionConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.PostCollectionConfigurationSettingsOptionsAsync(Ellucian.Colleague.Dtos.CollectionConfigurationSettingsOptions)">
            <summary>
            Create (POST) a new collectionConfigurationSettingsOptions
            </summary>
            <param name="collectionConfigurationSettings">DTO of the new collectionConfigurationSettings</param>
            <returns>A collectionConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CollectionConfigurationSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CollectionConfigurationSettingsController.DeleteCollectionConfigurationSettingsAsync(System.String)">
            <summary>
            Delete (DELETE) a collectionConfigurationSettings
            </summary>
            <param name="guid">GUID to desired collectionConfigurationSettings</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CommencementSitesController">
            <summary>
            Provides access to Commencement Site data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommencementSitesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CommencementSitesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommencementSitesController.GetAsync">
            <summary>
            Retrieves Commencement Site objects containing code and descriptions
            </summary>
            <returns>A list of CommencementSite Dto objects</returns>
            <accessComments>Any authenticated user can retrieve commencement sites.</accessComments>
            <note>CommencementSites are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController">
            <summary>
            Provides access to Tax Codes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICommerceTaxCodeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TaxCodesController class.
            </summary>
            <param name="taxCodeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICommerceTaxCodeService">ITaxCodeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.GetCommerceTaxCodesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 8</remarks>
            <summary>
            Retrieves all tax codes.
            </summary>
            <returns>All CommerceTaxCode objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.GetCommerceTaxCodeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 8</remarks>
            <summary>
            Retrieves a commerce tax code by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CommerceTaxCode">CommerceTaxCode.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.PutCommerceTaxCodeAsync(System.String,Ellucian.Colleague.Dtos.CommerceTaxCode)">
            <summary>
            Updates a CommerceTaxCode.
            </summary>
            /// <param name="guid">GUID of the commerceTaxCodeRates to update</param>
            <param name="taxCode"><see cref="!:CommerceTaxCode">CommerceTaxCode</see> to update</param>
            <returns>Newly updated <see cref="!:CommerceTaxCode">CommerceTaxCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.PostCommerceTaxCodeAsync(Ellucian.Colleague.Dtos.CommerceTaxCode)">
            <summary>
            Creates a CommerceTaxCode.
            </summary>
            <param name="taxCode"><see cref="!:CommerceTaxCode">CommerceTaxCode</see> to create</param>
            <returns>Newly created <see cref="!:CommerceTaxCode">CommerceTaxCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.DeleteCommerceTaxCodeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing CommerceTaxCode
            </summary>
            <param name="guid">Id of the CommerceTaxCode to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.GetCommerceTaxCodeRatesAsync">
            <summary>
            Return all commerceTaxCodeRates
            </summary>
            <returns>List of CommerceTaxCodeRates <see cref="T:Ellucian.Colleague.Dtos.CommerceTaxCodeRates"/> objects representing matching commerceTaxCodeRates</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.GetCommerceTaxCodeRatesByGuidAsync(System.String)">
            <summary>
            Read (GET) a commerceTaxCodeRates using a GUID
            </summary>
            <param name="guid">GUID to desired commerceTaxCodeRates</param>
            <returns>A commerceTaxCodeRates object <see cref="T:Ellucian.Colleague.Dtos.CommerceTaxCodeRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.PostCommerceTaxCodeRatesAsync(Ellucian.Colleague.Dtos.CommerceTaxCodeRates)">
            <summary>
            Create (POST) a new commerceTaxCodeRates
            </summary>
            <param name="commerceTaxCodeRates">DTO of the new commerceTaxCodeRates</param>
            <returns>A commerceTaxCodeRates object <see cref="T:Ellucian.Colleague.Dtos.CommerceTaxCodeRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.PutCommerceTaxCodeRatesAsync(System.String,Ellucian.Colleague.Dtos.CommerceTaxCodeRates)">
            <summary>
            Update (PUT) an existing commerceTaxCodeRates
            </summary>
            <param name="guid">GUID of the commerceTaxCodeRates to update</param>
            <param name="commerceTaxCodeRates">DTO of the updated commerceTaxCodeRates</param>
            <returns>A commerceTaxCodeRates object <see cref="T:Ellucian.Colleague.Dtos.CommerceTaxCodeRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CommerceTaxCodesController.DeleteCommerceTaxCodeRatesAsync(System.String)">
            <summary>
            Delete (DELETE) a commerceTaxCodeRates
            </summary>
            <param name="guid">GUID to desired commerceTaxCodeRates</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController">
            <summary>
            Provides access to CompoundConfigurationSettings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICompoundConfigurationSettingsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CompoundConfigurationSettingsController class.
            </summary>
            <param name="compoundConfigurationSettingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICompoundConfigurationSettingsService">ICompoundConfigurationSettingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.GetCompoundConfigurationSettingsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all compoundConfigurationSettings
            </summary>
            <returns>List of CompoundConfigurationSettings <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettings"/> objects representing matching compoundConfigurationSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.GetCompoundConfigurationSettingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a compoundConfigurationSettings using a GUID
            </summary>
            <param name="guid">GUID to desired compoundConfigurationSettings</param>
            <returns>A compoundConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.GetCompoundConfigurationSettingsOptionsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all compoundConfigurationSettings options
            </summary>
            <returns>List of compoundConfigurationSettings <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettingsOptions"/> objects representing matching compoundConfigurationSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.GetCompoundConfigurationSettingsOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a compoundConfigurationSettings using a GUID
            </summary>
            <param name="guid">GUID to desired compoundConfigurationSettings</param>
            <returns>A compoundConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettingsOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.PutCompoundConfigurationSettingsAsync(System.String,Ellucian.Colleague.Dtos.CompoundConfigurationSettings)">
            <summary>
            Update (PUT) an existing CompoundConfigurationSettings
            </summary>
            <param name="guid">GUID of the compoundConfigurationSettings to update</param>
            <param name="compoundConfigurationSettings">DTO of the updated compoundConfigurationSettings</param>
            <returns>A CompoundConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.PostCompoundConfigurationSettingsAsync(Ellucian.Colleague.Dtos.CompoundConfigurationSettings)">
            <summary>
            Create (POST) a new compoundConfigurationSettings
            </summary>
            <param name="compoundConfigurationSettings">DTO of the new compoundConfigurationSettings</param>
            <returns>A compoundConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettings"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.DeleteCompoundConfigurationSettingsAsync(System.String)">
            <summary>
            Delete (DELETE) a compoundConfigurationSettings
            </summary>
            <param name="guid">GUID to desired compoundConfigurationSettings</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.PutCompoundConfigurationSettingsOptionsAsync(System.String,Ellucian.Colleague.Dtos.CompoundConfigurationSettingsOptions)">
            <summary>
            Update (PUT) an existing compoundConfigurationSettingsOptions
            </summary>
            <param name="guid">GUID of the compound configuration settings options to update</param>
            <param name="compoundConfigurationSettingsOptions">DTO of the new compoundConfigurationSettingsOptions</param>
            <returns>A compoundConfigurationSettingsOptions object <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CompoundConfigurationSettingsController.PostCompoundConfigurationSettingsOptionsAsync(Ellucian.Colleague.Dtos.CompoundConfigurationSettingsOptions)">
            <summary>
            Create (POST) a new compoundConfigurationSettingsOptions
            </summary>
            <param name="compoundConfigurationSettingsOptions">DTO of the new compoundConfigurationSettings</param>
            <returns>A compoundConfigurationSettingsOptions object <see cref="T:Ellucian.Colleague.Dtos.CompoundConfigurationSettings"/> in HeDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController">
            <summary>
            Provides access to ConfigurationSettings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IConfigurationSettingsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ConfigurationSettingsController class.
            </summary>
            <param name="configurationSettingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IConfigurationSettingsService">IConfigurationSettingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.GetConfigurationSettingsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all configurationSettings
            </summary>
            <returns>List of ConfigurationSettings <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettings"/> objects representing matching configurationSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.GetConfigurationSettingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a configurationSettings using a GUID
            </summary>
            <param name="guid">GUID to desired configurationSettings</param>
            <returns>A configurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.GetConfigurationSettingsOptionsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all configurationSettings options
            </summary>
            <returns>List of ConfigurationSettings <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettingsOptions"/> objects representing matching configurationSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.GetConfigurationSettingsOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a configurationSettings using a GUID
            </summary>
            <param name="guid">GUID to desired configurationSettings</param>
            <returns>A configurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettingsOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.PutConfigurationSettingsAsync(System.String,Ellucian.Colleague.Dtos.ConfigurationSettings)">
            <summary>
            Update (PUT) an existing ConfigurationSettings
            </summary>
            <param name="guid">GUID of the configurationSettings to update</param>
            <param name="configurationSettings">DTO of the updated configurationSettings</param>
            <returns>A ConfigurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.PostConfigurationSettingsAsync(Ellucian.Colleague.Dtos.ConfigurationSettings)">
            <summary>
            Create (POST) a new configurationSettings
            </summary>
            <param name="configurationSettings">DTO of the new configurationSettings</param>
            <returns>A configurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettings"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.PutConfigurationSettingsOptionsAsync(Ellucian.Colleague.Dtos.ConfigurationSettingsOptions)">
            <summary>
            Update (PUT) an existing configurationSettingsOptions
            </summary>
            <param name="configurationSettings">DTO of the new configurationSettings</param>
            <returns>A configurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.PostConfigurationSettingsOptionsAsync(Ellucian.Colleague.Dtos.ConfigurationSettingsOptions)">
            <summary>
            Create (POST) a new configurationSettingsOptions
            </summary>
            <param name="configurationSettings">DTO of the new configurationSettings</param>
            <returns>A configurationSettings object <see cref="T:Ellucian.Colleague.Dtos.ConfigurationSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ConfigurationSettingsController.DeleteConfigurationSettingsAsync(System.String)">
            <summary>
            Delete (DELETE) a configurationSettings
            </summary>
            <param name="guid">GUID to desired configurationSettings</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.ContentKeysController">
            <summary>
            Provides access to Content Key data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ContentKeysController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IContentKeyService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="contentKeyService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IContentKeyService">IContentKeyService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ContentKeysController.GetContentKeyAsync(System.String)">
            <summary>
            Get a Content Key
            </summary>
            <param name="id">The encryption key ID to use to encrypt the content key</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Base.ContentKey">Content Key</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ContentKeysController.PostContentKeyAsync(Ellucian.Colleague.Dtos.Base.ContentKeyRequest)">
            <summary>
            Post an encrypted content key to have it decrypted
            </summary>
            <param name="contentKeyRequest">The <see cref="T:Ellucian.Colleague.Dtos.Base.ContentKeyRequest">Content Key Request</see></param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Base.ContentKey">Content Key</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CorrespondenceRequestsController">
            <summary>
            The CorrespondenceRequestsController provides access to retrieve and update a person's correspondence requests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CorrespondenceRequestsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.ICorrespondenceRequestsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Dependency Injection constructor for StudentDocumentsController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="correspondenceRequestsService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CorrespondenceRequestsController.GetCorrespondenceRequestsAsync(System.String)">
            <summary>
            Get all of a person's correspondence requests.
            </summary>
            <accessComments>
            Users may request their own correspondence requests.
            Proxy users who have been granted General Required Documents (CORD) proxy access permission
            may view the grantor's correspondence requests.
            </accessComments>
            <param name="personId">The Id of the person for whom to get correspondence requests</param>
            <returns>A list of CorrespondenceRequests objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the personId argument is null, empty,
            or the user does not have access to the person's correspondence requests</exception>        
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CorrespondenceRequestsController.PutAttachmentNotificationAsync(Ellucian.Colleague.Dtos.Base.CorrespondenceAttachmentNotification)">
            <summary>
            Used to notify back office users when a self-service user has uploaded a new attachment associated with one of their correspondence requests.
            If a status code has been specified, the status of the correspondence request will also be changed.
            </summary>
            <accessComments>
            Users may submit attachment notifications for their own correspondence requests.
            </accessComments>
            <param name="attachmentNotification">Object that contains the person Id, Communication code and optionally the assign date of the correspondence request.</param>
            <returns>The CorrespondenceRequest notified of an attachment</returns>
            <exception cref="!:HttpResponseException">Thrown if the personId or communication code properties of the input object are null, empty,
            if the correspondence request cannot be updated due to a record lock, 
            or if the user does not have access to the person's correspondence requests</exception> 
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CountiesController">
            <summary>
            Controller for county operations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountiesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Controllers.Base.CountiesController"/> class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountiesController.GetAsync">
            <summary>
            Gets information for all counties
            </summary>
            <returns>Collection of of counties</returns>
            <accessComments>
            Any authenticated user can retrieve county information
            </accessComments>
            <note>County information is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CountriesController">
            <summary>
            Provides a API controller for fetching country codes.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICountriesService,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CountriesController class.
            </summary>
            <param name="countriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICountriesService">ICountriesService</see></param>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.GetAsync">
            <summary>
            Gets information for all Country codes
            </summary>
            <returns>List of Country Dtos</returns>
            <note>Country codes are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.GetCountriesAsync">
            <summary>
            Return all countries
            </summary>
            <returns>List of Countries <see cref="T:Ellucian.Colleague.Dtos.Countries"/> objects representing matching countries</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.GetCountriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a countries using a GUID
            </summary>
            <param name="guid">GUID to desired countries</param>
            <returns>A countries object <see cref="T:Ellucian.Colleague.Dtos.Countries"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.PostCountriesAsync(Ellucian.Colleague.Dtos.Countries)">
            <summary>
            Create (POST) a new countries
            </summary>
            <param name="countries">DTO of the new countries</param>
            <returns>A countries object <see cref="T:Ellucian.Colleague.Dtos.Countries"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.PutCountriesAsync(System.String,Ellucian.Colleague.Dtos.Countries)">
            <summary>
            Update (PUT) an existing countries
            </summary>
            <param name="guid">GUID of the countries to update</param>
            <param name="countries">DTO of the updated countries</param>
            <returns>A countries object <see cref="T:Ellucian.Colleague.Dtos.Countries"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.DeleteCountriesAsync(System.String)">
            <summary>
            Delete (DELETE) a countries
            </summary>
            <param name="guid">GUID to desired countries</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.GetCountryIsoCodesAsync">
            <summary>
            Return all countryIsoCodes
            </summary>
            <returns>List of CountryIsoCodes <see cref="T:Ellucian.Colleague.Dtos.CountryIsoCodes"/> objects representing matching countryIsoCodes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.GetCountryIsoCodesByGuidAsync(System.String)">
            <summary>
            Read (GET) a countryIsoCodes using a GUID
            </summary>
            <param name="guid">GUID to desired countryIsoCodes</param>
            <returns>A countryIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.CountryIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.PostCountryIsoCodesAsync(Ellucian.Colleague.Dtos.CountryIsoCodes)">
            <summary>
            Create (POST) a new countryIsoCodes
            </summary>
            <param name="countryIsoCodes">DTO of the new countryIsoCodes</param>
            <returns>A countryIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.CountryIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.PutCountryIsoCodesAsync(System.String,Ellucian.Colleague.Dtos.CountryIsoCodes)">
            <summary>
            Update (PUT) an existing countryIsoCodes
            </summary>
            <param name="guid">GUID of the countryIsoCodes to update</param>
            <param name="countryIsoCodes">DTO of the updated countryIsoCodes</param>
            <returns>A countryIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.CountryIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CountriesController.DeleteCountryIsoCodesAsync(System.String)">
            <summary>
            Delete (DELETE) a countryIsoCodes
            </summary>
            <param name="guid">GUID to desired countryIsoCodes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController">
            <summary>
            Provides a API controller for fetching country codes.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICurrenciesService,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CurrenciesController class.
            </summary>
            <param name="currenciesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICurrenciesService">ICurrenciesService</see></param>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.GetCurrenciesAsync">
            <summary>
            Return all currencies
            </summary>
            <returns>List of Currencies <see cref="T:Ellucian.Colleague.Dtos.Currencies"/> objects representing matching currencies</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.GetCurrenciesByGuidAsync(System.String)">
            <summary>
            Read (GET) a currencies using a GUID
            </summary>
            <param name="guid">GUID to desired currencies</param>
            <returns>A currencies object <see cref="T:Ellucian.Colleague.Dtos.Currencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.PostCurrenciesAsync(Ellucian.Colleague.Dtos.Currencies)">
            <summary>
            Create (POST) a new currencies
            </summary>
            <param name="currencies">DTO of the new currencies</param>
            <returns>A currencies object <see cref="T:Ellucian.Colleague.Dtos.Currencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.PutCurrenciesAsync(System.String,Ellucian.Colleague.Dtos.Currencies)">
            <summary>
            Update (PUT) an existing currencies
            </summary>
            <param name="guid">GUID of the currencies to update</param>
            <param name="currencies">DTO of the updated currencies</param>
            <returns>A currencies object <see cref="T:Ellucian.Colleague.Dtos.Currencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.DeleteCurrenciesAsync(System.String)">
            <summary>
            Delete (DELETE) a currencies
            </summary>
            <param name="guid">GUID to desired currencies</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.GetCurrencyIsoCodesAsync">
            <summary>
            Return all currencyIsoCodes
            </summary>
            <returns>List of CurrencyIsoCodes <see cref="T:Ellucian.Colleague.Dtos.CurrencyIsoCodes"/> objects representing matching currencyIsoCodes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.GetCurrencyIsoCodesByGuidAsync(System.String)">
            <summary>
            Read (GET) a currencyIsoCodes using a GUID
            </summary>
            <param name="guid">GUID to desired currencyIsoCodes</param>
            <returns>A currencyIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.CurrencyIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.PostCurrencyIsoCodesAsync(Ellucian.Colleague.Dtos.CurrencyIsoCodes)">
            <summary>
            Create (POST) a new currencyIsoCodes
            </summary>
            <param name="currencyIsoCodes">DTO of the new currencyIsoCodes</param>
            <returns>A currencyIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.CurrencyIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.PutCurrencyIsoCodesAsync(System.String,Ellucian.Colleague.Dtos.CurrencyIsoCodes)">
            <summary>
            Update (PUT) an existing currencyIsoCodes
            </summary>
            <param name="guid">GUID of the currencyIsoCodes to update</param>
            <param name="currencyIsoCodes">DTO of the updated currencyIsoCodes</param>
            <returns>A currencyIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.CurrencyIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.CurrenciesController.DeleteCurrencyIsoCodesAsync(System.String)">
            <summary>
            Delete (DELETE) a currencyIsoCodes
            </summary>
            <param name="guid">GUID to desired currencyIsoCodes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController">
            <summary>
            Provides access to DefaultSettings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDefaultSettingsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the DefaultSettingsController class.
            </summary>
            <param name="defaultSettingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDefaultSettingsService">IDefaultSettingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.GetDefaultSettingsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all defaultSettings
            </summary>
            <returns>List of DefaultSettings <see cref="T:Ellucian.Colleague.Dtos.DefaultSettings"/> objects representing matching defaultSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.GetDefaultSettingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a defaultSettings using a GUID
            </summary>
            <param name="guid">GUID to desired defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.GetDefaultSettingsOptionsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all defaultSettings options
            </summary>
            <returns>List of DefaultSettings <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> objects representing matching defaultSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.GetDefaultSettingsOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a defaultSettings using a GUID
            </summary>
            <param name="guid">GUID to desired defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.GetDefaultSettingsAdvancedSearchOptionsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all defaultSettings advanced search options
            </summary>
            <returns>List of DefaultSettingsAdvancedSearchOptions <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> objects representing matching defaultSettingsAdvancedSearchOptions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.GetDefaultSettingsAdvancedSearchOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a defaultSettingsAdvancedSearchOptions using a GUID
            </summary>
            <param name="guid">GUID to desired defaultSettingsAdvancedSearchOptions</param>
            <returns>A defaultSettingsAdvancedSearchOptions object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsAdvancedSearchOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.PutDefaultSettingsAsync(System.String,Ellucian.Colleague.Dtos.DefaultSettings)">
            <summary>
            Update (PUT) an existing DefaultSettings
            </summary>
            <param name="guid">GUID of the defaultSettings to update</param>
            <param name="defaultSettings">DTO of the updated defaultSettings</param>
            <returns>A DefaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.PostDefaultSettingsAsync(Ellucian.Colleague.Dtos.DefaultSettings)">
            <summary>
            Create (POST) a new defaultSettings
            </summary>
            <param name="defaultSettings">DTO of the new defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettings"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.PutDefaultSettingsOptionsAsync(Ellucian.Colleague.Dtos.DefaultSettingsOptions)">
            <summary>
            Update (PUT) an existing defaultSettingsOptions
            </summary>
            <param name="defaultSettings">DTO of the new defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.PostDefaultSettingsOptionsAsync(Ellucian.Colleague.Dtos.DefaultSettingsOptions)">
            <summary>
            Create (POST) a new defaultSettingsOptions
            </summary>
            <param name="defaultSettings">DTO of the new defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.PutDefaultSettingsAdvancedSearchOptionsAsync(Ellucian.Colleague.Dtos.DefaultSettingsOptions)">
            <summary>
            Update (PUT) an existing defaultSettingsAdvancedSearchOptions
            </summary>
            <param name="defaultSettings">DTO of the new defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.PostDefaultSettingsAdvancedSearchOptionsAsync(Ellucian.Colleague.Dtos.DefaultSettingsOptions)">
            <summary>
            Create (POST) a new defaultSettingsAdvancedSearchOptions
            </summary>
            <param name="defaultSettings">DTO of the new defaultSettings</param>
            <returns>A defaultSettings object <see cref="T:Ellucian.Colleague.Dtos.DefaultSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.DefaultSettingsController.DeleteDefaultSettingsAsync(System.String)">
            <summary>
            Delete (DELETE) a defaultSettings
            </summary>
            <param name="guid">GUID to desired defaultSettings</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController">
            <summary>
            Provides access to EmailType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IEmailTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmailTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="emailTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmailTypeService">IEmailTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.GetEmailTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all email types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.EmailType">EmailType</see> objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.GetEmailTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves an email type by GUID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.EmailType">EmailType</see> object.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.GetAsync">
            <summary>
            Retrieves email types
            </summary>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Base.EmailType">EmailType</see> objects></returns>
            <note>email-types is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.DeleteEmailTypesAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing Email type in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the Email Type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.PutEmailTypesAsync(Ellucian.Colleague.Dtos.EmailType)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update an Email Type Record in Colleague (Not Supported)
            </summary>
            <param name="EmailType"><see cref="T:Ellucian.Colleague.Dtos.Base.EmailType">EmailType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmailTypesController.PostEmailTypesAsync(Ellucian.Colleague.Dtos.EmailType)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create an Email Type Record in Colleague (Not Supported)
            </summary>
            <param name="EmailType"><see cref="T:Ellucian.Colleague.Dtos.Base.EmailType">EmailType</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController">
            <summary>
            Provides access to EmergencyContactPhoneAvailabilities
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEmergencyContactPhoneAvailabilitiesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmergencyContactPhoneAvailabilitiesController class.
            </summary>
            <param name="emergencyContactPhoneAvailabilitiesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmergencyContactPhoneAvailabilitiesService">IEmergencyContactPhoneAvailabilitiesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController.GetEmergencyContactPhoneAvailabilitiesAsync">
            <summary>
            Return all emergencyContactPhoneAvailabilities
            </summary>
            <returns>List of EmergencyContactPhoneAvailabilities <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactPhoneAvailabilities"/> objects representing matching emergencyContactPhoneAvailabilities</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController.GetEmergencyContactPhoneAvailabilitiesByGuidAsync(System.String)">
            <summary>
            Read (GET) a emergencyContactPhoneAvailabilities using a GUID
            </summary>
            <param name="guid">GUID to desired emergencyContactPhoneAvailabilities</param>
            <returns>A emergencyContactPhoneAvailabilities object <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactPhoneAvailabilities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController.PostEmergencyContactPhoneAvailabilitiesAsync(Ellucian.Colleague.Dtos.EmergencyContactPhoneAvailabilities)">
            <summary>
            Create (POST) a new emergencyContactPhoneAvailabilities
            </summary>
            <param name="emergencyContactPhoneAvailabilities">DTO of the new emergencyContactPhoneAvailabilities</param>
            <returns>A emergencyContactPhoneAvailabilities object <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactPhoneAvailabilities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController.PutEmergencyContactPhoneAvailabilitiesAsync(System.String,Ellucian.Colleague.Dtos.EmergencyContactPhoneAvailabilities)">
            <summary>
            Update (PUT) an existing emergencyContactPhoneAvailabilities
            </summary>
            <param name="guid">GUID of the emergencyContactPhoneAvailabilities to update</param>
            <param name="emergencyContactPhoneAvailabilities">DTO of the updated emergencyContactPhoneAvailabilities</param>
            <returns>A emergencyContactPhoneAvailabilities object <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactPhoneAvailabilities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactPhoneAvailabilitiesController.DeleteEmergencyContactPhoneAvailabilitiesAsync(System.String)">
            <summary>
            Delete (DELETE) a emergencyContactPhoneAvailabilities
            </summary>
            <param name="guid">GUID to desired emergencyContactPhoneAvailabilities</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController">
            <summary>
            Provides access to EmergencyContactTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEmergencyContactTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmergencyContactTypesController class.
            </summary>
            <param name="emergencyContactTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmergencyContactTypesService">IEmergencyContactTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController.GetEmergencyContactTypesAsync">
            <summary>
            Return all emergencyContactTypes
            </summary>
            <returns>List of EmergencyContactTypes <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactTypes"/> objects representing matching emergencyContactTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController.GetEmergencyContactTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a emergencyContactTypes using a GUID
            </summary>
            <param name="guid">GUID to desired emergencyContactTypes</param>
            <returns>A emergencyContactTypes object <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController.PostEmergencyContactTypesAsync(Ellucian.Colleague.Dtos.EmergencyContactTypes)">
            <summary>
            Create (POST) a new emergencyContactTypes
            </summary>
            <param name="emergencyContactTypes">DTO of the new emergencyContactTypes</param>
            <returns>A emergencyContactTypes object <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController.PutEmergencyContactTypesAsync(System.String,Ellucian.Colleague.Dtos.EmergencyContactTypes)">
            <summary>
            Update (PUT) an existing emergencyContactTypes
            </summary>
            <param name="guid">GUID of the emergencyContactTypes to update</param>
            <param name="emergencyContactTypes">DTO of the updated emergencyContactTypes</param>
            <returns>A emergencyContactTypes object <see cref="T:Ellucian.Colleague.Dtos.EmergencyContactTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmergencyContactTypesController.DeleteEmergencyContactTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a emergencyContactTypes
            </summary>
            <param name="guid">GUID to desired emergencyContactTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController">
            <summary>
            Provides access to EmploymentVocations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEmploymentVocationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentVocationsController class.
            </summary>
            <param name="employmentVocationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmploymentVocationService">IEmploymentVocationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController.GetEmploymentVocationsAsync">
            <summary>
            Return all employmentVocations
            </summary>
            <returns>List of EmploymentVocation <see cref="T:Ellucian.Colleague.Dtos.EmploymentVocation"/> objects representing matching employmentVocations</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController.GetEmploymentVocationByGuidAsync(System.String)">
            <summary>
            Read (GET) a employmentVocation using a GUID
            </summary>
            <param name="guid">GUID to desired employmentVocation</param>
            <returns>A employmentVocations object <see cref="T:Ellucian.Colleague.Dtos.EmploymentVocation"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController.PostEmploymentVocationAsync(Ellucian.Colleague.Dtos.EmploymentVocation)">
            <summary>
            Create (POST) a new employmentVocation
            </summary>
            <param name="employmentVocation">DTO of the new employmentVocation</param>
            <returns>A employmentVocations object <see cref="T:Ellucian.Colleague.Dtos.EmploymentVocation"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController.PutEmploymentVocationAsync(System.String,Ellucian.Colleague.Dtos.EmploymentVocation)">
            <summary>
            Update (PUT) an existing employmentVocation
            </summary>
            <param name="guid">GUID of the employmentVocation to update</param>
            <param name="employmentVocation">DTO of the updated employmentVocation</param>
            <returns>A employmentVocation object <see cref="T:Ellucian.Colleague.Dtos.EmploymentVocation"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EmploymentVocationsController.DeleteEmploymentVocationAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentVocation
            </summary>
            <param name="guid">GUID to desired employmentVocation</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController">
            <summary>
            Provides access to Ethnicity data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EthnicitiesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.GetAsync">
            <summary>
            Gets all of the ethnicities.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Ethnicity">Ethnicities</see></returns>
            <note>Ethnicity data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.GetEthnicities2Async">
            <remarks>For use with Ellucian EEDM Version 6</remarks>
            <summary>
            Retrieves all ethnicities. If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All Ethnicity objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.GetEthnicityById2Async(System.String)">
            <remarks>For use with Ellucian EEDM Version 4</remarks>
            <summary>
            Retrieves an ethnicity by ID.
            </summary>
            <returns>An Ethnicity</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.PutEthnicitiesAsync(Ellucian.Colleague.Dtos.Ethnicity2)">
            <summary>
            Updates a Ethnicity.
            </summary>
            <param name="ethnicity"><see cref="!:Ethnicity2">Ethnicity</see> to update</param>
            <returns>Newly updated <see cref="!:Ethnicity2">Ethnicity</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.PostEthnicitiesAsync(Ellucian.Colleague.Dtos.Ethnicity2)">
            <summary>
            Creates a Ethnicity.
            </summary>
            <param name="ethnicity">Ethnicity to create</param>
            <returns>Newly created Ethnicity</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthnicitiesController.DeleteEthnicitiesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Ethnicity
            </summary>
            <param name="id">Id of the Ethnicity to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController">
            <summary>
            Provides access to EthosApiBuilder data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEthosApiBuilderService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EthosApiBuilderController class.
            </summary>
            <param name="ethosApiBuilderService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEthosApiBuilderService">IEthosApiBuilderService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetEthosApiBuilderAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.String,Ellucian.Web.Http.Models.Paging,Ellucian.Colleague.Dtos.EthosApiBuilder)">
            <summary>
            Respond to route and execute the appropriate method
            </summary>
            <param name="routeInfo">Data about the route</param>
            <param name="configuration"></param>
            <param name="extendedEthosVersion"></param>
            <param name="id"></param>
            <param name="page"></param>
            <param name="ethosApiBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetEthosApiBuilderAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,Ellucian.Web.Http.Models.Paging)">
            <summary>
            Gets all data records for a single API extension
            </summary>
            <param name="routeInfo">Data about the route</param>
            <param name="configuration"></param>
            <param name="extendedEthosVersion"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetEthosApiBuilderByIdAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.String)">
            <summary>
            Retrieves a single record by ID for extended data.
            </summary>
            <param name="routeInfo">Data about the route</param>
            <param name="configuration"></param>
            <param name="extendedEthosVersion"></param>
            <param name="id">Id of record to retrieve.</param>
            <returns>An extended data object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.PostEthosApiBuilderAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,Ellucian.Colleague.Dtos.EthosApiBuilder)">
            <summary>
            Creates a EthosApiBuilder.
            </summary>
            <param name="routeInfo">Data about the route</param>
            <param name="configuration"></param>
            <param name="extendedEthosVersion"></param>
            <param name="ethosApiBuilder"><see cref="T:Ellucian.Colleague.Dtos.EthosApiBuilder">ethosApiBuilder</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.EthosApiBuilder">EthosApiBuilder</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.PutEthosApiBuilderAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.String,Ellucian.Colleague.Dtos.EthosApiBuilder)">
            <summary>
            Updates a person visa.
            </summary>
            <param name="routeInfo">Data about the route</param>
            <param name="configuration"></param>
            <param name="extendedEthosVersion"></param>
            <param name="id">id of the ethosApiBuilder to update</param>
            <param name="ethosApiBuilder"><see cref="T:Ellucian.Colleague.Dtos.EthosApiBuilder">ethosApiBuilder</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.EthosApiBuilder">Dtos.EthosApiBuilder</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.DeleteEthosApiBuilderAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.String)">
            <summary>
            Delete (DELETE) a record from an extended data set
            </summary>
            <param name="routeInfo">Data about the route</param>
            <param name="configuration"></param>
            <param name="extendedEthosVersion"></param>
            <param name="id">id of the record to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetAlternativeRouteOrNotAcceptable(Ellucian.Colleague.Dtos.EthosApiBuilder,System.String,System.String,Ellucian.Web.Http.Models.Paging)">
            <summary>
            Respond to route and execute the appropriate method.  This will only be hit if there are routes defined on the resource, therefore always return a 406 if an error occurs.
            </summary>       
            <param name="id"></param>
            <param name="resource"></param>
            <param name="page"></param>
            <param name="ethosApiBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.Validate(Ellucian.Colleague.Dtos.EthosApiBuilder)">
            <summary>
            Check for all required fields
            </summary>
            <param name="ethosApiBuilder">ethosApiBuilder</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetEthosResourceRouteInfo(System.String,System.Boolean)">
            <summary>
            Gets Ethos Resource information from route
            </summary>
            <param name="resource">Name of the API or resource name</param>
            <param name="alternativeRepresenation">Boolean to use alternative representation from route.</param>
            <returns>EthosResourceRouteInfo</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ExtractVersionNumberOnly(System.String)">
            <summary>
            Extract a version number from the routing request Accept header.
            </summary>
            <param name="original">Original Accept Header submitted with request.</param>
            <returns>Version number from the request Accept Header.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetApiConfiguration(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,System.Boolean)">
            <summary>
            Get the API configuration for an API
            </summary>
            <param name="routeInfo">Object containing information about a route.</param>
            <param name="bypassCache">Boolean set to true to retrieve data fresh from Colleague, set to false to use cache.</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ConfigurePage(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Configuration the Paging parameters for an API
            </summary>
            <param name="page"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetEthosExtendedFilters">
            <summary>
            Extract the query string from the URL as a filter object
            </summary>
            <returns>>Tuple containing path, oper, and values.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ValidateFilterParametersAsync(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Collections.Generic.List{System.String},System.String}},Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.Boolean)">
            <summary>
            Validate query string on filters to include filters in GET all by filters.
            Also include key query filters if requested for PUT or POST transactions so
            that they can assemble a valid key for the subsequent GET by ID operation.
            </summary>
            <param name="filterDictionary">Dictionary of valid filters from configuration</param>
            <param name="extendedEthosVersion">Version Configuration data</param>
            <param name="includeKeys">Include Key Query filters for PUT and POST only.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.CompareKeyValues(System.String,System.String)">
            <summary>
            Compare two key values whereby each key component may be in a different order than the other
            but the two keys are still considered equal as long as each component in one exists in the other.
            </summary>
            <param name="id1">First key to compare</param>
            <param name="id2">Second key to compare against first key</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.BuildRecordKeyFromFilterData(System.Tuple{System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String}},Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.String)">
            <summary>
            Using the filters defined for key component queries, build a record key string.
            </summary>
            <param name="extendedKeyDictionaries">Key Component Dictionary</param>
            <param name="extendedEthosVersion">Version specific configuration</param>
            <param name="apiType">Api Type of A (Spec based API), E or "" (Extensions to API), or T (Business Process API)</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ValidateIdsFromQueryAsync(Ellucian.Web.Http.EthosExtend.EthosResourceRouteInfo,Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.Boolean)">
            <summary>
            Validate the ID properties defined in a query string.
            </summary>
            <param name="routeInfo">Object containing route information</param>
            <param name="extendedEthosVersion">Version Specific Configuration</param>
            <param name="ignoreErrors">Flag to ignore any errors or exceptions</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.GetIdPropertyFromBody(System.Tuple{System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String}},Ellucian.Web.Http.EthosExtend.EthosExtensibleData,System.String,System.String,System.String)">
            <summary>
            Extract the ID properties from the Json BODY of a QAPI or PUT or POST request.
            </summary>
            <param name="extendedKeyDictionaries">Tuple containing Key Dictionaries with information about a key property</param>
            <param name="extendedEthosVersion">Version specific configuration</param>
            <param name="apiType">Api Type of A (Spec based API), E or "" (Extensions to API), or T (Business Process API)</param>
            <param name="primaryEntity">Primary entity as defined by the configuration</param>
            <param name="primaryGuidSource">indicator to see if the API has GUID support</param>
            <returns>String containing the ID for the record being processed.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ParseJsonStringValues(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Collections.Generic.List{System.String},System.String}})">
            <summary>
            Parse JSON object values from a JSON string
            </summary>
            <param name="value">JSON string to deserialize into a JSON object</param>
            <param name="queryName">Name of query being parsed for purposes of reporting an error</param>
            <param name="extendedFilterDefinitions">>Tuple containing path, oper, and values.</param>
            <returns>>Tuple containing path, oper, and values.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ProcessTokens(Newtonsoft.Json.Linq.JToken,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Collections.Generic.List{System.String},System.String}})">
            <summary>
            Process Children of a token to extract path, oper and values for a filter
            </summary>
            <param name="jToken">JSON object token</param>
            <param name="extendedFilterDefinitions">>Tuple containing path, oper, and values.</param>
            <param name="queryName">Query Name that filters may belong to for reporting issues with JSON parsing.</param>
            <param name="propertyName">A property name that may also apply for reporting issues in JSON parsing.</param>
            <returns>Tuple containing path, oper, and values.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.EthosApiBuilderController.ProcessArrayTokens(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Collections.Generic.List{System.String},System.String}})">
            <summary>
            Process Children of a token to extract path, oper and values for a filter
            </summary>
            <param name="cToken"></param>
            <param name="extendedFilterDefinitions"></param>
            <returns>Tuple containing path, oper, and values.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController">
            <summary>
            Provides access to ExternalEmploymentPositions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IExternalEmploymentPositionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ExternalEmploymentPositionsController class.
            </summary>
            <param name="externalEmploymentPositionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IExternalEmploymentPositionsService">IExternalEmploymentPositionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController.GetExternalEmploymentPositionsAsync">
            <summary>
            Return all externalEmploymentPositions
            </summary>
            <returns>List of ExternalEmploymentPositions <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentPositions"/> objects representing matching externalEmploymentPositions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController.GetExternalEmploymentPositionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a externalEmploymentPositions using a GUID
            </summary>
            <param name="guid">GUID to desired externalEmploymentPositions</param>
            <returns>A externalEmploymentPositions object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentPositions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController.PostExternalEmploymentPositionsAsync(Ellucian.Colleague.Dtos.ExternalEmploymentPositions)">
            <summary>
            Create (POST) a new externalEmploymentPositions
            </summary>
            <param name="externalEmploymentPositions">DTO of the new externalEmploymentPositions</param>
            <returns>A externalEmploymentPositions object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentPositions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController.PutExternalEmploymentPositionsAsync(System.String,Ellucian.Colleague.Dtos.ExternalEmploymentPositions)">
            <summary>
            Update (PUT) an existing externalEmploymentPositions
            </summary>
            <param name="guid">GUID of the externalEmploymentPositions to update</param>
            <param name="externalEmploymentPositions">DTO of the updated externalEmploymentPositions</param>
            <returns>A externalEmploymentPositions object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentPositions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentPositionsController.DeleteExternalEmploymentPositionsAsync(System.String)">
            <summary>
            Delete (DELETE) a externalEmploymentPositions
            </summary>
            <param name="guid">GUID to desired externalEmploymentPositions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController">
            <summary>
            Provides access to ExternalEmployments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IExternalEmploymentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ExternalEmploymentsController class.
            </summary>
            <param name="externalEmploymentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IExternalEmploymentsService">IExternalEmploymentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController.GetExternalEmploymentsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all externalEmployments
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of ExternalEmployments <see cref="T:Ellucian.Colleague.Dtos.ExternalEmployments"/> objects representing matching externalEmployments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController.GetExternalEmploymentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a externalEmployments using a GUID
            </summary>
            <param name="guid">GUID to desired externalEmployments</param>
            <returns>A externalEmployments object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmployments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController.PostExternalEmploymentsAsync(Ellucian.Colleague.Dtos.ExternalEmployments)">
            <summary>
            Create (POST) a new externalEmployments
            </summary>
            <param name="externalEmployments">DTO of the new externalEmployments</param>
            <returns>A externalEmployments object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmployments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController.PutExternalEmploymentsAsync(System.String,Ellucian.Colleague.Dtos.ExternalEmployments)">
            <summary>
            Update (PUT) an existing externalEmployments
            </summary>
            <param name="guid">GUID of the externalEmployments to update</param>
            <param name="externalEmployments">DTO of the updated externalEmployments</param>
            <returns>A externalEmployments object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmployments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentsController.DeleteExternalEmploymentsAsync(System.String)">
            <summary>
            Delete (DELETE) a externalEmployments
            </summary>
            <param name="guid">GUID to desired externalEmployments</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController">
            <summary>
            Provides access to ExternalEmploymentStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IExternalEmploymentStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ExternalEmploymentStatusesController class.
            </summary>
            <param name="externalEmploymentStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IExternalEmploymentStatusesService">IExternalEmploymentStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController.GetExternalEmploymentStatusesAsync">
            <summary>
            Return all externalEmploymentStatuses
            </summary>
            <returns>List of ExternalEmploymentStatuses <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentStatuses"/> objects representing matching externalEmploymentStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController.GetExternalEmploymentStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a externalEmploymentStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired externalEmploymentStatuses</param>
            <returns>A externalEmploymentStatuses object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController.PostExternalEmploymentStatusesAsync(Ellucian.Colleague.Dtos.ExternalEmploymentStatuses)">
            <summary>
            Create (POST) a new externalEmploymentStatuses
            </summary>
            <param name="externalEmploymentStatuses">DTO of the new externalEmploymentStatuses</param>
            <returns>A externalEmploymentStatuses object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController.PutExternalEmploymentStatusesAsync(System.String,Ellucian.Colleague.Dtos.ExternalEmploymentStatuses)">
            <summary>
            Update (PUT) an existing externalEmploymentStatuses
            </summary>
            <param name="guid">GUID of the externalEmploymentStatuses to update</param>
            <param name="externalEmploymentStatuses">DTO of the updated externalEmploymentStatuses</param>
            <returns>A externalEmploymentStatuses object <see cref="T:Ellucian.Colleague.Dtos.ExternalEmploymentStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ExternalEmploymentStatusesController.DeleteExternalEmploymentStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a externalEmploymentStatuses
            </summary>
            <param name="guid">GUID to desired externalEmploymentStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.FilesController">
            <summary>
            Provides access to report files
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.FilesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IReportFileService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes the FilesController
            </summary>
            <param name="reportFileService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.FilesController.GetFilesAsync(System.String,System.String)">
            <summary>
            Retrieves a report file from the server
            </summary>
            <param name="location">Location key</param>
            <param name="fileName">File name</param>
            <accessComments>User can only retrieve files from locations that are accessible to their security class.</accessComments>
            <returns>The file contents. Content-Type will always be application/octet-stream</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController">
            <summary>
            Provides access to GenderIdentityType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IGenderIdentityTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GenderIdentityTypesController class.
            </summary>
            <param name="genderIdentityTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IGenderIdentityTypeService">IGenderIdentityTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.GetAsync">
            <summary>
            Retrieves gender identity types
            </summary>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Base.GenderIdentityType">GenderIdentityType</see> objects></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.GetGenderIdentitiesAsync">
            <summary>
            Return all genderIdentities
            </summary>
            <returns>List of GenderIdentities <see cref="T:Ellucian.Colleague.Dtos.GenderIdentities"/> objects representing matching genderIdentities</returns>         
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.GetGenderIdentitiesByGuidAsync(System.String)">
            <summary>
            Read (GET) a genderIdentities using a GUID
            </summary>
            <param name="guid">GUID to desired genderIdentities</param>
            <returns>A genderIdentities object <see cref="T:Ellucian.Colleague.Dtos.GenderIdentities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.PostGenderIdentitiesAsync(Ellucian.Colleague.Dtos.GenderIdentities)">
            <summary>
            Create (POST) a new genderIdentities
            </summary>
            <param name="genderIdentities">DTO of the new genderIdentities</param>
            <returns>A genderIdentities object <see cref="T:Ellucian.Colleague.Dtos.GenderIdentities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.PutGenderIdentitiesAsync(System.String,Ellucian.Colleague.Dtos.GenderIdentities)">
            <summary>
            Update (PUT) an existing genderIdentities
            </summary>
            <param name="guid">GUID of the genderIdentities to update</param>
            <param name="genderIdentities">DTO of the updated genderIdentities</param>
            <returns>A genderIdentities object <see cref="T:Ellucian.Colleague.Dtos.GenderIdentities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GenderIdentityTypesController.DeleteGenderIdentitiesAsync(System.String)">
            <summary>
            Delete (DELETE) a genderIdentities
            </summary>
            <param name="guid">GUID to desired genderIdentities</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GendersController">
            <summary>
            Provides access to GenderIdentityType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GendersController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IGenderService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GendersController class.
            </summary>
            <param name="genderService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IGenderService">IGenderService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GendersController.GetGendersAsync">
            <summary>
            Return all genders
            </summary>
            <returns>List of Genders <see cref="T:Ellucian.Colleague.Dtos.Genders"/> objects representing matching genders</returns>         
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GendersController.GetGendersByGuidAsync(System.String)">
            <summary>
            Read (GET) a gender using a GUID
            </summary>
            <param name="guid">GUID to desired gender</param>
            <returns>A genders object <see cref="T:Ellucian.Colleague.Dtos.Genders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GendersController.PostGendersAsync(Ellucian.Colleague.Dtos.Genders)">
            <summary>
            Create (POST) a new gender
            </summary>
            <param name="gender">DTO of the new gender</param>
            <returns>A genders object <see cref="T:Ellucian.Colleague.Dtos.Genders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GendersController.PutGendersAsync(System.String,Ellucian.Colleague.Dtos.Genders)">
            <summary>
            Update (PUT) an existing gender
            </summary>
            <param name="guid">GUID of the gender to update</param>
            <param name="gender">DTO of the updated gender</param>
            <returns>A genders object <see cref="T:Ellucian.Colleague.Dtos.Genders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GendersController.DeleteGendersAsync(System.String)">
            <summary>
            Delete (DELETE) a gender
            </summary>
            <param name="guid">GUID to desired gender</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController">
            <summary>
            Provides access to Geographic Area Types data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IGeographicAreaService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GeographicAreasController class.
            </summary>
            <param name="geographicAreaService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IGeographicAreaService">IGeographicAreaService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController.GetGeographicAreasAsync(Ellucian.Web.Http.Models.Paging)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves all geographic areas.
            </summary>
            <returns>All GeographicArea objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController.GetGeographicAreaByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves a geographic area by ID.
            </summary>
            <returns>A <see cref="!:Ellucian.Colleague.Dtos.GeographicAreas">GeographicArea.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController.PutGeographicAreaAsync(Ellucian.Colleague.Dtos.GeographicArea)">
            <summary>
            Updates a GeographicArea.
            </summary>
            <param name="geographicArea"><see cref="!:GeographicArea">GeographicArea</see> to update</param>
            <returns>Newly updated <see cref="!:GeographicArea">GeographicArea</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController.PostGeographicAreaAsync(Ellucian.Colleague.Dtos.GeographicArea)">
            <summary>
            Creates a GeographicArea.
            </summary>
            <param name="geographicArea"><see cref="!:GeographicArea">GeographicArea</see> to create</param>
            <returns>Newly created <see cref="!:GeographicArea">GeographicArea</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreasController.DeleteGeographicAreaAsync(System.String)">
            <summary>
            Delete (DELETE) an existing GeographicArea
            </summary>
            <param name="id">Id of the GeographicArea to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController">
            <summary>
            Provides access to Geographic Area Types data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GeographicAreaTypesController class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController.GetGeographicAreaTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves all geographic area types.
            </summary>
            <returns>All GeographicAreaType objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController.GetGeographicAreaTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves a geographic area types by ID.
            </summary>
            <returns>A <see cref="!:Ellucian.Colleague.Dtos.GeographicAreaTypes">GeographicAreaType.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController.PutGeographicAreaTypeAsync(Ellucian.Colleague.Dtos.GeographicAreaType)">
            <summary>
            Updates a GeographicAreaType.
            </summary>
            <param name="geographicAreaType"><see cref="!:GeographicAreaType">GeographicAreaType</see> to update</param>
            <returns>Newly updated <see cref="!:GeographicAreaType">GeographicAreaType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController.PostGeographicAreaTypeAsync(Ellucian.Colleague.Dtos.GeographicAreaType)">
            <summary>
            Creates a GeographicAreaType.
            </summary>
            <param name="geographicAreaType"><see cref="!:GeographicAreaType">GeographicAreaType</see> to create</param>
            <returns>Newly created <see cref="!:GeographicAreaType">GeographicAreaType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GeographicAreaTypesController.DeleteGeographicAreaTypeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing GeographicAreaType
            </summary>
            <param name="id">Id of the GeographicAreaType to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController">
            <summary>
            Provide access to grade change reason
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IGradeChangeReasonService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GradeChangeReasonController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="gradeChangeReasonService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IGradeChangeReasonService">IGradeChangeReasonService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController.GetGradeChangeReasonsAsync">
            <summary>
            Retrieves information for all grade change reasons.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.GradeChangeReason">GradeChangeReasons</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController.GetGradeChangeReasonByIdAsync(System.String)">
            <summary>
            Retrieves grade change reason by id
            </summary>
            <param name="id">The id of the grade change reason</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.GradeChangeReason">GradeChangeReason</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController.PostGradeChangeReasonAsync(Ellucian.Colleague.Dtos.GradeChangeReason)">
            <summary>
            Create a grade change reason
            </summary>
            <param name="gradeChangeReason">grade</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.GradeChangeReason"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController.PutGradeChangeReasonAsync(System.String,Ellucian.Colleague.Dtos.GradeChangeReason)">
            <summary>
            Update a grade change reason
            </summary>
            <param name="id">desired id for a grade change reason</param>
            <param name="gradeChangeReason">grade change reason</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.GradeChangeReason"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeChangeReasonsController.DeleteGradeChangeReasonByIdAsync(System.String)">
            <summary>
            Delete (DELETE) a grade change reason
            </summary>
            <param name="id">id to desired grade change reason</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.GradeChangeReason"/> in HeDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GradeModesController">
            <summary>
            Provide access to grade mode
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeModesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GradeModeController class.
            </summary>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeModesController.GetGradeModes2Async">
            <summary>
            Retrieves information for all grade modes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.GradeMode">GradeModes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeModesController.GetGradeModeById2Async(System.String)">
            <summary>
            Retrieves grade mode by id
            </summary>
            <param name="id">The id of the grade mode</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.GradeMode">GradeMode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeModesController.PostGradeModeAsync(Ellucian.Colleague.Dtos.GradeMode)">
            <summary>
            Create a grade mode
            </summary>
            <param name="gradeMode">grade</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.GradeMode"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeModesController.PutGradeModeAsync(System.String,Ellucian.Colleague.Dtos.GradeMode)">
            <summary>
            Update a grade mode
            </summary>
            <param name="id">desired id for a grade mode</param>
            <param name="gradeMode">grade mode</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.GradeMode"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GradeModesController.DeleteGradeModeByIdAsync(System.String)">
            <summary>
            Delete (DELETE) a grade mode
            </summary>
            <param name="id">id to desired grade mode</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.GradeMode"/> in HeDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController">
            <summary>
            Provides access to GraduationTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IGraduationTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GraduationTypesController class.
            </summary>
            <param name="adapterRegistry"></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="graduationTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IGraduationTypesService">IGraduationTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController.GetGraduationTypesAsync">
            <summary>
            Return all graduationTypes
            </summary>
            <returns>List of GraduationTypes <see cref="T:Ellucian.Colleague.Dtos.Base.GraduationTypes"/> objects representing matching graduationTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController.GetGraduationTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a graduationTypes using a ID
            </summary>
            <param name="id">ID to desired graduationTypes</param>
            <returns>A graduationTypes object <see cref="T:Ellucian.Colleague.Dtos.Base.GraduationTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController.PostGraduationTypesAsync(Ellucian.Colleague.Dtos.Base.GraduationTypes)">
            <summary>
            Create (POST) a new graduationTypes
            </summary>
            <param name="graduationTypes">DTO of the new graduationTypes</param>
            <returns>A graduationTypes object <see cref="T:Ellucian.Colleague.Dtos.Base.GraduationTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController.PutGraduationTypesAsync(Ellucian.Colleague.Dtos.Base.GraduationTypes)">
            <summary>
            Update (PUT) an existing graduationTypes
            </summary>
            <param name="graduationTypes">DTO of the updated graduationTypes</param>
            <returns>A graduationTypes object <see cref="T:Ellucian.Colleague.Dtos.Base.GraduationTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.GraduationTypesController.DeleteGraduationTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a graduationTypes
            </summary>
            <param name="id">ID to desired graduationTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.HealthController">
            <summary>
            Provides specific status information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.HealthController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IHealthCheckService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Colleague.Api.Utility.AppConfigUtility)">
            <summary>
            Initializes a new instance of the HealthCheckController class.
            </summary>
            <param name="healthCheckService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IHealthCheckService">IHealthCheckService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings">API settings</param>
            <param name="actionContextAccessor"></param>
            <param name="appConfigUtility"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.HealthController.GetApplicationHealthCheckAsync(System.String)">
            <summary>
            Retrieves status information for the Colleague Web API.
            </summary>
            <returns>Status information.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController">
            <summary>
            Provides access to Identity Document Types data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the IdentityDocumentTypesController class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController.GetIdentityDocumentTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 5</remarks>
            <summary>
            Retrieves all identity document types.
            </summary>
            <returns>All IdentityDocumentTypes objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController.GetIdentityDocumentTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 5</remarks>
            <summary>
            Retrieves a identity document type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.IdentityDocumentType">IdentityDocumentType.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController.PutIdentityDocumentTypeAsync(Ellucian.Colleague.Dtos.IdentityDocumentType)">
            <summary>
            Updates a IdentityDocumentType.
            </summary>
            <param name="identityDocumentType"><see cref="T:Ellucian.Colleague.Dtos.IdentityDocumentType">IdentityDocumentType</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.IdentityDocumentType">IdentityDocumentType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController.PostIdentityDocumentTypeAsync(Ellucian.Colleague.Dtos.IdentityDocumentType)">
            <summary>
            Creates a IdentityDocumentType.
            </summary>
            <param name="identityDocumentType"><see cref="T:Ellucian.Colleague.Dtos.IdentityDocumentType">IdentityDocumentType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.IdentityDocumentType">IdentityDocumentType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityDocumentTypesController.DeleteIdentityDocumentTypeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing IdentityDocumentType
            </summary>
            <param name="id">Id of the IdentityDocumentTypes to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.IdentityProfileRolesController">
            <summary>
            Provides access to identity profile roles
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityProfileRolesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IIdentityProfileRolesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Controllers.Base.IdentityProfileRolesController"/>.
            </summary>
            <param name="identityProfileRolesService">Identity role service instance</param>
            <param name="logger">Logger intance</param>
            <param name="actionContextAccessor">Context accessor</param>
            <param name="apiSettings">Api settings</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.IdentityProfileRolesController.GetIdentityProfileRolesAsync">
            <summary>
            Get a list of all active identity roles.
            </summary>
            <returns>List of all identity role titles</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController">
            <summary>
            Provides access to Instructional Platform data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IInstructionalPlatformService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructionalPlatformsController class.
            </summary>
            <param name="instructionalPlatformService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IInstructionalPlatformService">IInstructionalPlatformService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController.GetInstructionalPlatformsAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Instructional Platforms.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.InstructionalPlatform"> </see>InstructionalPlatform.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController.GetInstructionalPlatformsByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Instructional Platform by GUID.
            </summary>
            <param name="id">Id of the Instructional Platform to retrieve</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.InstructionalPlatform">InstructionalPlatform </see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController.PostInstructionalPlatformsAsync(Ellucian.Colleague.Dtos.InstructionalPlatform)">
            <summary>
            Creates a instructionalPlatform.
            </summary>
            <param name="instructionalPlatform"><see cref="T:Ellucian.Colleague.Dtos.InstructionalPlatform">InstructionalPlatform</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.InstructionalPlatform">InstructionalPlatform</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController.PutInstructionalPlatformsAsync(System.String,Ellucian.Colleague.Dtos.InstructionalPlatform)">
            <summary>
            Creates a instructionalPlatform.
            </summary>
            <param name="id">Id of InstructionalPlatform to create</param>
            <param name="instructionalPlatform"><see cref="T:Ellucian.Colleague.Dtos.InstructionalPlatform">InstructionalPlatform</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.InstructionalPlatform">InstructionalPlatform</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.InstructionalPlatformsController.DeleteInstructionalPlatformsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Intructional Platform
            </summary>
            <param name="id">Id of the Instructional Platform to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController">
            <summary>
            Provides access to LocationType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.ILocationTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LocationTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="locationTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ILocationTypeService">ILocationTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController.GetLocationTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all location types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.LocationTypeItem">EmailType</see> objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController.GetLocationTypeByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an location type by GUID.
            </summary>
            /// <param name="id">Unique ID representing the Location Type to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.LocationTypeItem">LocationType</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController.DeleteLocationTypes(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing Location type in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the Location Type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController.PutLocationTypes(Ellucian.Colleague.Dtos.LocationTypeItem)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Location Type Record in Colleague (Not Supported)
            </summary>
            <param name="LocationType"><see cref="!:LocationTypeItem">LocationType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.LocationTypesController.PostLocationTypes(Ellucian.Colleague.Dtos.LocationTypeItem)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create a Location Type Record in Colleague (Not Supported)
            </summary>
            <param name="LocationType"><see cref="!:LocationType">LocationType</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController">
            <summary>
            Provides access to MappingSettings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IMappingSettingsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MappingSettingsController class.
            </summary>
            <param name="mappingSettingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IMappingSettingsService">IMappingSettingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.GetMappingSettingsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all mappingSettings
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Mapping Setting search criteria in JSON format</param>
            <returns>List of MappingSettings <see cref="T:Ellucian.Colleague.Dtos.MappingSettings"/> objects representing matching mappingSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.GetMappingSettingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a mappingSettings using a GUID
            </summary>
            <param name="guid">GUID to desired mappingSettings</param>
            <returns>A mappingSettings object <see cref="T:Ellucian.Colleague.Dtos.MappingSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.GetMappingSettingsOptionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all mappingSettingsOptions
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Mapping Setting search criteria in JSON format</param>
            <returns>List of MappingSettings <see cref="T:Ellucian.Colleague.Dtos.MappingSettings"/> objects representing matching mappingSettings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.GetMappingSettingsOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a mappingSettings using a GUID
            </summary>
            <param name="guid">GUID to desired mappingSettings</param>
            <returns>A mappingSettings object <see cref="T:Ellucian.Colleague.Dtos.MappingSettingsOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.PutMappingSettingsAsync(System.String,Ellucian.Colleague.Dtos.MappingSettings)">
            <summary>
            Update (PUT) an existing MappingSettings
            </summary>
            <param name="guid">GUID of the mappingSettings to update</param>
            <param name="mappingSettings">DTO of the updated mappingSettings</param>
            <returns>A MappingSettings object <see cref="T:Ellucian.Colleague.Dtos.MappingSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.PostMappingSettingsAsync(Ellucian.Colleague.Dtos.MappingSettings)">
            <summary>
            Create (POST) a new mappingSettings
            </summary>
            <param name="mappingSettings">DTO of the new mappingSettings</param>
            <returns>A mappingSettings object <see cref="T:Ellucian.Colleague.Dtos.MappingSettings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.PutMappingSettingsOptionsAsync(System.String,Ellucian.Colleague.Dtos.MappingSettingsOptions)">
            <summary>
            Update (PUT) an existing mappingSettingsOptions
            </summary>
            <param name="guid">GUID of the mapping settings options to update</param>
            <param name="mappingSettings">DTO of the new mappingSettings</param>
            <returns>A mappingSettings object <see cref="T:Ellucian.Colleague.Dtos.MappingSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.PostMappingSettingsOptionsAsync(Ellucian.Colleague.Dtos.MappingSettingsOptions)">
            <summary>
            Create (POST) a new mappingSettingsOptions
            </summary>
            <param name="mappingSettings">DTO of the new mappingSettings</param>
            <returns>A mappingSettings object <see cref="T:Ellucian.Colleague.Dtos.MappingSettingsOptions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MappingSettingsController.DeleteMappingSettingsAsync(System.String)">
            <summary>
            Delete (DELETE) a mappingSettings
            </summary>
            <param name="guid">GUID to desired mappingSettings</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.MessageController">
            <summary>
            Updates worktask status.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MessageController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IMessageService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Creates a message controller object.
            </summary>
            <param name="messageService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MessageController.UpdateMessageWorklistAsync(System.String,Ellucian.Colleague.Dtos.Base.ExecutionState,Ellucian.Colleague.Dtos.Base.WorkTask)">
            <summary>
            Update the message for the indicated person
            </summary>
            <param name="personId">Required. Concatenation of personId and newState </param>
            <param name="newState">Required. Concatenation of personId and newState </param>
            <param name="msg">Required. Message that is to be updated.</param>
            <accessComments>
            Only the current user may update their own messages.
            </accessComments>
            <returns>Updated message</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MessageController.CreateMessageWorklistAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create the message for the indicated person
            </summary>
            <param name="personId">The person for whom the message is created in database.  </param>
            <param name="workflowDefId">ID of the workflow.</param>
            <param name="processCode">Process code of workflow.  </param>
            <param name="subjectLine">Subject line of worktask</param>
            <param name="advisorId">Subject line of worktask</param>
            <accessComments>
            Only the current user may create their own messages.
            </accessComments>
            <returns>The newly created message</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.MiscellaneousTextController">
            <summary>
            Provides access to MiscellaneousText data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MiscellaneousTextController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IMiscellaneousTextService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MiscellaneousTextController class.
            </summary>
            <param name="miscellaneousTextService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IMiscellaneousTextService">IMiscellaneousTextService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.MiscellaneousTextController.GetAsync">
            <summary>
            Gets the Miscellaneous Text records
            </summary>
            <returns>IEnumerable of <see cref="T:Ellucian.Colleague.Dtos.Base.MiscellaneousText">Miscellaneous Text Collection</see></returns>
            <note>IEnumerable--MiscellaneousText-- is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController">
            <summary>
            Provides access to NonPersonRelationships
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.INonPersonRelationshipsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the NonPersonRelationshipsController class.
            </summary>
            <param name="personRelationshipsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.INonPersonRelationshipsService">INonPersonRelationshipsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController.GetNonPersonRelationshipsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String)">
            <summary>
            Return all personRelationships
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="organization">organization Filter</param>
            <param name="institution">institution Filter</param>
            <param name="criteria">NonPerson Filter</param>
            <param name="relationshipType">relatuonship type Filter</param>
            <returns>List of NonPersonRelationships <see cref="T:Ellucian.Colleague.Dtos.NonPersonRelationships"/> objects representing matching personRelationships</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController.GetNonPersonRelationshipsByGuidAsync(System.String)">
            <summary>
            Read (GET) a personRelationships using a GUID
            </summary>
            <param name="guid">GUID to desired personRelationships</param>
            <returns>A personRelationships object <see cref="T:Ellucian.Colleague.Dtos.NonPersonRelationships"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController.PostNonPersonRelationshipsAsync(Ellucian.Colleague.Dtos.NonPersonRelationships)">
            <summary>
            Create (POST) a new personRelationships
            </summary>
            <param name="personRelationships">DTO of the new personRelationships</param>
            <returns>A personRelationships object <see cref="T:Ellucian.Colleague.Dtos.NonPersonRelationships"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController.PutNonPersonRelationshipsAsync(System.String,Ellucian.Colleague.Dtos.NonPersonRelationships)">
            <summary>
            Update (PUT) an existing personRelationships
            </summary>
            <param name="guid">GUID of the personRelationships to update</param>
            <param name="personRelationships">DTO of the updated personRelationships</param>
            <returns>A personRelationships object <see cref="T:Ellucian.Colleague.Dtos.NonPersonRelationships"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.NonPersonRelationshipsController.DeleteNonPersonRelationshipsAsync(System.String)">
            <summary>
            Delete (DELETE) a personRelationships
            </summary>
            <param name="guid">GUID to desired personRelationships</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.OfficeCodesController">
            <summary>
            Exposes OfficeCode data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OfficeCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            OfficeCodesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OfficeCodesController.GetOfficeCodes">
            <summary>
            Get Colleague OfficeCodes
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A List of OfficeCode DTOs</returns>
            <exception cref="!:HttpResponseException">Thrown if there was an error retrieving OfficeCodes. HTTP Status Code 400</exception>
            <note>OfficeCode is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPersonPositionsController">
            <summary>
            Provides access to organizational person positions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPersonPositionsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IOrganizationalPersonPositionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            OrganizationalPersonPositionsController constructor
            </summary>
            <param name="organizationalPersonPositionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IOrganizationalPersonPositionService">IOrganizationalPersonPositionService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPersonPositionsController.GetOrganizationalPersonPositionAsync(System.String)">
            <summary>
            Retrieves the position for the given ID and the direct relationships to others for the position.
            </summary>
            <returns>OrganizationalPersonPosition for the given ID</returns>
            <accessComments>
            User must have the VIEW.ORGANIZATIONAL.RELATIONSHIPS or UPDATE.ORGANIZATIONAL.RELATIONSHIPS permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPersonPositionsController.QueryOrganizationalPersonPositionAsync(Ellucian.Colleague.Dtos.Base.OrganizationalPersonPositionQueryCriteria)">
            <summary>
            Retrieves the positions for the indicated persons and the direct relationships to others for each position.
            </summary>
            <returns>A list of OrganizationalPersonPosition objects</returns>
            <accessComments>
            User must have the VIEW.ORGANIZATIONAL.RELATIONSHIPS or UPDATE.ORGANIZATIONAL.RELATIONSHIPS permission.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionController">
            <summary>
            Provides access to organizational positions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IOrganizationalPositionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Organizational Position Controller constructor
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionController.GetOrganizationalPositionAsync(System.String)">
            <summary>
            For the given id, get the Organizational Position
            </summary>
            <param name="id">Organizational Position id</param>
            <returns>Organizational Position DTO</returns>
            <accessComments>
            User must have the VIEW.ORGANIZATIONAL.RELATIONSHIPS or UPDATE.ORGANIZATIONAL.RELATIONSHIPS permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionController.QueryOrganizationalPositionsAsync(Ellucian.Colleague.Dtos.Base.OrganizationalPositionQueryCriteria)">
            <summary>
            For a given list of IDs or search string, returns organizational positions
            </summary>
            <param name="criteria">Organizational position query criteria</param>
            <returns>Matching organizational positions</returns>
            <accessComments>
            User must have the VIEW.ORGANIZATIONAL.RELATIONSHIPS or UPDATE.ORGANIZATIONAL.RELATIONSHIPS permission.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionRelationshipsController">
            <summary>
            Provides access to organizational position relationships
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionRelationshipsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IOrganizationalPositionRelationshipService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            OrganizationalPositionRelationshipsController constructor
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionRelationshipsController.CreateOrganizationalPositionRelationshipAsync(Ellucian.Colleague.Dtos.Base.OrganizationalPositionRelationship)">
            <summary>
            Create organizational position relationship
            </summary>
            <param name="organizationalPositionRelationship">The organizational position relationship</param>
            <returns>The new organizational position relationship</returns>
            <accessComments>
            Users with the following permission codes can create organizational position relationships:
            
            UPDATE.ORGANIZATIONAL.RELATIONSHIPS
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.OrganizationalPositionRelationshipsController.DeleteOrganizationalPositionRelationshipAsync(System.String)">
            <summary>
            Delete an organizational position relationship
            </summary>
            <param name="id">Organizational position relationship ID to delete</param>
            <accessComments>
            Users with the following permission codes can delete organizational position relationships:
            
            UPDATE.ORGANIZATIONAL.RELATIONSHIPS
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController">
            <summary>
            These routes are obsolete. Use PayableDepositDirective routes instead
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiate a new PayableDepositAccountsController
            </summary>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController.GetPayableDepositsAsync">
            <summary>
            This route is obsolete as of API 1.16 for security reasons. Use GetPayableDepositDirectives instead
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController.GetPayableDepositAsync(System.String)">
            <summary>
            This route is obsolete as of API 1.16 for security reasons. Use GetPayableDepositDirective instead
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController.CreatePayableDepositAsync(Ellucian.Colleague.Dtos.Base.PayableDepositAccount)">
            <summary>
            This route is obsolete as of API 1.16 for security reasons. Use CreatePayableDepositDirective instead
            </summary>
            <param name="payableDepositAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController.UpdatePayableDepositAsync(Ellucian.Colleague.Dtos.Base.PayableDepositAccount)">
            <summary>
            This route is obsolete as of API 1.16 for security reasons. Use UpdatePayableDepositDirective instead
            </summary>
            <param name="updatedPayableDepositAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositAccountsController.DeletePayableDepositAsync(System.String)">
            <summary>
            This route is obsolete as of API 1.16 for security reasons. Use DeletePayableDepositDirective instead.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController">
            <summary>
            Exposes Payable Deposit Directives functionality
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Base.Services.IPayableDepositDirectiveService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiate a new PayableDepositDirectivesController
            </summary>
            <param name="logger"></param>
            <param name="payableDepositDirectiveService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.GetPayableDepositDirectivesAsync">
            <summary>
            Get all of the current user's PayableDepositDirectives.
            </summary>
            <returns>A list of a person's PayableDepositDirectives</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.GetPayableDepositDirectiveAsync(System.String)">
            <summary>
            Get a single PayableDepositDirective for the current user
            </summary>
            <param name="id">Id of the payableDepositDirective</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.CreatePayableDepositDirectiveAsync(Ellucian.Colleague.Dtos.Base.PayableDepositDirective)">
            <summary>
            Create a new PayableDepositDirective resource based on the data in body of the request. The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            </summary>
            <param name="payableDepositDirective">payableDepositDirective object containing data with which to create a PayableDepositDirective resource.</param>
            <returns>An ActionResult with the created resource in the Content property of the body and the URI of the created resource in the 
            Location Header. The schema of the PayableDepositDirective in the Content property of the response is the same as the schema of the input PayableDepositDirective from the Request</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.UpdatePayableDepositDirectiveAsync(Ellucian.Colleague.Dtos.Base.PayableDepositDirective)">
            <summary>
            Updates a Payable Deposit Directive for the current user. This POST request has PUT characteristics, however, only updates
            to the PayableDepositDirective Nickname and IsElectronicPaymentRequested flag are accepted. Any other updates are ignored.
            
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            The endpoint will reject updates if:
                1. 400 - A deposit's end date occurs before its start date
                2. 400 - A PayableDepositDirective has malformed RoutingId, InstitutionId, or BranchNumber
                3. 409 - The PayableDepositDirective resource has changed on server - see ChangeDateTime of PayableDepositDirective
                4. 409 - The Business Office has a lock on the resource
            
            </summary>
            <param name="updatedPayableDepositDirective"></param>
            <returns>The updated PayableDepositDirective object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.DeletePayableDepositDirectiveAsync(System.String)">
            <summary>
            Delete a Payable Deposit Directive.
            
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            The endpoint will reject updates if:
                1. 400 - Something went wrong trying to delete the resource
                2. 403 - You attempt to delete a deposit directive that is not yours, or you do not have permission to edit payable deposits.
                3. 409 - The Business Office has a lock on the resource, or the server was unable to delete the resource.
            
            </summary>
            <param name="id">The id of the PayableDepositDirective resource to delete</param>    
            <returns>204 Status if deletion of the resource was successful</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.AuthenticatePayableDepositDirectiveAsync(Ellucian.Colleague.Dtos.Base.PayableDepositDirectiveAuthenticationChallenge)">
            <summary>
            Post a request for authentication to create or update a PayableDepositDirective.
            </summary>
            <param name="challenge">A challenge object containing the required authentication data</param>
            <returns>A BankingAuthenticationToken that can be used to authenticate future Update and Create PayableDepositDirectives. Tokens expire after ten (10) minutes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PayableDepositDirectivesController.GetStepUpAuthenticationHeaderValue">
            <summary>
            Gets the value of the token used for Step-Up Authentication
            </summary>
            <returns>The first X-Step-Up-Authentication header value, if present. Otherwise null.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController">
            <summary>
            Provides access to PersonalPronounType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonalPronounTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonalPronounTypesController class.
            </summary>
            <param name="personalPronounTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonalPronounTypeService">IPersonalPronounTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.GetAsync">
            <summary>
            Retrieves personal pronoun types
            </summary>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Base.PersonalPronounType">PersonalPronounType</see> objects></returns>
            <note>This request supports anonymous access. The PERSONAL.PRONOUNS (CORE.VALCODES) valcode in Colleague must have public access enabled for this API to function anonymously. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.GetPersonalPronounsAsync">
            <summary>
            Return all personalPronouns
            </summary>
            <returns>List of PersonalPronouns <see cref="T:Ellucian.Colleague.Dtos.PersonalPronouns"/> objects representing matching personalPronouns</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.GetPersonalPronounsByGuidAsync(System.String)">
            <summary>
            Read (GET) a personalPronouns using a GUID
            </summary>
            <param name="guid">GUID to desired personalPronouns</param>
            <returns>A personalPronouns object <see cref="T:Ellucian.Colleague.Dtos.PersonalPronouns"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.PostPersonalPronounsAsync(Ellucian.Colleague.Dtos.PersonalPronouns)">
            <summary>
            Create (POST) a new personalPronouns
            </summary>
            <param name="personalPronouns">DTO of the new personalPronouns</param>
            <returns>A personalPronouns object <see cref="T:Ellucian.Colleague.Dtos.PersonalPronouns"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.PutPersonalPronounsAsync(System.String,Ellucian.Colleague.Dtos.PersonalPronouns)">
            <summary>
            Update (PUT) an existing personalPronouns
            </summary>
            <param name="guid">GUID of the personalPronouns to update</param>
            <param name="personalPronouns">DTO of the updated personalPronouns</param>
            <returns>A personalPronouns object <see cref="T:Ellucian.Colleague.Dtos.PersonalPronouns"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalPronounTypesController.DeletePersonalPronounsAsync(System.String)">
            <summary>
            Delete (DELETE) a personalPronouns
            </summary>
            <param name="guid">GUID to desired personalPronouns</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController">
            <summary>
            Provides personal relationships data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonalRelationshipsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Personal relationships constructor
            </summary>
            <param name="adapterRegistry"></param>
            <param name="personalRelationshipsService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.GetPersonalRelationshipByIdAsync(System.String)">
            <summary>
            Retrieves all active personal relationships for relationship id
            </summary>
            <returns>PersonalRelationship object for a personal relationship.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.GetPersonalRelationshipsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of Personal Relationships objects based on selection criteria.
            </summary>
            <param name="page">Personal Relationship page Contains ...page...</param>
            <param name="subjectPerson">Personal Relationship subjectPerson Contains ...subjectPerson...</param>
            <param name="relatedPerson">Personal Relationship relatedPerson Contains ...relatedPerson...</param>
            <param name="directRelationshipType">Personal Relationship directRelationship Contains ...directRelationship...</param>
            <param name="directRelationshipDetailId">Personal Relationship reciprocalRelationship Contains ...reciprocalRelationship...</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.PutPersonalRelationshipAsync(System.String,Ellucian.Colleague.Dtos.PersonalRelationship)">
            <summary>
            Updates personal relationship
            </summary>
            <param name="id"></param>
            <param name="personalRelationship"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.PostPersonalRelationshipAsync(Ellucian.Colleague.Dtos.PersonalRelationship)">
            <summary>
            Create new personal relationship
            </summary>
            <param name="personRelationship">personRelationship</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.GetPersonalRelationships2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all personalRelationships2
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="personFilter">person filter criteria</param>
            <param name="person">person filter criteria</param>
            <param name="relationshipType">person filter criteria</param>
            <returns>List of PersonRelationships <see cref="T:Ellucian.Colleague.Dtos.PersonalRelationships2"/> objects representing matching personalRelationships2</returns>
            <accessComments>
            Only the current user can get their own person relationships.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.GetPersonalRelationships2ByGuidAsync(System.String)">
            <summary>
            Read (GET) a personalRelationships2 using a GUID
            </summary>
            <param name="id">GUID to desired personalRelationships2</param>
            <returns>A personalRelationships2 object <see cref="T:Ellucian.Colleague.Dtos.PersonalRelationships2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.PutPersonalRelationships2Async(System.String,Ellucian.Colleague.Dtos.PersonalRelationships2)">
            <summary>
            Update (PUT) an existing PersonRelationships
            </summary>
            <param name="id">GUID of the personalRelationships2 to update</param>
            <param name="personalRelationships2">DTO of the updated personalRelationships2</param>
            <returns>A PersonRelationships object <see cref="T:Ellucian.Colleague.Dtos.PersonalRelationships2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.PostPersonalRelationships2Async(Ellucian.Colleague.Dtos.PersonalRelationships2)">
            <summary>
            Create (POST) a new personalRelationships2
            </summary>
            <param name="personalRelationships2">DTO of the new personalRelationships2</param>
            <returns>A personalRelationships2 object <see cref="T:Ellucian.Colleague.Dtos.PersonalRelationships2"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.DeletePersonalRelationshipsAsync(System.String)">
            <summary>
            Delete (DELETE) a personalRelationships2
            </summary>
            <param name="id">GUID to desired personalRelationships2</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.PostPersonalRelationshipInitiationProcessAsync(Ellucian.Colleague.Dtos.PersonalRelationshipInitiationProcess)">
            <summary>
            Create (POST) a new personalRelationships2
            </summary>
            <param name="personalRelationships">DTO of the new personalRelationships2</param>
            <returns>A personalRelationships2 object <see cref="T:Ellucian.Colleague.Dtos.PersonalRelationshipInitiationProcess"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.PutPersonalRelationshipInitiationProcess(System.String,Ellucian.Colleague.Dtos.PersonalRelationships2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Relationship Initiation PRocess in Colleague (Not Supported)
            </summary>
            <param name="guid">Unique ID representing the Personal Relation Type to update</param>
            <param name="personalRelationshipDto"><see cref="T:Ellucian.Colleague.Dtos.PersonalRelationships2">RelationType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.GetPersonalRelationshipInitiationProcess(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Get a Relationship Initiation PRocess in Colleague (Not Supported)
            </summary>
            <param name="guid">Unique ID representing the Personal Relation Type to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipsController.DeletePersonalRelationshipInitiationProcess(System.String)">
            <summary>
            Delete (DELETE) an existing PersonalRelationshipInitiationProcess
            </summary>
            <param name="guid">Id of the PersonalRelationshipStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController">
            <summary>
            Provides access to Personal Relationship Statuses data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonalRelationshipTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonalRelationshipStatusesController class.
            </summary>
            <param name="personalRelationshipService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonalRelationshipTypeService">IPersonalRelationshipService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController.GetPersonalRelationshipStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6</remarks>
            <summary>
            Retrieves all personal relationship statuses.
            </summary>
            <returns>All PersonalRelationshipStatuses objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController.GetPersonalRelationshipStatusByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6</remarks>
            <summary>
            Retrieves a personal relationship status by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.PersonalRelationshipStatus">PersonalRelationshipStatus.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController.PutPersonalRelationshipStatusAsync(Ellucian.Colleague.Dtos.PersonalRelationshipStatus)">
            <summary>
            Updates a PersonalRelationshipStatus.
            </summary>
            <param name="personalRelationshipStatus"><see cref="!:PersonalRelationshipStatus">PersonalRelationshipStatus</see> to update</param>
            <returns>Newly updated PersonalRelationshipStatus</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController.PostPersonalRelationshipStatusAsync(Ellucian.Colleague.Dtos.PersonalRelationshipStatus)">
            <summary>
            Creates a PersonalRelationshipStatus.
            </summary>
            <param name="personalRelationshipStatus"><see cref="!:PersonalRelationshipStatus">PersonalRelationshipStatus</see> to create</param>
            <returns>Newly created <see cref="!:PersonalRelationshipStatus">PersonalRelationshipStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipStatusesController.DeletePersonalRelationshipStatusAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PersonalRelationshipStatus
            </summary>
            <param name="id">Id of the PersonalRelationshipStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController">
            <summary>
            Provides access to PersonalRelationshipType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController.#ctor(Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IPersonalRelationshipTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonalRelationshipController class.
            </summary>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="personalRelationshipService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonalRelationshipTypeService">IPersonalRelationshipService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController.GetPersonalRelationTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all relation types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.RelationType">RelationType</see>objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController.GetPersonalRelationTypeByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an relation type by GUID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.RelationType">RelationType </see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController.DeletePersonalRelationType(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing Relation type in Colleague (Not Supported)
            </summary>
            <param name="guid">Unique ID representing the Personal Relation Type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController.PutPersonalRelationType(System.String,Ellucian.Colleague.Dtos.EmailType)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Relation Type Type Record in Colleague (Not Supported)
            </summary>
            <param name="guid">Unique ID representing the Personal Relation Type to update</param>
            <param name="relationType"><see cref="T:Ellucian.Colleague.Dtos.RelationType">RelationType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonalRelationshipTypesController.PostPersonalRelationType(Ellucian.Colleague.Dtos.RelationType)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create a Relation Type Record in Colleague (Not Supported)
            </summary>
            <param name="relationType"><see cref="T:Ellucian.Colleague.Dtos.RelationType">RelationType</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController">
            <summary>
            Provides access to person data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonContactsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="emergencyInformationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonService">IPersonService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController.GetPersonEmergencyContactsAsync(Ellucian.Web.Http.Models.Paging,System.String)">
            <summary>
            Gets persons emergency contacts information
            </summary>
            <param name="page"></param>
            <param name="person">Person id filter.</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController.GetPersonEmergencyContactsByIdAsync(System.String)">
            <summary>
            Gets persons emergency contact information
            </summary>
            <param name="id"></param>
            <returns>Dtos.PersonContactSubject</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController.PostPersonContactAsync(Ellucian.Colleague.Dtos.PersonContactSubject)">
            <summary>
            Create a new person contact
            </summary>
            <param name="personContactSubject"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController.PutPersonContactAsync(System.String,Ellucian.Colleague.Dtos.PersonContactSubject)">
            <summary>
            Update an existing person contact
            </summary>
            <param name="id"></param>
            <param name="personContactSubject"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonContactsController.DeletePersonContactAsync(System.String)">
            <summary>
            Delete a person contact
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController">
            <summary>
            Provides access to PersonEmergencyContacts
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonEmergencyContactsController class.
            </summary>
            <param name="personEmergencyContactsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService">IEmergencyInformationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController.GetPersonEmergencyContactsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all personEmergencyContacts
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
             <param name="criteria">Selection criteria</param>
             <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <returns>List of PersonEmergencyContacts <see cref="T:Ellucian.Colleague.Dtos.PersonEmergencyContacts"/> objects representing matching personEmergencyContacts</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController.GetPersonEmergencyContactsByGuidAsync(System.String)">
            <summary>
            Read (GET) a personEmergencyContacts using a GUID
            </summary>
            <param name="guid">GUID to desired personEmergencyContacts</param>
            <returns>A personEmergencyContacts object <see cref="T:Ellucian.Colleague.Dtos.PersonEmergencyContacts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController.PutPersonEmergencyContactsAsync(System.String,Ellucian.Colleague.Dtos.PersonEmergencyContacts)">
            <summary>
            Update (PUT) an existing PersonEmergencyContacts
            </summary>
            <param name="guid">GUID of the personEmergencyContacts to update</param>
            <param name="personEmergencyContacts">DTO of the updated personEmergencyContacts</param>
            <returns>A PersonEmergencyContacts object <see cref="T:Ellucian.Colleague.Dtos.PersonEmergencyContacts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController.PostPersonEmergencyContactsAsync(Ellucian.Colleague.Dtos.PersonEmergencyContacts)">
            <summary>
            Create (POST) a new personEmergencyContacts
            </summary>
            <param name="personEmergencyContacts">DTO of the new personEmergencyContacts</param>
            <returns>A personEmergencyContacts object <see cref="T:Ellucian.Colleague.Dtos.PersonEmergencyContacts"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonEmergencyContactsController.DeletePersonEmergencyContactsAsync(System.String)">
            <summary>
            Delete (DELETE) a personEmergencyContacts
            </summary>
            <param name="guid">GUID to desired personEmergencyContacts</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController">
            <summary>
            Provides access to PersonExternalEducationCredentials
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonExternalEducationCredentialsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonExternalEducationCredentialsController class.
            </summary>
            <param name="personExternalEducationCredentialsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonExternalEducationCredentialsService">IPersonExternalEducationCredentialsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController.GetPersonExternalEducationCredentialsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all personExternalEducationCredentials
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="personFilter">Person filter options</param>
            <param name="criteria">Standard filter options</param>
            <param name="person">person GUID filter option</param>
            <returns>List of PersonExternalEducationCredentials <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducationCredentials"/> objects representing matching personExternalEducationCredentials</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController.GetPersonExternalEducationCredentialsByGuidAsync(System.String)">
            <summary>
            Read (GET) a personExternalEducationCredentials using a GUID
            </summary>
            <param name="guid">GUID to desired personExternalEducationCredentials</param>
            <returns>A personExternalEducationCredentials object <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducationCredentials"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController.PutPersonExternalEducationCredentialsAsync(System.String,Ellucian.Colleague.Dtos.PersonExternalEducationCredentials)">
            <summary>
            Update (PUT) an existing PersonExternalEducationCredentials
            </summary>
            <param name="guid">GUID of the personExternalEducationCredentials to update</param>
            <param name="personExternalEducationCredentials">DTO of the updated personExternalEducationCredentials</param>
            <returns>A PersonExternalEducationCredentials object <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducationCredentials"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController.PostPersonExternalEducationCredentialsAsync(Ellucian.Colleague.Dtos.PersonExternalEducationCredentials)">
            <summary>
            Create (POST) a new personExternalEducationCredentials
            </summary>
            <param name="personExternalEducationCredentials">DTO of the new personExternalEducationCredentials</param>
            <returns>A personExternalEducationCredentials object <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducationCredentials"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonExternalEducationCredentialsController.DeletePersonExternalEducationCredentialsAsync(System.String)">
            <summary>
            Delete (DELETE) a personExternalEducationCredentials
            </summary>
            <param name="guid">GUID to desired personExternalEducationCredentials</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController">
            <summary>
            Provides access to Person Filters data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonFiltersController class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.GetPersonFilters2Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6</remarks>
            <summary>
            Retrieves all person filters.
            </summary>
            <returns>All PersonFilters objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.GetPersonFiltersAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6</remarks>
            <summary>
            Retrieves all person filters.
            </summary>
            <returns>All PersonFilters objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.GetPersonFilterByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6</remarks>
            <summary>
            Retrieves a person filter by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.PersonFilter">PersonFilter.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.PutPersonFilterAsync(Ellucian.Colleague.Dtos.PersonFilter)">
            <summary>
            Updates a PersonFilter.
            </summary>
            <param name="personFilter"><see cref="!:PersonFilter">PersonFilter</see> to update</param>
            <returns>Newly updated <see cref="!:PersonFilter">PersonFilter</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.PostPersonFilterAsync(Ellucian.Colleague.Dtos.PersonFilter)">
            <summary>
            Creates a PersonFilter.
            </summary>
            <param name="personFilter"><see cref="!:PersonFilter">PersonFilter</see> to create</param>
            <returns>Newly created <see cref="!:PersonFilter">PersonFilter</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersController.DeletePersonFilterAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PersonFilter
            </summary>
            <param name="id">Id of the PersonFilter to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersPersonsController">
            <summary>
            Provides access to Person Filters data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersPersonsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonFiltersController class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="contextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersPersonsController.GetPersonFiltersPersonsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6</remarks>
            <summary>
            Retrieves all person filters.
            </summary>
            <returns>All PersonFilters objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersPersonsController.GetPersonFilterPersonsByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 6.1.0</remarks>
            <summary>
            Retrieves a person filter by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Person2">PersonFilter.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersPersonsController.PutPersonFilterPersonsAsync(Ellucian.Colleague.Dtos.PersonFilter)">
            <summary>
            Updates a PersonFilter - not supported.
            </summary>
            <param name="personFilter"><see cref="!:PersonFilter">PersonFilter</see> to update</param>
            <returns>Newly updated <see cref="!:PersonFilter">PersonFilter</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonFiltersPersonsController.PostPersonFilterPersonsAsync(Ellucian.Colleague.Dtos.PersonFilter)">
            <summary>
            Creates a PersonFilter - not supported
            </summary>
            <param name="personFilter"><see cref="!:PersonFilter">PersonFilter</see> to create</param>
            <returns>Newly created <see cref="!:PersonFilter">PersonFilter</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController">
            <summary>
            Provides person guardian relationships data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonGuardianRelationshipService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Person guardian constructor
            </summary>
            <param name="adapterRegistry"></param>
            <param name="personGuardianRelationshipService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController.GetPersonGuardianRelationshipByIdAsync(System.String)">
            <summary>
            Retrieves active personal guardian relationship for relationship id
            </summary>
            <returns>PersonGuardianRelationship object for a personal guardian relationship.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController.GetPersonGuardianRelationshipsAllAndFilterAsync(Ellucian.Web.Http.Models.Paging,System.String)">
            <summary>
            Returns all or filtered records
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="person"></param>
            <returns>Tuple containing list of PersonGuardianRelationships <see cref="T:Ellucian.Colleague.Dtos.PersonGuardianRelationship"/> objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController.PutPersonGuardianRelationshipAsync(System.String,Ellucian.Colleague.Dtos.PersonGuardianRelationship)">
            <summary>
            Updates personal guardian relationship
            </summary>
            <param name="id"></param>
            <param name="personalGuardianRelationship">personGuardianRelationship</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController.PostPersonGuardianRelationshipAsync(Ellucian.Colleague.Dtos.PersonGuardianRelationship)">
            <summary>
            Create new personal guardian relationship
            </summary>
            <param name="personGuardianRelationship">personGuardianRelationship</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonGuardiansController.DeletePersonGuardianRelationshipAsync(System.String)">
            <summary>
            Delete of personal guardian relationship is not supported
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController">
            <summary>
            Provides person holds data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonHoldsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Person holds constructor
            </summary>
            <param name="adapterRegistry"></param>
            <param name="personHoldsService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.GetPersonsActiveHoldsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Returns a list of all active restrictions recorded for any person in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.GetPersonsActiveHoldAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all active person holds for hold id
            </summary>
            <returns>PersonHold object for a person.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.GetPersonsActiveHoldsByPersonIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all active person holds for person id
            </summary>
            <returns>PersonHold object for a person.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.PutPersonHoldAsync(System.String,Ellucian.Colleague.Dtos.PersonHold)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="personHold"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.PostPersonHoldAsync(Ellucian.Colleague.Dtos.PersonHold)">
            <summary>
            Create new person hold
            </summary>
            <param name="personHold">personHold</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldsController.DeletePersonHoldAsync(System.String)">
            <summary>
            Deletes person hold based on id
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController">
            <summary>
            Provides access to person hold types
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonHoldTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PersonHoldTypesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="personHoldTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonHoldTypeService">IPersonHoldTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController.GetPersonHoldTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4.5</remarks>
            <summary>
            Retrieves all person hold types
            </summary>
            <returns>All PersonHoldTypes objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController.GetPersonHoldTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4.5</remarks>
            <summary>
            Retrieves a person hold type by ID
            </summary>
            <returns>A PersonHoldType object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController.DeletePersonHoldTypesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PersonHoldType
            </summary>
            <param name="id">Id of the PersonHoldType to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController.PutPersonHoldTypesAsync(Ellucian.Colleague.Dtos.PersonHoldType)">
            <summary>
            Updates a PersonHoldType.
            </summary>
            <param name="personHoldType"><see cref="!:PersonHoldType">PersonHoldType</see> to update</param>
            <returns>Newly updated <see cref="!:PersonHoldType">PersonHoldType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonHoldTypesController.PostPersonHoldTypesAsync(Ellucian.Colleague.Dtos.PersonHoldType)">
            <summary>
            Creates a PersonHoldType.
            </summary>
            <param name="personHoldType"><see cref="!:PersonHoldType">PersonHoldType</see> to create</param>
            <returns>Newly created <see cref="!:PersonHoldType">PersonHoldType</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController">
            <summary>
            Provides access to PersonMatchingRequests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonMatchingRequestsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonMatchingRequestsController class.
            </summary>
            <param name="personMatchingRequestsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonMatchingRequestsService">IPersonMatchingRequestsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.GetPersonMatchingRequestsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all personMatchingRequests
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">JSON formatted selection criteria.</param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters.</param>
            <returns>List of PersonMatchingRequests <see cref="T:Ellucian.Colleague.Dtos.PersonMatchingRequests"/> objects representing matching personMatchingRequests</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.GetPersonMatchingRequestsByGuidAsync(System.String)">
            <summary>
            Read (GET) a personMatchingRequests using a GUID
            </summary>
            <param name="guid">GUID to desired personMatchingRequests</param>
            <returns>A personMatchingRequests object <see cref="T:Ellucian.Colleague.Dtos.PersonMatchingRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.PostPersonMatchingRequestsAsync(Ellucian.Colleague.Dtos.PersonMatchingRequests)">
            <summary>
            Create (POST) a new personMatchingRequests
            </summary>
            <param name="personMatchingRequests">DTO of the new personMatchingRequests</param>
            <returns>A personMatchingRequests object <see cref="T:Ellucian.Colleague.Dtos.PersonMatchingRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.PutPersonMatchingRequestsAsync(System.String,Ellucian.Colleague.Dtos.PersonMatchingRequests)">
            <summary>
            Update (PUT) an existing personMatchingRequests
            </summary>
            <param name="guid">GUID of the personMatchingRequests to update</param>
            <param name="personMatchingRequests">DTO of the updated personMatchingRequests</param>
            <returns>A personMatchingRequests object <see cref="T:Ellucian.Colleague.Dtos.PersonMatchingRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.PostPersonMatchingRequestsInitiationsProspectsAsync(Ellucian.Colleague.Dtos.PersonMatchingRequestsInitiationsProspects)">
            <summary>
            Create (POST) a new personMatchingRequests
            </summary>
            <param name="personMatchingRequests">DTO of the new personMatchingRequests</param>
            <returns>A personMatchingRequests object <see cref="T:Ellucian.Colleague.Dtos.PersonMatchingRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.PutPersonMatchingRequestsInitiationsProspectsAsync(System.String,Ellucian.Colleague.Dtos.PersonMatchingRequestsInitiationsProspects)">
            <summary>
            Update (PUT) an existing personMatchingRequests
            </summary>
            <param name="guid">GUID of the personMatchingRequests to update</param>
            <param name="personMatchingRequests">DTO of the updated personMatchingRequests</param>
            <returns>A personMatchingRequests object <see cref="T:Ellucian.Colleague.Dtos.PersonMatchingRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonMatchingRequestsController.DeletePersonMatchingRequestsAsync(System.String)">
            <summary>
            Delete (DELETE) a personMatchingRequests
            </summary>
            <param name="guid">GUID to desired personMatchingRequests</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController">
            <summary>
            Provides access to PersonNameType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonNameTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonNameTypesController class.
            </summary>
            <param name="personNameTypeService">Service of type<see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonNameTypeService"> IPersonNameTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>PersonNameTypes
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.GetPersonNameTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all person name types.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PersonNameTypeItem">PersonNameTypeItem</see> objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.GetPersonNameTypes2Async">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all person name types.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PersonNameTypeItem">PersonNameTypeItem</see> objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.GetPersonNameTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an person name type by ID.
            </summary>
            <param name="id">Unique ID representing the person name type to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.PersonNameTypeItem">PersonNameTypeItem</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.GetPersonNameTypeById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an person name type by ID.
            </summary>
            <param name="id">Unique ID representing the person name type to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.PersonNameTypeItem">PersonNameTypeItem</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.DeletePersonNameTypes(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing person name type in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the person name type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.PutPersonNameTypes(Ellucian.Colleague.Dtos.PersonNameTypeItem)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Person Name Type Record in Colleague (Not Supported)
            </summary>
            <param name="personNameTypeItem"><see cref="T:Ellucian.Colleague.Dtos.PersonNameTypeItem">PersonNameTypeItem</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonNameTypesController.PostPersonNameTypes(Ellucian.Colleague.Dtos.PersonNameTypeItem)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create a Person Name Type Record in Colleague (Not Supported)
            </summary>
            <param name="personNameTypeItem"><see cref="T:Ellucian.Colleague.Dtos.PersonNameTypeItem">PersonNameTypeItem</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController">
            <summary>
            Provides access to RestrictionTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IRestrictionTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            RestrictionTypesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="restrictionTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRestrictionTypeService">IRestrictionTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.GetRestrictionTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN CDM</remarks>
            <summary>
            Retrieves all restriction types
            </summary>
            <returns>All RestrictionType objects.</returns>
            <note>Restriction is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.GetRestrictionTypeByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN CDM</remarks>
            <summary>
            Retrieves a restriction type by GUID
            </summary>
            <returns>A RestrictionType object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.GetRestrictionTypes2Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4</remarks>
            <summary>
            Retrieves all restriction types
            </summary>
            <returns>All RestrictionType objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.GetRestrictionTypeById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4</remarks>
            <summary>
            Retrieves a restriction type by ID
            </summary>
            <returns>A RestrictionType object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.PutRestrictionTypesAsync(Ellucian.Colleague.Dtos.RestrictionType2)">
            <summary>
            Updates a RestrictionType.
            </summary>
            <param name="restrictionType"><see cref="!:RestrictionType2">RestrictionType</see> to update</param>
            <returns>Newly updated <see cref="!:RestrictionType2">RestrictionType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.PutPersonHoldTypesAsync(Ellucian.Colleague.Dtos.PersonHoldType)">
            <summary>
            Updates a PersonHoldType.
            </summary>
            <param name="personHoldType"><see cref="!:PersonHoldType">PersonHoldType</see> to update</param>
            <returns>Newly updated <see cref="!:PersonHoldType">PersonHoldType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.PostRestrictionTypesAsync(Ellucian.Colleague.Dtos.RestrictionType2)">
            <summary>
            Creates a RestrictionType.
            </summary>
            <param name="restrictionType"><see cref="!:RestrictionType2">RestrictionType</see> to create</param>
            <returns>Newly created <see cref="!:RestrictionType2">RestrictionType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.PostPersonHoldTypesAsync(Ellucian.Colleague.Dtos.PersonHoldType)">
            <summary>
            Creates a PersonHoldType.
            </summary>
            <param name="personHoldType"><see cref="!:PersonHoldType">PersonHoldType</see> to create</param>
            <returns>Newly created <see cref="!:PersonHoldType">PersonHoldType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.DeleteRestrictionTypesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing RestrictionType
            </summary>
            <param name="id">Id of the RestrictionType to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonRestrictionTypesController.DeletePersonHoldTypesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PersonHoldType
            </summary>
            <param name="id">Id of the PersonHoldType to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonsController">
            <summary>
            Provides access to person data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonService,Ellucian.Colleague.Coordination.Base.Services.IPersonRestrictionTypeService,Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="personService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonService">IPersonService</see></param>
            <param name="personRestrictionTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonRestrictionTypeService">IPersonRestrictionTypeService</see></param>
            <param name="emergencyInformationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService">IEmergencyInformationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredentialsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Gets a subset of person credentials.
            </summary>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredentials2Async(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Gets a subset of person credentials.
            </summary>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredentials3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Gets a subset of person credentials.
            </summary>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential2">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredentials4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Gets a subset of person credentials.
            </summary>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential3">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredentialByGuidAsync(System.String)">
            <summary>
            Get a subset of person's data, including only their credentials.
            </summary>
            <param name="id">A global identifier of a person.</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredential2ByGuidAsync(System.String)">
            <summary>
            Get a subset of person's data, including only their credentials.
            </summary>
            <param name="id">A global identifier of a person.</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential2">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredential3ByGuidAsync(System.String)">
            <summary>
            Get a subset of person's data, including only their credentials.
            </summary>
            <param name="id">A global identifier of a person.</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential2">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonCredential4ByGuidAsync(System.String)">
            <summary>
            Get a subset of person's data, including only their credentials.
            </summary>
            <param name="id">A global identifier of a person.</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.PersonCredential3">PersonsCredentials</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetActivePersonRestrictionTypesAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN CDM</remarks>
            <summary>
            Retrieves all active person restriction types for a student
            </summary>
            <returns>PersonRestrictionType object for a student.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetProfileAsync(System.String)">
            <summary>
            Get a person's profile information.
            </summary>
            <param name="personId">Id of the person to get</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Base.Profile">Profile</see></returns>
            <accessComments>
            Only the current user or their proxies can view their profile.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonProxyDetailsAsync(System.String)">
            <summary>
            Get only the information required to create a proxy
            </summary>
            <param name="personId">Id of the person to get</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Base.PersonProxyDetails"/> information </returns>
            <accessComments>
            Any logged in user can access their own proxy's details.
            A user with the permission ADD.ALL.HR.PROXY is considered as an admin and can access details of any employee's proxy.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetEmergencyInformationAsync(System.String)">
            <summary>
            Get all the emergency information for a person.
            </summary>
            <param name="personId">Pass in a person ID</param>
            <returns>Returns all the emergency information for the specified person</returns>
            <accessComments>
            Only the current user can get their emergency information.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetEmergencyInformation2Async(System.String)">
             <summary>
             Get all the emergency information for a person.
             </summary>
             <param name="personId">Pass in a person ID</param>
             <returns>Returns all the emergency information for the specified person</returns>
             <accessComments>
             The current user can access all their emergency information.
            
             Permissions can be granted to allow full or partial access to others' information:
             * Users with VIEW.PERSON.EMERGENCY.CONTACTS can see others' Emergency Contacts and Opt Out status
             * Users with VIEW.PERSON.HEALTH.CONDITIONS can see others' Health Conditions
             * Users with VIEW.PERSON.OTHER.EMERGENCY.INFORMATION can see others' Insurance Information, Hospital Preference, and Additional Information
            
             Users with one or more of the above permissions can see other properties not listed as well (such as name and person ID).
            
             If the requested person has a privacy code restriction, the requesting user will need the corresponding privacy code access in addition
             to the permission(s).
            
             Lacking one or more of the above permissions or privacy code access will result in some properties being null and the
             "X-Content-Restricted" header being set to "partial"
             </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson2ByGuidAsync(System.String)">
            <summary>
            Get a person.
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="guid">Guid of the person to get</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Person2">Person</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson2Async(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of Person objects based on selection criteria.
            </summary>
            <param name="page">Person page to retrieve</param>
            <param name="title">Person Title Contains ...title...</param>
            <param name="firstName">Person First Name equal to</param>
            <param name="middleName">Person Middle Name equal to</param>
            <param name="lastNamePrefix">Person Last Name begins with 'code...'</param>
            <param name="lastName">Person Last Name equal to</param>
            <param name="pedigree">Person Suffixe Contains ...pedigree... (guid)</param>
            <param name="preferredName">Person Preferred Name equal to (guid)</param>
            <param name="role">Person Role equal to (guid)</param>
            <param name="credentialType">Person Credential Type (colleagueId or ssn)</param>
            <param name="credentialValue">Person Credential equal to</param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <returns>List of Person2 <see cref="T:Ellucian.Colleague.Dtos.Person2"/> objects representing matching persons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonByGuid3Async(System.String)">
            <summary>
            Get a person.
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="guid">Guid of the person to get</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Person3">Person</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Person objects based on selection criteria.
            </summary>
            <param name="page">Person page to retrieve</param>
            <param name="criteria">Person search criteria in JSON format
            <param name="personFilter">Person filter search criteria</param>
            <param name="preferredName">Person filter search criteria</param>
            Can contain:
            title - Person title equal to
            firstName - Person First Name equal to
            middleName - Person Middle Name equal to
            lastNamePrefix - Person Last Name begins with 'code...'
            lastName- -Person Last Name equal to
            pedigree- -Person Suffix Contains pedigree (guid)
            preferredName - Person Preferred Name equal to (guid)
            role - Person Role equal to (guid)
            credentialType - Person Credential Type (colleagueId - SSN/SIN not supported here)
            credentialValue - Person Credential equal to
            personFilter - Selection from SaveListParms definition or person-filters</param>
            <returns>List of Person2 <see cref="T:Ellucian.Colleague.Dtos.Person3"/> objects representing matching persons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson4ByIdAsync(System.String)">
            <summary>
            Get a person.
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="guid">Guid of the person to get</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Person4">Person</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Person objects based on selection criteria.
            </summary>
            <param name="page">Person page to retrieve</param>
            <param name="personFilter">Person filter search criteria</param>
            <param name="criteria">Person search criteria in JSON format
            Can contain:
            title - Person title equal to
            firstName - Person First Name equal to
            middleName - Person Middle Name equal to
            lastNamePrefix - Person Last Name begins with 'code...'
            lastName- -Person Last Name equal to
            role - Person Role equal to (guid)
            credentialType - Person Credential Type (colleagueId - SSN/SIN not supported here)
            credentialValue - Person Credential equal to
            personFilter - Selection from SaveListParms definition or person-filters</param>
            <returns>List of Person3 <see cref="T:Ellucian.Colleague.Dtos.Person3"/> objects representing matching persons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson5ByIdAsync(System.String)">
            <summary>
            Get a person.
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="guid">Guid of the person to get</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Person5">Person</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPerson5Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Person objects based on selection criteria.
            </summary>
            <param name="page">Person page to retrieve</param>
            <param name="personFilter">Person filter search criteria</param>
            <param name="criteria">Person search criteria in JSON format
            Can contain:
            title - Person title equal to
            firstName - Person First Name equal to
            middleName - Person Middle Name equal to
            lastNamePrefix - Person Last Name begins with 'code...'
            lastName- -Person Last Name equal to
            role - Person Role equal to (guid)
            credentialType - Person Credential Type (colleagueId - SSN/SIN not supported here)
            credentialValue - Person Credential equal to
            alternativeCredentialsType - alternativeCredentials Type 
            alternativeCredentialsValue -alternativeCredentials equal to
            personFilter - Selection from SaveListParms definition or person-filters</param>
            <returns>List of Person5 <see cref="T:Ellucian.Colleague.Dtos.Person5"/> objects representing matching persons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PostPerson2Async(Ellucian.Colleague.Dtos.Person2)">
            <summary>
            Create (POST) a new person
            </summary>
            <param name="person">DTO of the new person</param>
            <returns>A person object <see cref="T:Ellucian.Colleague.Dtos.Person2"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PostPerson3Async(Ellucian.Colleague.Dtos.Person3)">
            <summary>
            Create (POST) a new person
            </summary>
            <param name="person">DTO of the new person</param>
            <returns>A person object <see cref="T:Ellucian.Colleague.Dtos.Person3"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PostPerson4Async(Ellucian.Colleague.Dtos.Person4)">
            <summary>
            Create (POST) a new person
            </summary>
            <param name="person">DTO of the new person</param>
            <returns>A person object <see cref="T:Ellucian.Colleague.Dtos.Person4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PostPerson5Async(Ellucian.Colleague.Dtos.Person5)">
            <summary>
            Create (POST) a new person for v12.1.0
            </summary>
            <param name="person">DTO of the new person</param>
            <returns>A person object <see cref="T:Ellucian.Colleague.Dtos.Person5"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PostPersonCredentialAsync(Ellucian.Colleague.Dtos.PersonCredential)">
            <summary>
            Create person credentials.
            </summary>
            <param name="personCredential"><see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonCredential</see> to update</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonCredential</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutPerson2Async(System.String,Ellucian.Colleague.Dtos.Person2)">
            <summary>
            Update (PUT) an existing person
            </summary>
            <param name="guid">GUID of the person to update</param>
            <param name="person">DTO of the updated person</param>
            <returns>A Person2 object <see cref="T:Ellucian.Colleague.Dtos.Person2"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutPerson3Async(System.String,Ellucian.Colleague.Dtos.Person3)">
            <summary>
            Update (PUT) an existing person
            </summary>
            <param name="guid">GUID of the person to update</param>
            <param name="person">DTO of the updated person</param>
            <returns>A Person2 object <see cref="T:Ellucian.Colleague.Dtos.Person3"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutPerson4Async(System.String,Ellucian.Colleague.Dtos.Person4)">
            <summary>
            Update (PUT) an existing person
            </summary>
            <param name="guid">GUID of the person to update</param>
            <param name="person">DTO of the updated person</param>
            <returns>A Person2 object <see cref="T:Ellucian.Colleague.Dtos.Person4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutPerson5Async(System.String,Ellucian.Colleague.Dtos.Person5)">
            <summary>
            Update (PUT) an existing person for v12.1.0
            </summary>
            <param name="guid">GUID of the person to update</param>
            <param name="person">DTO of the updated person</param>
            <returns>A Person2 object <see cref="T:Ellucian.Colleague.Dtos.Person5"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetUpdateRequest">
            <summary>
            Get the request body.  Because gender has 2 source values (gender and genderMarker),
            it needs unique override logic beyond what is done by PerformPartialPayloadMerge.
            And needs to determine if those property names were explicitly included in the
            request body.
            </summary>
            <returns>request body</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutProfileAsync(System.String,Ellucian.Colleague.Dtos.Base.Profile)">
            <summary>
            Updates certain person profile information: AddressConfirmationDateTime, EmailAddressConfirmationDateTime,
            PhoneConfirmationDateTime, EmailAddresses, Personal Phones and Addresses. LastChangedDateTime must match the last changed timestamp on the database
            Person record to ensure updates not occurring from two different sources at the same time. If no changes are found, a NotModified Http status code
            is returned. If required by configuration, users must be set up with permissions to perform these updates: UPDATE.OWN.EMAIL, UPDATE.OWN.PHONE, and 
            UPDATE.OWN.ADDRESS. 
            </summary>
            <param name="personId">The ID of the person profile to update.</param>
            <param name="profile"><see cref="T:Ellucian.Colleague.Dtos.Base.Profile">Profile</see> to use to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.Base.Profile">Profile</see></returns>
            <accessComments>
            Only the current user can update their profile.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutProfile2Async(System.String,Ellucian.Colleague.Dtos.Base.Profile)">
            <summary>
            Updates certain person profile information: AddressConfirmationDateTime, EmailAddressConfirmationDateTime,
            PhoneConfirmationDateTime, EmailAddresses, Personal Phones and Addresses. LastChangedDateTime must match the last changed timestamp on the database
            Person record to ensure updates not occurring from two different sources at the same time. If no changes are found, a NotModified Http status code
            is returned. If required by configuration, users must be set up with permissions to perform these updates: UPDATE.OWN.EMAIL, UPDATE.OWN.PHONE, and 
            UPDATE.OWN.ADDRESS. 
            </summary>
            <param name="personId">The ID of the person profile to update.</param>
            <param name="profile"><see cref="T:Ellucian.Colleague.Dtos.Base.Profile">Profile</see> to use to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.Base.Profile">Profile</see></returns>
            <accessComments>
            Only the current user can update their profile.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutPersonCredentialAsync(Ellucian.Colleague.Dtos.PersonCredential)">
            <summary>
            Creates a PersonCredential.
            </summary>
            <param name="personCredential"><see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonCredential</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.PersonCredential">PersonCredential</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.PutEmergencyInformation(Ellucian.Colleague.Dtos.Base.EmergencyInformation)">
            <summary>
            Update a person's emergency information.
            </summary>
            <param name="emergencyInformation">An emergency information object</param>
            <returns>The updated emergency information object</returns>
            <accessComments>
            Only the current user can update their own emergency information.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.DeletePersonAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Person
            </summary>
            <param name="id">Id of the Person to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.DeletePersonCredentialAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PersonCredential
            </summary>
            <param name="id">Id of the PersonCredential to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.QueryPerson2ByPostAsync(Ellucian.Colleague.Dtos.Person2)">
            <summary>
            Queries a person by post.
            </summary>
            <param name="person"><see cref="T:Ellucian.Colleague.Dtos.Person2">Person</see> to use for querying</param>
            <returns>List of matching <see cref="T:Ellucian.Colleague.Dtos.Person2">persons</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.QueryPerson3ByPostAsync(Ellucian.Colleague.Dtos.Person3)">
            <summary>
            Queries a person by post.
            </summary>
            <param name="person"><see cref="T:Ellucian.Colleague.Dtos.Person3">Person</see> to use for querying</param>
            <returns>List of matching <see cref="T:Ellucian.Colleague.Dtos.Person3">persons</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.QueryPerson4ByPostAsync(Ellucian.Colleague.Dtos.Person4)">
            <summary>
            Queries a person by post.
            </summary>
            <param name="person"><see cref="T:Ellucian.Colleague.Dtos.Person4">Person</see> to use for querying</param>
            <returns>List of matching <see cref="T:Ellucian.Colleague.Dtos.Person4">persons</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.QueryPerson5ByPostAsync(Ellucian.Colleague.Dtos.Person5)">
            <summary>
            Queries a person by post.
            </summary>
            <param name="person"><see cref="T:Ellucian.Colleague.Dtos.Person5">Person</see> to use for querying</param>
            <returns>List of matching <see cref="T:Ellucian.Colleague.Dtos.Person5">persons</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.QueryPersonMatchResultsByPostAsync(Ellucian.Colleague.Dtos.Base.PersonMatchCriteria)">
            <summary>
            Query person by criteria and return the results of the matching algorithm
            </summary>
            <param name="criteria">The <see cref="T:Ellucian.Colleague.Dtos.Base.PersonMatchCriteria">criteria</see> to query by.</param>
            <returns>List of matching <see cref="T:Ellucian.Colleague.Dtos.Base.PersonMatchResult">results</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.QueryPersonNamesByPostAsync(Ellucian.Colleague.Dtos.Base.PersonNameQueryCriteria)">
            <summary>
            Retrieves the matching Persons for the ids provided or searches keyword
            for the matching Persons if a first and last name are provided.  
            In the latter case, a middle name is optional.
            Matching is done by partial name; i.e., 'Bro' will match 'Brown' or 'Brodie'. 
            Capitalization is ignored.
            </summary>
            <remarks>the following input is legal
            <list type="bullet">
            <item>a Colleague id.  Short ids will be zero-padded.</item>
            <item>First Last</item>
            <item>First Middle Last</item>
            <item>Last, First</item>
            <item>Last, First Middle</item>
            </list>
            </remarks>
            <param name="criteria">Keyword can be either a Person ID or a first and last name.  A middle name is optional.</param>
            <returns>An enumeration of <see cref="T:Ellucian.Colleague.Dtos.Base.Person">Person</see> with populated ID and first, middle and last names</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.GetPersonGuidByIdAsync(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonsController.AddAlternateIdAsync(Ellucian.Colleague.Dtos.Base.AlternateIdentifier)">
            <summary>
            Adds an alternative identifier to an existing colleague person record.
            </summary>
            <param name="alternateIdentifier">AlternateIdentifier DTO</param>
            <accessComments>
            Logged-in user must have the permission 'UPDATE.PERSON' to add an alternative identifer to an existing colleague person.
            </accessComments>
            <returns>Newly added alternative identifier.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController">
            <summary>
            Provides access to PersonSources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonSourcesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonSourcesController class.
            </summary>
            <param name="personSourcesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonSourcesService">IPersonSourcesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController.GetPersonSourcesAsync">
            <summary>
            Return all personSources
            </summary>
            <returns>List of PersonSources <see cref="T:Ellucian.Colleague.Dtos.PersonSources"/> objects representing matching personSources</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController.GetPersonSourcesByGuidAsync(System.String)">
            <summary>
            Read (GET) a personSources using a GUID
            </summary>
            <param name="guid">GUID to desired personSources</param>
            <returns>A personSources object <see cref="T:Ellucian.Colleague.Dtos.PersonSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController.PostPersonSourcesAsync(Ellucian.Colleague.Dtos.PersonSources)">
            <summary>
            Create (POST) a new personSources
            </summary>
            <param name="personSources">DTO of the new personSources</param>
            <returns>A personSources object <see cref="T:Ellucian.Colleague.Dtos.PersonSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController.PutPersonSourcesAsync(System.String,Ellucian.Colleague.Dtos.PersonSources)">
            <summary>
            Update (PUT) an existing personSources
            </summary>
            <param name="guid">GUID of the personSources to update</param>
            <param name="personSources">DTO of the updated personSources</param>
            <returns>A personSources object <see cref="T:Ellucian.Colleague.Dtos.PersonSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonSourcesController.DeletePersonSourcesAsync(System.String)">
            <summary>
            Delete (DELETE) a personSources
            </summary>
            <param name="guid">GUID to desired personSources</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController">
            <summary>
            Provides access to PersonVisas data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonVisasService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonVisasController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="personVisasService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonVisasService">IPersonVisasService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.GetAllPersonVisasAsync(Ellucian.Web.Http.Models.Paging,System.String)">
            <summary>
            Gets all person visa information
            </summary>
            <param name="page"></param>
            <param name="person"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.GetAllPersonVisas2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Gets all person visa information
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.GetPersonVisaByIdAsync(System.String)">
            <summary>
            Retrieves a person visa by ID.
            </summary>
            <param name="id">Id of person visa to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.PersonVisa">person visa</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.GetPersonVisaById2Async(System.String)">
            <summary>
            Retrieves a person visa by ID.
            </summary>
            <param name="id">Id of person visa to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.PersonVisa">person visa</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.PostPersonVisaAsync(Ellucian.Colleague.Dtos.PersonVisa)">
            <summary>
            Creates a PersonVisa.
            </summary>
            <param name="personVisa"><see cref="T:Ellucian.Colleague.Dtos.PersonVisa">personVisa</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.PersonVisa">PersonVisa</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.PostPersonVisa2Async(Ellucian.Colleague.Dtos.PersonVisa)">
            <summary>
            Creates a PersonVisa.
            </summary>
            <param name="personVisa"><see cref="T:Ellucian.Colleague.Dtos.PersonVisa">personVisa</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.PersonVisa">PersonVisa</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.PutPersonVisaAsync(System.String,Ellucian.Colleague.Dtos.PersonVisa)">
            <summary>
            Updates a person visa.
            </summary>
            <param name="id">id of the personVisa to update</param>
            <param name="personVisa"><see cref="T:Ellucian.Colleague.Dtos.PersonVisa">personVisa</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.PersonVisa">Dtos.PersonVisa</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.PutPersonVisa2Async(System.String,Ellucian.Colleague.Dtos.PersonVisa)">
            <summary>
            Updates a person visa.
            </summary>
            <param name="id">id of the personVisa to update</param>
            <param name="personVisa"><see cref="T:Ellucian.Colleague.Dtos.PersonVisa">personVisa</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.PersonVisa">Dtos.PersonVisa</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PersonVisasController.DeletePersonVisaAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PersonVisa
            </summary>
            <param name="id">id of the PersonVisa to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController">
            <summary>
            Provides access to PhoneType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPhoneTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PhoneTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="phoneTypeService">Service of type<see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPhoneTypeService"> IPhoneTypeService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.GetPhoneTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all phone types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PhoneType2">PhoneType</see> objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.GetPhoneTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an phone type by ID.
            </summary>
            <param name="id">Unique ID representing the Phone Type to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.PhoneType2">PhoneType</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.GetAsync">
            <summary>
            Retrieves all phone types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PhoneType">PhoneType </see>objects.</returns>
            <note>PhoneTypes are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.DeletePhoneTypesAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing Phone type in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the Phone Type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.PutPhoneTypesAsync(Ellucian.Colleague.Dtos.PhoneType2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Phone Type Record in Colleague (Not Supported)
            </summary>
            <param name="PhoneType"><see cref="!:PhoneType2">PhoneType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhoneTypesController.PostPhoneTypesAsync(Ellucian.Colleague.Dtos.PhoneType2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create a Phone Type Record in Colleague (Not Supported)
            </summary>
            <param name="PhoneType"><see cref="T:Ellucian.Colleague.Dtos.Base.PhoneType">PhoneType</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PhotosController">
            <summary>
            Provides a API controller for fetching photos.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhotosController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPhotoService,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            injection constructor
            </summary>
            <param name="photoService">IPhotoService instance.</param>
            <param name="apiSettings">ISettingsRepository instance.</param>
            <param name="logger">ILogger instance.</param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhotosController.GetUserPhotoConfiguration">
            <summary>
            Retrieves the photo configuration.
            </summary>
            <returns>Bool based on presence of PhotoURL and PhotoType</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PhotosController.GetPersonPhoto(System.String)">
            <summary>
            Retrieves a person's photo using the provided id.
            </summary>
            <param name="id">Person's ID</param>
            <returns>The photo as a stream. The content-type will be based on the type of image being returned.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when a person's photo was not found.</exception>
            <accessComments>
            A person may view their own photo. Authenticated users with the CAN.VIEW.PERSON.PHOTOS permission can see other people's photos.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController">
            <summary>
            Provides access to Privacy Statuses data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PrivacyStatusesController class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController.GetPrivacyStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves all privacy statuses.
            </summary>
            <returns>All PrivacyStatus objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController.GetPrivacyStatusByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves a privacy statuses by ID.
            </summary>
            <returns>A PrivacyStatus.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController.PutPrivacyStatusAsync(Ellucian.Colleague.Dtos.PrivacyStatus)">
            <summary>
            Updates a PrivacyStatus.
            </summary>
            <param name="privacyStatus">PrivacyStatus to update</param>
            <returns>Newly updated PrivacyStatus</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController.PostPrivacyStatusAsync(Ellucian.Colleague.Dtos.PrivacyStatus)">
            <summary>
            Creates a PrivacyStatus.
            </summary>
            <param name="privacyStatus">PrivacyStatus to create</param>
            <returns>Newly created PrivacyStatus</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.PrivacyStatusesController.DeletePrivacyStatusAsync(System.String)">
            <summary>
            Delete (DELETE) an existing PrivacyStatus
            </summary>
            <param name="id">Id of the PrivacyStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RacesController">
            <summary>
            Provides access to Race data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RacesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.GetAsync">
            <summary>
            Gets all of the races.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Race">Races</see></returns>
            <note>Race is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.GetRaces2Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 6</remarks>
            <summary>
            Retrieves all races.
            </summary>
            <returns>All Race objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.GetRaceById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 4</remarks>
            <summary>
            Retrieves a race by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Race2">Race.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.PutRaces(Ellucian.Colleague.Dtos.Race2)">
            <summary>
            Updates a Race.
            </summary>
            <param name="race"><see cref="!:Race2">Race</see> to update</param>
            <returns>Newly updated <see cref="!:Race2">Race</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.PostRaces(Ellucian.Colleague.Dtos.Race2)">
            <summary>
            Creates a Race.
            </summary>
            <param name="race"><see cref="!:Race2">Race</see> to create</param>
            <returns>Newly created <see cref="!:Race2">Race</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RacesController.DeleteRaces(System.String)">
            <summary>
            Delete (DELETE) an existing Race
            </summary>
            <param name="id">Id of the Race to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController">
            <summary>
            Provides access to RegionIsoCodes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IRegionIsoCodesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RegionIsoCodesController class.
            </summary>
            <param name="regionIsoCodesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRegionIsoCodesService">IRegionIsoCodesService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>      
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController.GetRegionIsoCodesAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all region-iso-codes
            </summary>
            <returns>All region ISO codes<see cref="T:Ellucian.Colleague.Dtos.RegionIsoCodes">RegionIsoCodes</see></returns>               
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController.GetRegionIsoCodesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing region-iso-codes
            </summary>
            <param name="guid">GUID of the region-iso-codes to get</param>
            <returns>A regionIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.RegionIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController.PostRegionIsoCodesAsync(Ellucian.Colleague.Dtos.RegionIsoCodes)">
            <summary>
            Create (POST) a new regionIsoCodes
            </summary>
            <param name="regionIsoCodes">DTO of the new regionIsoCodes</param>
            <returns>A regionIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.RegionIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController.PutRegionIsoCodesAsync(System.String,Ellucian.Colleague.Dtos.RegionIsoCodes)">
            <summary>
            Update (PUT) an existing regionIsoCodes
            </summary>
            <param name="guid">GUID of the regionIsoCodes to update</param>
            <param name="regionIsoCodes">DTO of the updated regionIsoCodes</param>
            <returns>A regionIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.RegionIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionIsoCodesController.DeleteRegionIsoCodesAsync(System.String)">
            <summary>
            Delete (DELETE) a regionIsoCodes
            </summary>
            <param name="guid">GUID to desired regionIsoCodes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RegionsController">
            <summary>
            Provides access to Regions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RegionsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionsController.GetRegionsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all regions
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Regions">Regions</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionsController.GetRegionsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing regions
            </summary>
            <param name="guid">GUID of the regions to get</param>
            <returns>A regions object <see cref="T:Ellucian.Colleague.Dtos.Regions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionsController.PostRegionsAsync(Ellucian.Colleague.Dtos.Regions)">
            <summary>
            Create (POST) a new regions
            </summary>
            <param name="regions">DTO of the new regions</param>
            <returns>A regions object <see cref="T:Ellucian.Colleague.Dtos.Regions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionsController.PutRegionsAsync(System.String,Ellucian.Colleague.Dtos.Regions)">
            <summary>
            Update (PUT) an existing regions
            </summary>
            <param name="guid">GUID of the regions to update</param>
            <param name="regions">DTO of the updated regions</param>
            <returns>A regions object <see cref="T:Ellucian.Colleague.Dtos.Regions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RegionsController.DeleteRegionsAsync(System.String)">
            <summary>
            Delete (DELETE) a regions
            </summary>
            <param name="guid">GUID to desired regions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RelationshipsController">
            <summary>
            Provides access to Relationship data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IRelationshipService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiates a RelationshipController
            </summary>
            <param name="relationshipService">a relationship service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRelationshipService"/></param>
            <param name="logger">a logging service of type <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipsController.GetPersonPrimaryRelationshipsAsync(System.String)">
            <summary>
            Gets the primary relationships for a person or organization
            </summary>
            <param name="personId">The identifier of the person of interest</param>
            <returns>An enumeration of the person's primary relationship with other persons or organizations.</returns>
            <accessComments>
            Any logged in user can get their own primary relationships.
            A user with the permission ADD.ALL.HR.PROXY is considered as an admin and can access the primary relationship info of any employee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipsController.PostRelationshipAsync(Ellucian.Colleague.Dtos.Base.Relationship)">
            <summary>
            Creates the given relationship type between the two given entities
            </summary>
            <param name="relationship">The <see cref="T:Ellucian.Colleague.Dtos.Base.Relationship"/> to be created</param>
            <returns>The created <see cref="T:Ellucian.Colleague.Dtos.Base.Relationship"/></returns>
            <accessComments>
            Only the current user can create their own relationship.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController">
            <summary>
            Provides access to RelationshipStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IRelationshipStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RelationshipStatusesController class.
            </summary>
            <param name="relationshipStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRelationshipStatusesService">IRelationshipStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController.GetRelationshipStatusesAsync">
            <summary>
            Return all relationshipStatuses
            </summary>
            <returns>List of RelationshipStatuses <see cref="T:Ellucian.Colleague.Dtos.RelationshipStatuses"/> objects representing matching relationshipStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController.GetRelationshipStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a relationshipStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired relationshipStatuses</param>
            <returns>A relationshipStatuses object <see cref="T:Ellucian.Colleague.Dtos.RelationshipStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController.PostRelationshipStatusesAsync(Ellucian.Colleague.Dtos.RelationshipStatuses)">
            <summary>
            Create (POST) a new relationshipStatuses
            </summary>
            <param name="relationshipStatuses">DTO of the new relationshipStatuses</param>
            <returns>A relationshipStatuses object <see cref="T:Ellucian.Colleague.Dtos.RelationshipStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController.PutRelationshipStatusesAsync(System.String,Ellucian.Colleague.Dtos.RelationshipStatuses)">
            <summary>
            Update (PUT) an existing relationshipStatuses
            </summary>
            <param name="guid">GUID of the relationshipStatuses to update</param>
            <param name="relationshipStatuses">DTO of the updated relationshipStatuses</param>
            <returns>A relationshipStatuses object <see cref="T:Ellucian.Colleague.Dtos.RelationshipStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipStatusesController.DeleteRelationshipStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a relationshipStatuses
            </summary>
            <param name="guid">GUID to desired relationshipStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController">
            <summary>
            Provides access to RelationshipTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IRelationshipTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RelationshipTypesController class.
            </summary>
            <param name="adapterRegistry"></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="relationshipTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRelationshipTypesService">IRelationshipTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.GetAsync">
            <summary>
            Retrieves all Relationship Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.RelationshipType">relationship types.</see></returns>
            <note>Relationship Types are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.GetRelationshipTypesAsync">
            <summary>
            Return all relationshipTypes
            </summary>
            <returns>List of RelationshipTypes <see cref="T:Ellucian.Colleague.Dtos.RelationshipTypes"/> objects representing matching relationshipTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.GetRelationshipTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a relationshipTypes using a GUID
            </summary>
            <param name="guid">GUID to desired relationshipTypes</param>
            <returns>A relationshipTypes object <see cref="T:Ellucian.Colleague.Dtos.RelationshipTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.PostRelationshipTypesAsync(Ellucian.Colleague.Dtos.RelationshipTypes)">
            <summary>
            Create (POST) a new relationshipTypes
            </summary>
            <param name="relationshipTypes">DTO of the new relationshipTypes</param>
            <returns>A relationshipTypes object <see cref="T:Ellucian.Colleague.Dtos.RelationshipTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.PutRelationshipTypesAsync(System.String,Ellucian.Colleague.Dtos.RelationshipTypes)">
            <summary>
            Update (PUT) an existing relationshipTypes
            </summary>
            <param name="guid">GUID of the relationshipTypes to update</param>
            <param name="relationshipTypes">DTO of the updated relationshipTypes</param>
            <returns>A relationshipTypes object <see cref="T:Ellucian.Colleague.Dtos.RelationshipTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RelationshipTypesController.DeleteRelationshipTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a relationshipTypes
            </summary>
            <param name="guid">GUID to desired relationshipTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.ReligionsController">
            <summary>
            Provides access to Religion data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ReligionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ReligionsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ReligionsController.GetReligionsAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 5</remarks>
            <summary>
            Retrieves all religions.
            </summary>
            <returns>All Religion objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ReligionsController.GetReligionByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 5</remarks>
            <summary>
            Retrieves a religion by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Religion">Religion.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ReligionsController.PutReligionsAsync(Ellucian.Colleague.Dtos.Religion)">
            <summary>
            Updates a Religion.
            </summary>
            <param name="religion"><see cref="T:Ellucian.Colleague.Dtos.Religion">Religion</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.Religion">Religion</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ReligionsController.PostReligionsAsync(Ellucian.Colleague.Dtos.Religion)">
            <summary>
            Creates a Religion.
            </summary>
            <param name="religion"><see cref="T:Ellucian.Colleague.Dtos.Religion">Religion</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Religion">Religion</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.ReligionsController.DeleteReligionsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Religion
            </summary>
            <param name="id">Id of the Religion to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController">
            <summary>
            Provides access to room characteristic data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IRoomCharacteristicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RoomCharacteristicsController class.
            </summary>
            <param name="roomCharacteristicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRoomCharacteristicService">IRoomCharacteristicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController.GetRoomCharacteristicsAsync">
            <remarks>FOR USE WITH ELLUCIAN Data Model VERSION 6</remarks>
            <summary>
            Retrieves all room characteristics.
            </summary>
            <returns>All RoomCharacteristics objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController.GetRoomCharacteristicByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN Data Model VERSION 6</remarks>
            <summary>
            Retrieves a room characteristic by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.RoomCharacteristic">RoomCharacteristic.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController.PutRoomCharacteristicAsync(Ellucian.Colleague.Dtos.RoomCharacteristic)">
            <summary>
            Updates a RoomCharacteristic.
            </summary>
            <param name="roomCharacteristic">RoomCharacteristic to update</param>
            <returns>Newly updated RoomCharacteristic</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController.PostRoomCharacteristicAsync(Ellucian.Colleague.Dtos.RoomCharacteristic)">
            <summary>
            Creates a RoomCharacteristic.
            </summary>
            <param name="roomCharacteristic">RoomCharacteristic to create</param>
            <returns>Newly created RoomCharacteristic</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomCharacteristicsController.DeleteRoomCharacteristicAsync(System.String)">
            <summary>
            Delete (DELETE) an existing RoomCharacteristic
            </summary>
            <param name="id">Id of the RoomCharacteristic to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.RoomsController">
            <summary>
            Provides access to Room data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IRoomRepository,Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            RoomsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="roomRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IRoomRepository">IReferenceDataRepository</see></param>
            <param name="institutionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService">IInstitutionService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.GetRoomsAsync">
            <summary>
            Retrieves all Rooms
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Room">Room building codes, codes, and descriptions.</see></returns>
            <note>Room is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.GetHedmRooms3Async(Ellucian.Web.Http.Models.Paging)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
             Retrieves all rooms.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Room3">Rooms.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.GetHedmRooms4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all rooms.
            </summary>
            <param name="page">Paging offset and limit.</param>
            <param name="criteria">Filter Criteria, includes building, roomTypes.</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Room3">Rooms.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.GetHedmRoomById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a room by Id.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Room3">Room.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.PostRoom(Ellucian.Colleague.Dtos.Room)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Creates a Room.
            </summary>
            <param name="room"><see cref="T:Ellucian.Colleague.Dtos.Base.Room">Room</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Base.Room">Room</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.PutRoom(System.String,Ellucian.Colleague.Dtos.Room)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
             Updates a Room.
            </summary>
            <param name="id">Id of the Room to update</param>
            <param name="room"><see cref="T:Ellucian.Colleague.Dtos.Base.Room">Room</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Base.Room">Room</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.DeleteRoom(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
                Delete (DELETE) an existing Room
            </summary>
            <param name="id">Id of the Room to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.GetBuildingWingsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all Building Wings
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.BuildingWing">BuildingWings.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.GetBuildingWingsByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves an Building Wing by guid.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.BuildingWing">BuildingWings.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.PutBuildingWingsAsync(Ellucian.Colleague.Dtos.BuildingWing)">
            <summary>
            Updates a Building Wing.
            </summary>
            <param name="buildingWings"><see cref="T:Ellucian.Colleague.Dtos.BuildingWing">Building Wing</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.BuildingWing">Building Wing</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.PostBuildingWingsAsync(Ellucian.Colleague.Dtos.BuildingWing)">
            <summary>
            Creates a Building Wing.
            </summary>
            <param name="buildingWings"><see cref="T:Ellucian.Colleague.Dtos.BuildingWing">Building Wings</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.BuildingWing">Building Wings</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.DeleteBuildingWingsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Building Wings
            </summary>
            <param name="guid">Guid of the Building Wings to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.QueryAvailableRoomsByPost3Async(Ellucian.Colleague.Dtos.RoomsAvailabilityRequest2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Check for room availability for a given date range, start and end time, and frequency
            </summary>
            <param name="request">Room availability request</param>
            <returns>Collection of Room DTO objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.QueryAvailableRoomsByPost4Async(Ellucian.Colleague.Dtos.RoomsAvailabilityRequest3)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Check for room availability for a given date range, start and end time, and frequency
            </summary>
            <param name="request">Room availability request</param>
            <returns>Collection of Room DTO objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.QueryRoomsMinimumByPostAsync(Ellucian.Colleague.Dtos.RoomsAvailabilityRequest2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
             Check for room availability for a given date range, start and end time, and frequency.   Return GUID
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.RoomsMinimumResponse">RoomsMinimumResponse.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.ValidateRoomsAvailabilityRequest2(Ellucian.Colleague.Dtos.RoomsAvailabilityRequest2)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Validate RoomsAvailabilityRequest2 DTO
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.ValidateRoomsAvailabilityRequest3(Ellucian.Colleague.Dtos.RoomsAvailabilityRequest3)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Validate RoomsAvailabilityRequest3 DTO
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.RoomsController.ConvertRoomTypesTypeListToStringList(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.RoomType})">
            <summary>
            Convert list of GUID object Ids to list of strings
            </summary>
            <param name="roomTypeList">Guid Object of Ids</param>
            <returns>List of strings</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.SourceContextController">
            <summary>
            Controller for Source Context
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SourceContextController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the  Source Context Controller class.
            </summary>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SourceContextController.GetSourceContextsAsync">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Retrieves all source contexts.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All SourceContext objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SourceContextController.GetSourceContextsByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Retrieves a source context by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.SourceContext">SourceContext.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SourceContextController.PostSourceContextsAsync(Ellucian.Colleague.Dtos.SourceContext)">
            <summary>
            Creates a  Source Context.
            </summary>
            <param name="sourceContext"><see cref="T:Ellucian.Colleague.Dtos.SourceContext">SourceContext</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.SourceContext">SourceContext</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SourceContextController.PutSourceContextsAsync(System.String,Ellucian.Colleague.Dtos.SourceContext)">
            <summary>
            Updates a  Source Context.
            </summary>
            <param name="id">Id of the  Source Context to update</param>
            <param name="sourceContext"><see cref="T:Ellucian.Colleague.Dtos.SourceContext">SourceContext</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.SourceContext">SourceContext</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SourceContextController.DeleteSourceContextsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing  Source Context
            </summary>
            <param name="id">Id of the  Source Context to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.StaffController">
            <summary>
            Provides access to Staff data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.StaffController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IStaffService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StaffController class.
            </summary>
            <param name="staffService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IStaffService">IStaffService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.StaffController.GetAsync(System.String)">
            <summary>
            Get the staff record for the provided ID
            </summary>
            <param name="staffId">ID for the staff member</param>
            <returns>A staff record</returns>
            <accessComments>
            API endpoint is secured so that only requestor can access data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.StaffController.GetStaffRestrictions(System.String)">
            <summary>
            Retrieves the restrictions for the indicated staff.
            </summary>
            <param name="staffId">ID of the staff</param>
            <returns>The list of <see cref="T:Ellucian.Colleague.Dtos.Base.PersonRestriction"></see> restrictions.</returns>
            <accessComments>
            API endpoint is secured so that only requestor can access data
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.StatesController">
            <summary>
            Provides an API controller for fetching state and province codes.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.StatesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StatesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.StatesController.GetAsync">
            <summary>
            Gets information for all State and Province Codes 
            </summary>
            <returns>List of State Dtos</returns>
            <note>State is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController">
            <summary>
            Provides access to SubregionIsoCodes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SubregionIsoCodesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController.GetSubregionIsoCodesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all subregion-iso-codes
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.SubregionIsoCodes">SubregionIsoCodes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController.GetSubregionIsoCodesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing subregion-iso-codes
            </summary>
            <param name="guid">GUID of the subregion-iso-codes to get</param>
            <returns>A subregionIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.SubregionIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController.PostSubregionIsoCodesAsync(Ellucian.Colleague.Dtos.SubregionIsoCodes)">
            <summary>
            Create (POST) a new subregionIsoCodes
            </summary>
            <param name="subregionIsoCodes">DTO of the new subregionIsoCodes</param>
            <returns>A subregionIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.SubregionIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController.PutSubregionIsoCodesAsync(System.String,Ellucian.Colleague.Dtos.SubregionIsoCodes)">
            <summary>
            Update (PUT) an existing subregionIsoCodes
            </summary>
            <param name="guid">GUID of the subregionIsoCodes to update</param>
            <param name="subregionIsoCodes">DTO of the updated subregionIsoCodes</param>
            <returns>A subregionIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.SubregionIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionIsoCodesController.DeleteSubregionIsoCodesAsync(System.String)">
            <summary>
            Delete (DELETE) a subregionIsoCodes
            </summary>
            <param name="guid">GUID to desired subregionIsoCodes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.SubregionsController">
            <summary>
            Provides access to Subregions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SubregionsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionsController.GetSubregionsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all subregions
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Subregions">Subregions</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionsController.GetSubregionsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing subregions
            </summary>
            <param name="guid">GUID of the subregions to get</param>
            <returns>A subregions object <see cref="T:Ellucian.Colleague.Dtos.Subregions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionsController.PostSubregionsAsync(Ellucian.Colleague.Dtos.Subregions)">
            <summary>
            Create (POST) a new subregions
            </summary>
            <param name="subregions">DTO of the new subregions</param>
            <returns>A subregions object <see cref="T:Ellucian.Colleague.Dtos.Subregions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionsController.PutSubregionsAsync(System.String,Ellucian.Colleague.Dtos.Subregions)">
            <summary>
            Update (PUT) an existing subregions
            </summary>
            <param name="guid">GUID of the subregions to update</param>
            <param name="subregions">DTO of the updated subregions</param>
            <returns>A subregions object <see cref="T:Ellucian.Colleague.Dtos.Subregions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.SubregionsController.DeleteSubregionsAsync(System.String)">
            <summary>
            Delete (DELETE) a subregions
            </summary>
            <param name="guid">GUID to desired subregions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.TaxFormBoxCodesController">
            <summary>
            This is the controller for Tax Form Box Codes.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormBoxCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Base.Services.ITaxFormBoxCodesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Tax Form Box Codes controller.
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="boxCodesService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormBoxCodesController.GetAllTaxFormBoxCodesAsync">
            <summary>
            Returns all BoxCodes
            </summary>
            <returns>List of BoxCodes DTO objects </returns>
            <accessComments>
            No permission is needed.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController">
            <summary>
            Provides access to TaxFormComponents
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ITaxFormComponentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TaxFormComponentsController class.
            </summary>
            <param name="taxFormComponentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ITaxFormComponentsService">ITaxFormComponentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController.GetTaxFormComponentsAsync">
            <summary>
            Return all taxFormComponents
            </summary>
            <returns>List of TaxFormComponents <see cref="T:Ellucian.Colleague.Dtos.TaxFormComponents"/> objects representing matching taxFormComponents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController.GetTaxFormComponentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a taxFormComponents using a GUID
            </summary>
            <param name="guid">GUID to desired taxFormComponents</param>
            <returns>A taxFormComponents object <see cref="T:Ellucian.Colleague.Dtos.TaxFormComponents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController.PostTaxFormComponentsAsync(Ellucian.Colleague.Dtos.TaxFormComponents)">
            <summary>
            Create (POST) a new taxFormComponents
            </summary>
            <param name="taxFormComponents">DTO of the new taxFormComponents</param>
            <returns>A taxFormComponents object <see cref="T:Ellucian.Colleague.Dtos.TaxFormComponents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController.PutTaxFormComponentsAsync(System.String,Ellucian.Colleague.Dtos.TaxFormComponents)">
            <summary>
            Update (PUT) an existing taxFormComponents
            </summary>
            <param name="guid">GUID of the taxFormComponents to update</param>
            <param name="taxFormComponents">DTO of the updated taxFormComponents</param>
            <returns>A taxFormComponents object <see cref="T:Ellucian.Colleague.Dtos.TaxFormComponents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormComponentsController.DeleteTaxFormComponentsAsync(System.String)">
            <summary>
            Delete (DELETE) a taxFormComponents
            </summary>
            <param name="guid">GUID to desired taxFormComponents</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.TaxFormConsentsController">
            <summary>
            This is the controller for Tax Form Consents.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormConsentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Base.Services.ITaxFormConsentService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Tax Form Consent controller.
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="taxFormConsentService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormConsentsController.Get2Async(System.String,System.String)">
            <summary>
            This method gets Tax Form Consent information for a specified person and tax form ID (W-2, 1095-C, etc.).
            </summary>
            <param name="personId">Person ID</param>
            <param name="taxFormId">The type of tax form: 1099-MISC, W-2, etc.</param>
            <returns>A set of TaxFormConsent2 DTOs</returns>
            <accessComments>
            In order to access consent data, the user must meet one of the following conditions:
            1. Have the admin permission (depending on tax form, either ViewEmployeeW2, ViewEmployee1095C, ViewStudent1098, ViewEmployeeT4, ViewRecipientT4A, or ViewStudentT2202A)
            2. Have the normal permission (depending on tax form, either ViewW2, View1095C, View1098, ViewT4, ViewT4A, ViewT2202A, View1099MISC or View1099NEC), and be requesting their own data
            3. Be a Person Proxy for the user whose 1098 they are requesting (only applies to 1098)
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormConsentsController.Post2Async(Ellucian.Colleague.Dtos.Base.TaxFormConsent2)">
            <summary>
            This method stores a new Tax Form Consent entry.
            </summary>
            <param name="newTaxFormConsent2">TaxFormConsent2 DTO</param>
            <returns>TaxFormConsent2 DTO</returns>
            <accessComments>
            In order to create a consent, the user must have a permission to access their data (depending on tax form, either ViewW2, 
            View1095C, View1098, ViewT4, ViewT4A, ViewT2202A, View1099MISC or View1099NEC), and be requesting their own data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormConsentsController.GetAsync(System.String,Ellucian.Colleague.Dtos.Base.TaxForms)">
            <summary>
            This method gets Tax Form Consent information for a specified person and tax form ID (W-2, 1095-C, etc.).
            </summary>
            <param name="personId">Person ID</param>
            <param name="taxFormId">Tax Form ID</param>
            <returns>A set of Tax Form Consents</returns>
            <accessComments>
            In order to access consent data, the user must meet one of the following conditions:
            1. Have the admin permission (depending on tax form, either ViewEmployeeW2, ViewEmployee1095C, ViewStudent1098, ViewEmployeeT4, ViewRecipientT4A, or ViewStudentT2202A)
            2. Have the normal permission (depending on tax form, either ViewW2, View1095C, View1098, ViewT4, ViewT4A, ViewT2202A, View1099MISC or View1099NEC), and be requesting their own data
            3. Be a Person Proxy for the user whose 1098 they are requesting (only applies to 1098)
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormConsentsController.PostAsync(Ellucian.Colleague.Dtos.Base.TaxFormConsent)">
            <summary>
            This method stores a new Tax Form Consent entry.
            </summary>
            <param name="newTaxFormConsent">TaxFormConsent DTO</param>
            <returns>TaxFormConsent DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController">
            <summary>
            Provides access to TaxForms
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ITaxFormsBaseService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TaxFormsController class.
            </summary>
            <param name="taxFormsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ITaxFormsBaseService">ITaxFormsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController.GetTaxFormsAsync">
            <summary>
            Return all taxForms
            </summary>
            <returns>List of TaxForms <see cref="T:Ellucian.Colleague.Dtos.TaxForms"/> objects representing matching taxForms</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController.GetTaxFormsByGuidAsync(System.String)">
            <summary>
            Read (GET) a taxForms using a GUID
            </summary>
            <param name="guid">GUID to desired taxForms</param>
            <returns>A taxForms object <see cref="T:Ellucian.Colleague.Dtos.TaxForms"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController.PostTaxFormsAsync(Ellucian.Colleague.Dtos.TaxForms)">
            <summary>
            Create (POST) a new taxForms
            </summary>
            <param name="taxForms">DTO of the new taxForms</param>
            <returns>A taxForms object <see cref="T:Ellucian.Colleague.Dtos.TaxForms"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController.PutTaxFormsAsync(System.String,Ellucian.Colleague.Dtos.TaxForms)">
            <summary>
            Update (PUT) an existing taxForms
            </summary>
            <param name="guid">GUID of the taxForms to update</param>
            <param name="taxForms">DTO of the updated taxForms</param>
            <returns>A taxForms object <see cref="T:Ellucian.Colleague.Dtos.TaxForms"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.TaxFormsBaseController.DeleteTaxFormsAsync(System.String)">
            <summary>
            Delete (DELETE) a taxForms
            </summary>
            <param name="guid">GUID to desired taxForms</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.UserIdentityProfilesController">
            <summary>
            Provids access to user identity profile data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.UserIdentityProfilesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IUserIdentityProfileService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Controllers.Base.UserIdentityProfilesController"/> class.
            </summary>
            <param name="userIdentityProfileService">User Identity Profile Service</param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.UserIdentityProfilesController.GetUserIdentityProfilesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Returns a list of user identity profiles base on person filter criteria.
            </summary>
            <param name="page">User identity profile page to retrieve.</param>
            <param name="personFilter">Person filter search criteria.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.EUP.UserIdentityProfile"/> objects for person filter.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.UserIdentityProfilesController.GetUserIdentityProfileAsync(System.String)">
            <summary>
            Returns the requested resource for given guid
            </summary>
            <param name="id">A global identifier of User Identity Profiles for use in all external references</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.EUP.UserIdentityProfile"/> objects for person with given guid</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController">
            <summary>
            Provides access to VeteranStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IVeteranStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VeteranStatusesController class.
            </summary>
            <param name="veteranStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IVeteranStatusesService">IVeteranStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController.GetVeteranStatusesAsync">
            <summary>
            Return all veteranStatuses
            </summary>
            <returns>List of VeteranStatuses <see cref="T:Ellucian.Colleague.Dtos.VeteranStatuses"/> objects representing matching veteranStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController.GetVeteranStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a veteranStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired veteranStatuses</param>
            <returns>A veteranStatuses object <see cref="T:Ellucian.Colleague.Dtos.VeteranStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController.PostVeteranStatusesAsync(Ellucian.Colleague.Dtos.VeteranStatuses)">
            <summary>
            Create (POST) a new veteranStatuses
            </summary>
            <param name="veteranStatuses">DTO of the new veteranStatuses</param>
            <returns>A veteranStatuses object <see cref="T:Ellucian.Colleague.Dtos.VeteranStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController.PutVeteranStatusesAsync(System.String,Ellucian.Colleague.Dtos.VeteranStatuses)">
            <summary>
            Update (PUT) an existing veteranStatuses
            </summary>
            <param name="guid">GUID of the veteranStatuses to update</param>
            <param name="veteranStatuses">DTO of the updated veteranStatuses</param>
            <returns>A veteranStatuses object <see cref="T:Ellucian.Colleague.Dtos.VeteranStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Base.VeteranStatusesController.DeleteVeteranStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a veteranStatuses
            </summary>
            <param name="guid">GUID to desired veteranStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AgreementPeriodsController">
            <summary>
            Provides access to Citizen Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AgreementPeriodsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IAgreementsRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AgreementPeriodsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="agreementsRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IAgreementsRepository">IAgreementsRepository</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AgreementPeriodsController.GetAgreementPeriodsAsync">
            <summary>
            Get all <see cref="T:Ellucian.Colleague.Dtos.Base.AgreementPeriod">agreement periods</see>
            </summary>
            <returns>All agreement periods</returns>
            <accessComments>Any authenticated user can get agreement period information.</accessComments>
            <note>Agreement period information is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ApprovalsController">
            <summary>
            Provides access to approvals data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApprovalsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Base.IApprovalService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ApprovalsController class constructor
            </summary>
            <param name="adapterRegistry">Adapter Registry</param>
            <param name="logger">Interface to Logger</param>
            <param name="approvalService">Interface to the approval service</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApprovalsController.GetApprovalDocument(System.String)">
            <summary>
            Get an approval document.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="documentId">ID of approval document</param>
            <returns>An ApprovalDocument DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApprovalsController.GetApprovalResponse(System.String)">
            <summary>
            Get an approval response.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="responseId">ID of approval response</param>
            <returns>An ApprovalResponse DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BuildingsController">
            <summary>
            Provides access to Building data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            BuildingsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Reference data repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="institutionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService">IInstitutionService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.GetBuildingsAsync">
            <summary>
            Retrieves all Buildings.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Building">Building codes and descriptions.</see></returns>
            <note>This request supports anonymous access. The BUILDINGS entity in Colleague must have public access enabled for this endpoint to function anonymously. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.GetBuildingTypes">
            <summary>
            Retrieves all Building Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.BuildingType">Building Type codes and descriptions.</see></returns>
            <note>This request supports anonymous access. The BUILDING.TYPES (CORE.VALCODES) valcode in Colleague must have public access enabled for this endpoint to function anonymously. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.GetHedmBuildings3Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all buildings.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="mapVisibility"></param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Building">Buildings.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.GetHedmBuildings2Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all buildings.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Building">Buildings.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.GetHedmBuildingByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a building by ID.
            </summary>
            <returns>A <see cref="!:Dto.Building2">Building.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.GetHedmBuildingById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a building by ID.
            </summary>
            <returns>A <see cref="!:Dto.Building3">Building.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.PostBuildingAsync(Ellucian.Colleague.Dtos.Building2)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>        
            Creates a Building.
            </summary>
            <param name="building"><see cref="T:Ellucian.Colleague.Dtos.Building2">Building</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Building2">Building</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.PutBuildingAsync(System.String,Ellucian.Colleague.Dtos.Building2)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a Building.
            </summary>
            <param name="id">Id of the Building to update</param>
            <param name="building"><see cref="T:Ellucian.Colleague.Dtos.Building2">Building</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Building2">Building</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuildingsController.DeleteBuildingAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing Building
            </summary>
            <param name="id">Id of the Building to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CitizenTypesController">
            <summary>
            Provides access to Citizen Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CitizenTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CitizenTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CitizenTypesController.Get">
            <summary>
            Retrieves all Citizen Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.CitizenType">Citizen Type codes and descriptions.</see></returns>
            <note>CitizenType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CommentsController">
            <summary>
            Provides access to Comments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICommentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CommentsController class.
            </summary>
            <param name="commentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICommentsService">ICommentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentsController.GetCommentsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String)">
            <summary>
            Return all remarks found in the REMARKS file in Colleague using filter
            </summary>
            <param name="subjectMatter">find all of the records in REMARKS where the REMARKS.DONOR.ID matches the person or organization ID corresponding to the guid found in subjectMatter.person.id or subjectMatter.organization.id.</param>
            <param name="commentSubjectArea">find all of the records in REMARKS where the REMARKS.TYPE matches the code corresponding to the guid in commentSubjectArea.id.</param>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of Comments <see cref="T:Ellucian.Colleague.Dtos.Comments"/> objects representing matching comments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentsController.GetCommentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a comment using a GUID
            </summary>
            <param name="id">GUID to desired comment</param>
            <returns>A comment object <see cref="T:Ellucian.Colleague.Dtos.Comments"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentsController.PostCommentsAsync(Ellucian.Colleague.Dtos.Comments)">
            <summary>
            Create (POST) a new comment
            </summary>
            <param name="comment">DTO of the new comment</param>
            <returns>A comment object <see cref="T:Ellucian.Colleague.Dtos.Comments"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentsController.PutCommentsAsync(System.String,Ellucian.Colleague.Dtos.Comments)">
            <summary>
            Update (PUT) an existing comment
            </summary>
            <param name="id">GUID of the comment to update</param>
            <param name="comment">DTO of the updated comment</param>
            <returns>A comment object <see cref="T:Ellucian.Colleague.Dtos.Comments"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentsController.DeleteCommentByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) a comment
            </summary>
            <param name="id">GUID to desired comment</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController">
            <summary>
            Provides access to Comment Subject Area data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController.#ctor(Ellucian.Colleague.Coordination.Base.Services.ICommentSubjectAreaService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CommentSubjectAreaController class.
            </summary>
            <param name="commentSubjectAreaService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ICommentSubjectAreaService">ICommentSubjectAreaService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController.GetCommentSubjectAreaAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all comment subject areas.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All CommentSubjectArea objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController.GetCommentSubjectAreaByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a comment subject area by ID.
            </summary>
            <param name="id">Id of Comment Subject Area to retrieve</param>
            <returns>A CommentSubjectArea.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController.PostCommentSubjectAreaAsync(Ellucian.Colleague.Dtos.CommentSubjectArea)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Creates a CommentSubjectArea.
            </summary>
            <param name="commentSubjectArea"><see cref="!:Dtos.CommentSubjectArea2">CommentSubjectArea</see> to create</param>
            <returns>Newly created <see cref="!:Dtos.CommentSubjectArea2">CommentSubjectArea</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController.PutCommentSubjectAreaAsync(System.String,Ellucian.Colleague.Dtos.CommentSubjectArea)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Updates a Comment Subject Area.
            </summary>
            <param name="id">Id of the Comment Subject Area to update</param>
            <param name="commentSubjectArea"><see cref="!:Dtos.CommentSubjectArea2">CommentSubjectArea</see> to create</param>
            <returns>Updated <see cref="!:Dtos.CommentSubjectArea2">CommentSubjectArea</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommentSubjectAreaController.DeleteCommentSubjectAreaAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Delete (DELETE) an existing Comment Subject Area
            </summary>
            <param name="id">Id of the Comment Subject Area to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CommunicationCodesController">
            <summary>
            Provides access to CommunicationCode data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommunicationCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            CommunicationCodesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommunicationCodesController.GetCommunicationCodes">
            <summary>
            Retrieves all Communication Codes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.CommunicationCode">Communication Code codes and descriptions.</see></returns>
            <exception cref="!:HttpResponseException">Thrown if there was an error retrieving CommunicationCodes. HTTP Status Code 400</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CommunicationCodesController.GetCommunicationCodes2">
            <summary>
            Retrieves all Communication Codes. Version 2 as of API 1.8
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.CommunicationCode">CommunicationCode2 objects.</see></returns>
            <exception cref="!:HttpResponseException">Thrown if there was an error retrieving CommunicationCodes. HTTP Status Code 400</exception>
            <note>CommunicationCodes are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ConfigurationController">
            <summary>
            Provides access to Integration Configuration data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IConfigurationService,Ellucian.Colleague.Coordination.Base.Services.IProxyService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Logging.AuditLoggingAdapter,Ellucian.Web.Security.ICurrentUserFactory)">
            <summary>
            Initializes a new instance of the ConfigurationController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="configurationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IConfigurationService">IConfigurationService</see></param>
            <param name="proxyService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IProxyService">IProxyService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
            <param name="auditLoggingAdapter"></param>
            <param name="currentUserFactory"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.Get(System.String)">
            <remarks>FOR USE WITH ELLUCIAN CDM</remarks>
            <summary>
            Retrieves an integration configuration.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Base.IntegrationConfiguration">IntegrationConfiguration</see> information</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetProxyConfigurationAsync">
            <summary>
            Gets the proxy configuration
            </summary>
            <accessComments>
            Any authenticated user can access the proxy information.
            </accessComments>
            <returns>Proxy configuration information.</returns>
            <note>Proxy Configuration is cached for 1 hour.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetUserProfileConfigurationAsync">
            <summary>
            Gets the User Profile Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.UserProfileConfiguration">User Profile Configuration</see></returns>
            <note>UserProfileConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetUserProfileConfiguration2Async">
            <summary>
            Gets the User Profile Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.UserProfileConfiguration2">User Profile Configuration</see></returns>
            <note>UserProfileConfiguration2 is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetEmergencyInformationConfigurationAsync">
            <summary>
            Gets the Emergency Information Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.EmergencyInformationConfiguration">Emergency Information Configuration</see></returns>
            <note>EmergencyInformationConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetEmergencyInformationConfiguration2Async">
            <summary>
            Gets the Emergency Information Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.EmergencyInformationConfiguration2">Emergency Information Configuration</see></returns>
            <note>EmergencyInformationConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetRestrictionConfigurationAsync">
            <summary>
            Gets the Restriction Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.RestrictionConfiguration">Restriction Configuration</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetPrivacyConfigurationAsync">
            <summary>
            Gets the Privacy Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.PrivacyConfiguration">Privacy Configuration</see></returns>
            <note>Privacy Configuration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetOrganizationalRelationshipConfigurationAsync">
            <summary>
            Gets the Organizational Relationship Configuration
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.OrganizationalRelationshipConfiguration">OrganizationalRelationship Configuration</see></returns>
            <note>OrganizationalRelationshipConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.PostConfigBackupDataAsync(Ellucian.Colleague.Dtos.Base.BackupConfiguration)">
            <summary>
            Writes a new configuration data record to Colleague 
            </summary>
            <param name="backupData">data to backup</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.QueryBackupConfigDataByPostAsync(Ellucian.Colleague.Dtos.Base.BackupConfigurationQueryCriteria)">
            <summary>
            Lookup a configuration data record from Colleague
            </summary>
            <param name="backupDataQuery">Criteria for looking up backup config data.</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetConfigBackupDataAsync(System.String)">
            <summary>
            Reads a configuration data record from Colleague
            </summary>
            <param name="id">ID or key of backup record</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.PostBackupApiConfigAsync">
            <summary>
            Causes this API instance to perform a backup of its configuration data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.PostRestoreApiConfigAsync(System.Nullable{System.DateTimeOffset})">
            <summary>
            Causes this API instance to perform a restore of its configuration data using
            backup data retrieved from Colleague. Optionally merge the json files.
            Also cause app pool to recycle.
            Note: the json file merge operation currently is supported on a brand new instance only. It will
            not run on an instance whose resource files have already been modified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetSelfServiceConfigurationAsync">
            <summary>
            Retrieves Colleague Self-Service configuration information
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Base.SelfServiceConfiguration"/> object</returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Colleague Self-Service configuration information is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetRequiredDocumentConfigurationAsync">
            <summary>
            Gets the Required Document Configuration
            </summary>
            <accessComments>Any authenticated user can get the Required Document Configuration</accessComments>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.RequiredDocumentConfiguration">Required Document Configuration</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetSessionConfigurationAsync">
            <summary>
            Gets the Session Configuration
            </summary>
            <accessComments>Session Configuration is available anonymously</accessComments>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.SessionConfiguration">Session Configuration</see></returns>
            <note>This request supports anonymous access. No Colleague entity data is exposed via this anonymous request. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetAuditLogConfigurationAsync">
            <summary>
            Calls configuration service and returns the Audit Log Configuration object.
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.AuditLogConfiguration">Audit Log Configuration</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.UpdateAuditLogConfigurationAsync(Ellucian.Colleague.Dtos.AuditLogConfiguration)">
            <summary>
            Calls configuration repository and returns the Audit Log Configuration object.
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.AuditLogConfiguration">Audit Log Configuration</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.UpdateOAuthConfigurationSettings(Ellucian.Colleague.Dtos.OAuthConfigurationSettings)">
            <summary>
            Update or create OAuth configuration settings that correspond to the OACF form in the UI.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetTaxFormConfiguration2Async(System.String)">
            <summary>
            This method gets Tax Form Configuration for the tax form passed in.
            </summary>
            <param name="taxFormId">The tax form (W-2, 1095-C, 1098-T, etc.)</param>
            <returns>Tax Form Configuration for the type of tax form.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ConfigurationController.GetTaxFormConfigurationAsync(Ellucian.Colleague.Dtos.Base.TaxForms)">
            <summary>
            This method gets Tax Form Configuration for the tax form passed in.
            </summary>
            <param name="taxFormId">The tax form (W-2, 1095-C, 1098-T, etc.)</param>
            <returns>Tax Form Configuration for the type of tax form.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DegreeTypesController">
            <summary>
            Provides access to Degree Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreeTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the DegreeTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreeTypesController.Get">
            <summary>
            Retrieves all Degree Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.DegreeType">Degree Type codes and descriptions.</see></returns>
            <note>DegreeType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DenominationsController">
            <summary>
            Provides access to Denomination data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DenominationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            DenominationsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DenominationsController.GetDenominations">
            <summary>
            Retrieves all Denominations.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Denomination">Denomination codes and descriptions.</see></returns>
            <note>Denomination is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DepartmentsController">
            <summary>
            Access to Department data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DepartmentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            DepartmentsController Constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Reference data repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DepartmentsController.GetDepartmentsAsync">
            <summary>
            Retrieves all Departments
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Department">Department codes and descriptions.</see></returns>
            <note>Department is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DepartmentsController.GetActiveDepartmentsAsync">
            <summary>
            Retrieves all active Departments.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Department">active Department codes and descriptions.</see></returns>
            <note>Departent is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DisabilityTypesController">
            <summary>
            Provides access to Disability data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DisabilityTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the DisabilityTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DisabilityTypesController.Get">
            <summary>
            Retrieves all Disability Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Domain.Base.Entities.DisabilityType">Disability Type codes and descriptions.</see></returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>DisabilityType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DivisionsController">
            <summary>
            Provides access to Divisions data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DivisionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the DivisionsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DivisionsController.Get">
            <summary>
            Gets information for all Divisions codes
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Base.Division"/>Divisions</returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Division is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ECommerceController">
            <summary>
            Provides access to e-Commerce data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ECommerceController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.IECommerceService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ECommerceController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="ecommerceService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.IECommerceService">IECommerceService</see></param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ECommerceController.GetConvenienceFees">
            <summary>
            Retrieves all Convenience Fees.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.ConvenienceFee">Convenience Fee codes and descriptions.</see></returns>
            <note>ConvenienceFee is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController">
            <summary>
            Provides access to Educational Institutions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEducationalInstitutionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EducationalInstitutionsController class.
            </summary>
            <param name="educationalInstitutionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEducationalInstitutionsService">IEducationalInstitutionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController.GetEducationalInstitutionsAsync(Ellucian.Web.Http.Models.Paging,System.String,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return Educational-Institutions 
            </summary>
            <param name="page">paging information</param>
            <param name="type">Type of Educational-Institution ex:"secondary" or "postSecondary"</param>
            <param name="criteria">criteria</param>
            <returns>List of EducationalInstitutions <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitution"/> objects representing matching educationalInstitutions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController.GetEducationalInstitutionsByGuidAsync(System.String)">
            <summary>
            Read (GET) an Educational-Institution-Unit using a GUID
            </summary>
            <param name="id">GUID to desired educationalInstitution</param>
            <returns>An EducationalInstitutions object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitution"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController.PostEducationalInstitutionsAsync(Ellucian.Colleague.Dtos.EducationalInstitution)">
            <summary>
            Create (POST) a new Educational-Institution
            </summary>
            <param name="educationalInstitution">DTO of the new educationalInstitutionUnits</param>
            <returns>A educationalInstitutionUnits object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitution"/> in Data Model format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController.PutEducationalInstitutionsAsync(System.String,Ellucian.Colleague.Dtos.EducationalInstitution)">
            <summary>
            Update (PUT) an existing Educational-Institution
            </summary>
            <param name="id">GUID of the EducationalInstitutions to update</param>
            <param name="educationalInstitution">DTO of the updated EducationalInstitutions</param>
            <returns>A EducationalInstitutions object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitution"/> in Data Model format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionsController.DeleteEducationalInstitutionByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) a Educational-Institution
            </summary>
            <param name="id">GUID to desired EducationalInstitutions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController">
            <summary>
            Provides access to Educational Institution Units
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEducationalInstitutionUnitsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EducationalInstitutionUnitsController class.
            </summary>
            <param name="educationalInstitutionUnitsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEducationalInstitutionUnitsService">IEducationalInstitutionUnitsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.GetEducationalInstitutionUnits3Async(Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,System.String)">
            <summary>
            Return all educationalInstitutionUnits
            </summary>      
             <param name="criteria">JSON formatted selection criteria.</param>
            <param name="department">Indicates whether a department is active or inactive</param>
            <param name="type">Old Filter on type = department, school, division</param>
            <returns>List of EducationalInstitutionUnits <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits3"/> objects representing matching educationalInstitutionUnits</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.GetEducationalInstitutionUnits2Async(System.String)">
            <summary>
            Return Educational-Institution-Unit using type filter
            </summary>
            <param name="type">Type of Educational-Institution-Unit ex:"school", "division", "department"</param>
            <returns>List of EducationalInstitutionUnits <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits"/> objects representing matching educationalInstitutionUnits</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.GetEducationalInstitutionUnitsAsync(System.String)">
            <summary>
            Return Educational-Institution-Unit using type filter
            </summary>
            <param name="type">Type of Educational-Institution-Unit ex:"school", "division", "department"</param>
            <returns>List of EducationalInstitutionUnits <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits"/> objects representing matching educationalInstitutionUnits</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.GetEducationalInstitutionUnitsByGuid3Async(System.String)">
            <summary>
            Read (GET) an Educational-Institution-Unit using a GUID
            </summary>
            <param name="guid">GUID to desired educationalInstitutionUnits</param>
            <returns>An EducationalInstitutionUnits object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits3"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.GetEducationalInstitutionUnitsByGuid2Async(System.String)">
            <summary>
            Read (GET) an Educational-Institution-Unit using a GUID
            </summary>
            <param name="id">GUID to desired educationalInstitutionUnits</param>
            <returns>An EducationalInstitutionUnits object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.GetEducationalInstitutionUnitsByGuidAsync(System.String)">
            <summary>
            Read (GET) an Educational-Institution-Unit using a GUID
            </summary>
            <param name="id">GUID to desired educationalInstitutionUnits</param>
            <returns>An EducationalInstitutionUnits object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.PostEducationalInstitutionUnitsAsync(Ellucian.Colleague.Dtos.EducationalInstitutionUnits)">
            <summary>
            Create (POST) a new Educational-Institution-Unit
            </summary>
            <param name="educationalInstitutionUnits">DTO of the new educationalInstitutionUnits</param>
            <returns>A educationalInstitutionUnits object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.PutEducationalInstitutionUnitsAsync(System.String,Ellucian.Colleague.Dtos.EducationalInstitutionUnits)">
            <summary>
            Update (PUT) an existing Educational-Institution-Unit
            </summary>
            <param name="id">GUID of the EducationalInstitutionUnits to update</param>
            <param name="educationalInstitutionUnits">DTO of the updated EducationalInstitutionUnits</param>
            <returns>A EducationalInstitutionUnits object <see cref="T:Ellucian.Colleague.Dtos.EducationalInstitutionUnits"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationalInstitutionUnitsController.DeleteEducationalInstitutionUnitsByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) a Educational-Institution-Unit
            </summary>
            <param name="id">GUID to desired EducationalInstitutionUnits</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.EedmCacheKeysController">
            <summary>
            Clear API cache keys for Ethos integration
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EedmCacheKeysController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEedmCacheKeysService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EedmCacheKeysController class.
            </summary>
            <param name="eedmCacheKeysService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEedmCacheKeysService">IEedmCacheKeysService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EedmCacheKeysController.ClearEedmCacheKeys">
            <summary>
            POST - Clear EEDM cache keys
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.EventsController">
            <summary>
            Access to Section and Faculty Events
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EventsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEventService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            EventsController constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEventService">IEventService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EventsController.GetSectionEvents(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Retrieves events, or meetings, for a given course section in the given date range. If no dates specified, retrieves all meetings for the course section.
            </summary>
            <param name="sectionId">A list of section Ids, comma-delimited</param>
            <param name="startDate">The starting date for which to begin returning events.</param>
            <param name="endDate">The ending date at which to stop returning events.</param>
            <returns>Events as an ICal string</returns>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EventsController.GetFacultyEvents(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Retrieves events for a given faculty and a given date range.
            </summary>
            <param name="facultyId">A list of faculty IDs, comma-delimited</param>
            <param name="startDate">The starting date for which to begin returning events.</param>
            <param name="endDate">The ending date at which to stop returning events.</param>
            <returns>Events as an ICal string</returns>
            <accessComments>
            Any authenticated user can access faculty section calendar events.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EventsController.GetCampusCalendarsAsync">
            <summary>
            Get all Campus Calendars
            </summary>
            <returns></returns>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <note>CampusCalendars are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FrequencyCodesController">
            <summary>
            Provides access to Frequency Codes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FrequencyCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FrequencyCodesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">ReferenceDataRepository</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FrequencyCodesController.Get">
            <summary>
            Gets all of the Frequency Codes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.FrequencyCode">FrequencyCodes</see></returns>
            <note>FrequencyCode is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.GenderController">
            <summary>
            Provides access to Gender data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GenderController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GenderController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GenderController.GetGenders">
            <summary>
            Retrieves a collection of all the gender codes.
            </summary>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Gender">Gender codes and descriptions.</see></returns>
            <note>Genders is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HealthCheckController">
            <summary>
            Provides specific status information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HealthCheckController.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HealthCheckController.GetHealthCheckAsync">
            <summary>
            Retrieves status information for the Colleague Web API.
            </summary>
            <returns>Status information.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HealthConditionsController">
            <summary>
            Provides access to health condition data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HealthConditionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            HealthConditionsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Reference data repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HealthConditionsController.GetHealthConditions">
            <summary>
            Get the health conditions
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.HealthConditions"/></returns>
            <note>HealthConditions is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ImportantNumbersController">
            <summary>
            Colleague ImportantNumbers
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ImportantNumbersController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IImportantNumberRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ImportantNumbersController class
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="impRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IImportantNumberRepository">IImportantNumberRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ImportantNumbersController.Get">
            <summary>
            Retrieves all Important Numbers.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.ImportantNumber">Important Numbers.</see></returns>
            <note>This request supports anonymous access. The IMPORTANT.NUMBERS entity in Colleague must have public access enabled for this endpoint to function anonymously. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ImportantNumbersController.GetImportantNumberCategories">
            <summary>
            Retrieves all Important Number Categories.
            </summary>
            <returns>All Important Number Category codes and descriptions.</returns>
            <note>This request supports anonymous access. The MOBILE.DIRECTORY.CATEGORIES (CORE.VALCODES) valcode in Colleague must have public access enabled for this endpoint to function anonymously. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.InstitutionsController">
            <summary>
            Provides access to Institution data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstitutionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IInstitutionRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            InstitutionsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="institutionRepository">Institution repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IInstitutionRepository">IInstitutionRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstitutionsController.Get">
            <summary>
            Gets all institutions.
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Base.Institution">Institutions</see></returns>
            <note>Institution is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.InstitutionTypesController">
            <summary>
            Provides access to Institution Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstitutionTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstitutionTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstitutionTypesController.Get">
            <summary>
            Retrieves all Institution Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.InstitutionType">Institution Type codes and descriptions.</see></returns>
            <note>InstitutionType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.InterestsController">
            <summary>
            Provides access to Interest data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IInterestsService,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            InterestsController constructor
            </summary>
            <param name="interestsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IInterestsService">IInterestsService</see></param>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.GetInterests">
            <summary>
            Retrieves all Interests.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Interest">Interest codes and descriptions.</see></returns>
            <note>Interest is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.GetHedmInterestsAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all interests.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="!:Dtos.Interests">Interests</see> objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.GetInterestAreasAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all interest areas.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.InterestArea">InterestArea</see> objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.GetHedmInterestByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an interest by ID.
            </summary>
            <param name="id">Unique ID representing the interest to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Interest">Interest</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.GetInterestAreasByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an interest area by ID.
            </summary>
            <param name="id">Unique ID representing the interest area to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.InterestArea">InterestArea</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.DeleteHedmInterestAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing interest in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the interest to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.DeleteInterestAreasAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing interest area in Colleague (Not Supported)
            </summary>
            <param name="id">Unique ID representing the interest area to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.PutHedmInterestAsync(System.String,Ellucian.Colleague.Dtos.Interest)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update an Interest Record in Colleague (Not Supported)
            </summary>
            <param name="id">Id of the Interest to update</param>
            <param name="interest"><see cref="T:Ellucian.Colleague.Dtos.Interest">Interest</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.PutInterestAreasAsync(System.String,Ellucian.Colleague.Dtos.InterestArea)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Interest Area Record in Colleague (Not Supported)
            </summary>
            <param name="id">Id of the Interest Area to update</param>
            <param name="interestArea"><see cref="T:Ellucian.Colleague.Dtos.InterestArea">InterestArea</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.PostHedmInterestAsync(Ellucian.Colleague.Dtos.Interest)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create an Interest Record in Colleague (Not Supported)
            </summary>
            <param name="interest"><see cref="T:Ellucian.Colleague.Dtos.Interest">Interest</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InterestsController.PostInterestAreasAsync(Ellucian.Colleague.Dtos.InterestArea)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create a Interest Area Record in Colleague (Not Supported)
            </summary>
            <param name="interestArea"><see cref="T:Ellucian.Colleague.Dtos.InterestArea">InterestArea</see> to update</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.LanguagesController">
            <summary>
            Provides access to Language data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.ILanguagesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LanguagesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="languagesService">Language service<see cref="T:Ellucian.Colleague.Coordination.Base.Services.ILanguagesService">ILanguagesService</see></param>
            <param name="logger">Logger<see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.Get">
            <summary>
            Retrieves all Languages.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Language">Language codes and descriptions.</see></returns>
            <note>Language is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.GetLanguagesAsync">
            <summary>
            Return all languages
            </summary>
            <returns>List of Languages <see cref="T:Ellucian.Colleague.Dtos.Languages"/> objects representing matching languages</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.GetLanguagesByGuidAsync(System.String)">
            <summary>
            Read (GET) a languages using a GUID
            </summary>
            <param name="guid">GUID to desired languages</param>
            <returns>A languages object <see cref="T:Ellucian.Colleague.Dtos.Languages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.PostLanguagesAsync(Ellucian.Colleague.Dtos.Languages)">
            <summary>
            Create (POST) a new languages
            </summary>
            <param name="languages">DTO of the new languages</param>
            <returns>A languages object <see cref="T:Ellucian.Colleague.Dtos.Languages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.PutLanguagesAsync(System.String,Ellucian.Colleague.Dtos.Languages)">
            <summary>
            Update (PUT) an existing languages
            </summary>
            <param name="guid">GUID of the languages to update</param>
            <param name="language">DTO of the updated languages</param>
            <returns>A languages object <see cref="T:Ellucian.Colleague.Dtos.Languages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.DeleteLanguagesAsync(System.String)">
            <summary>
            Delete (DELETE) a languages
            </summary>
            <param name="guid">GUID to desired languages</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.GetLanguageIsoCodesAsync">
            <summary>
            Return all languageIsoCodes
            </summary>
            <returns>List of LanguageIsoCodes <see cref="T:Ellucian.Colleague.Dtos.LanguageIsoCodes"/> objects representing matching languageIsoCodes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.GetLanguageIsoCodesByGuidAsync(System.String)">
            <summary>
            Read (GET) a languageIsoCodes using a GUID
            </summary>
            <param name="guid">GUID to desired languageIsoCodes</param>
            <returns>A languageIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.LanguageIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.PostLanguageIsoCodesAsync(Ellucian.Colleague.Dtos.LanguageIsoCodes)">
            <summary>
            Create (POST) a new languageIsoCodes
            </summary>
            <param name="languageIsoCodes">DTO of the new languageIsoCodes</param>
            <returns>A languageIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.LanguageIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.PutLanguageIsoCodesAsync(System.String,Ellucian.Colleague.Dtos.LanguageIsoCodes)">
            <summary>
            Update (PUT) an existing languageIsoCodes
            </summary>
            <param name="guid">GUID of the languageIsoCodes to update</param>
            <param name="languageIsoCodes">DTO of the updated languageIsoCodes</param>
            <returns>A languageIsoCodes object <see cref="T:Ellucian.Colleague.Dtos.LanguageIsoCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LanguagesController.DeleteLanguageIsoCodesAsync(System.String)">
            <summary>
            Delete (DELETE) a languageIsoCodes
            </summary>
            <param name="guid">GUID to desired languageIsoCodes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.LocationsController">
            <summary>
            Provides access to Location data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LocationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            LocationsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LocationsController.GetLocations">
            <summary>
            Retrieves all Locations.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Location">Locations</see></returns>
            <note>This request supports anonymous access. The LOCATIONS entity in Colleague must have public access enabled for this endpoint to function anonymously. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.MaritalStatusesController">
            <summary>
            Provides access to Marital Status data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MaritalStatusesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.GetAsync">
            <summary>
            Retrieves all Marital Statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.MaritalStatus">Marital Status codes and descriptions.</see></returns>
            <note>MaritalStatus is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.GetMaritalStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all marital statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.MaritalStatus">MaritalStatuses.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.GetMaritalStatusByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a marital status by GUID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Base.MaritalStatus">MaritalStatus.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.GetMaritalStatuses2Async">
            <remarks>FOR USE WITH ELLUCIAN EEEDM Version 6</remarks>
            <summary>
            Retrieves all marital statuses. If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All MaritalStatuses.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.GetMaritalStatusById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 6</remarks>
            <summary>
            Retrieves a marital status by ID.
            </summary>
            <returns>A MaritalStatus.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.PostMaritalStatusesAsync(Ellucian.Colleague.Dtos.MaritalStatus2)">
            <summary>
            Creates a Marital Status.
            </summary>
            <param name="maritalStatus"><see cref="!:MaritalStatus2">MaritalStatus</see> to create</param>
            <returns>Newly created <see cref="!:MaritalStatus2">MaritalStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.PutMaritalStatusesAsync(System.String,Ellucian.Colleague.Dtos.MaritalStatus2)">
            <summary>
            Updates a Marital Status.
            </summary>
            <param name="id">Id of the Marital Status to update</param>
            <param name="maritalStatus"><see cref="!:MaritalStatus2">MaritalStatus</see> to create</param>
            <returns>Updated <see cref="!:MaritalStatus2">MaritalStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MaritalStatusesController.DeleteMaritalStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Marital Status
            </summary>
            <param name="id">Id of the Marital Status to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.MetadataController">
            <summary>
            Provides specific version information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IEthosApiBuilderService,Ellucian.Web.Cache.ICacheProvider,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Hosting.Server.IServer,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider,Ellucian.Web.Http.Configuration.ApiSettings,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.EndpointDataSource})">
             <summary>
            MetadataController
             </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetOpenApiMetadata(System.String)">
            <summary>
            Retrieves all the openAPI Specifications for a resource
            </summary>
            <returns>OpenAPI Specifications version 3.0.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetOpenApiMetadataByVersion(System.String,System.String)">
            <summary>
            Retrieves openAPI Specifications for a resource for a particular version
            </summary>
            <returns>OpenAPI Specifications version 3.0.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.CreateYamlFile(Microsoft.OpenApi.Models.OpenApiDocument)">
            <summary>
            Create the YAML file from the OpenApi Document and save it to the Documentation folder.
            </summary>
            <param name="openApiDocument"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetOpenApiManifestMetadata(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves all the openAPI Manifest Data for publishing in the API Catalog.
            </summary>
            <returns>Manifest Data for the sepcified API and version.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.CreateManifestFile(System.Collections.Generic.List{Ellucian.Colleague.Dtos.OpenApiManifest},System.String,System.String,System.String,System.String)">
            <summary>
            Create the YAML file from the OpenApi Document and save it to the Documentation folder.
            </summary>
            <param name="openApiManifestList"></param>
            <param name="selectedResource"></param>
            <param name="apiDomain"></param>
            <param name="apiType"></param>
            <param name="selectedVersion"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.PutOpenApiMetadata(System.Object)">
            <summary>
            Update not supported
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.PostOpenApiMetadata(System.Object)">
            <summary>
            Create not supported
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.DeleteOpenApiMetadata(System.String)">
            <summary>
            Delete not supported
            </summary>
            <param name="resourceName"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetOpenApiAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.RouteEndpoint},System.String,System.Boolean)">
            <summary>
            Gets all the openAPI specifications for a spec-based or Business Process API
            </summary>
            <param name="httpRoutes"></param>
            <param name="selectedResource"></param>
            <param name="bypassCache"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetOpenApiManifestsAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.RouteEndpoint},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns OpenAPI documentation in Extended data format for Pro-Code APIs
            </summary>
            <param name="httpRoutes"></param>
            <param name="selectedDomain">Create manifests only for APIs within the specified domain.</param>
            <param name="selectedType">Create manifests only for APIs with this specified type.</param>
            <param name="selectedResource">Specific API name requested for results.</param>
            <param name="selectedVersion">Specific version for a specified API to be returned.</param>
            <param name="bypassCache"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildApiConfigurationFromRoutesAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.RouteEndpoint},System.String,System.Boolean)">
            <summary>
            Returns OpenAPI documentation in Extended data format for Pro-Code APIs
            </summary>
            <param name="httpRoutes"></param>
            <param name="selectedResource"></param>
            <param name="bypassCache"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.CopyDataRowToFilterRow(Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String)">
            <summary>
            Copy data from the Data List to the Filter List for pro-code APIs.
            </summary>
            <param name="apiVersionConfig"></param>
            <param name="selectedResource"></param>
            <param name="versionOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ExtractVersionNumberOnly(System.String)">
            <summary>
            Extract the version number from a customMediaType.  Extracts integers or semantic versions.
            </summary>
            <param name="original"></param>
            <returns>Version number.  May contain none, or unknown number of decimals</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertModuleToDomain(System.String)">
            <summary>
            Convert the module code designation to an API Domain code.
            </summary>
            <param name="moduleCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertApiType2Enum(System.String)">
            <summary>
            Convert the api type string to an API manifest type enumeration.
            </summary>
            <param name="releaseType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertApiTypeFromEnum(Ellucian.Colleague.Dtos.EnumProperties.OpenApiManifestType)">
            <summary>
            Convert the api type enumeration to an API manifest type string.
            </summary>
            <param name="releaseType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertReleaseStatus2Enum(System.String)">
            <summary>
            Convert the api status string to an API Release Status enumeration.
            </summary>
            <param name="releaseStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertReleaseStatusFromEnum(Ellucian.Colleague.Dtos.EnumProperties.OpenApiReleaseStatus)">
            <summary>
            Convert the api status enumeration to an API Release Status string.
            </summary>
            <param name="releaseStatusEnumeration"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertDomain2Enum(System.String)">
            <summary>
            Convert the domain string designation to an API Domain enumeration.
            </summary>
            <param name="domainString"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.ConvertDomainFromEnum(Ellucian.Colleague.Dtos.EnumProperties.OpenApiManifestDomain)">
            <summary>
            Convert the domain enumeration designation to an API Domain string.
            </summary>
            <param name="domainEnumeration"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetVersionPropertiesForApiRequest(System.Reflection.MethodInfo,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            Get type type name of the HTTP Request
            </summary>
            <param name="mi"></param>
            <param name="apiVersionConfig"></param>
            <returns>The Type Name for the request</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetVersionPropertiesForApiResponse(System.Reflection.MethodInfo,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            Get the Json Schema properties
            </summary>
            <param name="mi"></param>
            <param name="apiVersionConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetVersionPropertiesFromDto(System.String,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.Boolean,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Get the Schema from the DTO
            </summary>
            <param name="dtoTypeNameInput"></param>
            <param name="apiVersionConfig"></param>
            <param name="useCamelCase"></param>
            <param name="filterNames"></param>
            <param name="rootJsonPath"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetExtensibleDataRow(System.Type,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.Reflection.PropertyInfo,System.Boolean,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Build an EthosExtensibleDataRow for the Open API specs to work with.
            </summary>
            <param name="dtoType"></param>
            <param name="apiVersionConfig"></param>
            <param name="orgProperty"></param>
            <param name="useCamelCase"></param>
            <param name="filterNames"></param>
            <param name="rootJsonPath"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildOpenApiComponentsProperty(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            Returns OpenApiComponents object using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="requestApiVersionConfig">version configuration infor for request (may be different than response).</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildOpenApiPathsProperty(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            Returns OpenApiPaths object using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildOpenApiPathPropertyFromRoute(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,Microsoft.OpenApi.Models.OpenApiDocument)">
            <summary>
            Returns OpenApiPaths object using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS for response</param>
            <param name="requestApiVersionConfig">version configuration info from EDM.EXT.VERSIONS for request (which may be different than response)</param>
            <param name="selectedMethod">Method to update in the OpenApiDocument</param>
            <param name="openApiDocument">Working OpenAPI document</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildGetOperationObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns OpenApiOperation object for Get using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="httpmethodDesc">Description of the httpMethod</param>
            <param name="httpMethodPermission">Permission for the httpMethod</param>
            <param name="httpMethodSummary">Summary for the httpMethod</param>
            <param name="httpRouteTemplate">route template for component reference name.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildGetbyIdOperationObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns OpenApiOperation object for Get using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="httpmethodDesc">Description of the httpMethod</param>
            <param name="httpMethodPermission">Permission for the httpMethod</param>
            <param name="httpMethodSummary">Summary for the httpMethod</param>
            <param name="httpRouteTemplate">route template for component reference name.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.OverrideParametersObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Microsoft.OpenApi.Models.OpenApiOperation,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Override the operation parameters object if we have method arguments pulled in from the XML comments of the controller method
            being documented.
            </summary>
            <param name="apiConfiguration">Api Configuration to build OpenAPI operation.</param>
            <param name="operation">The OpenApiOperation object.</param>
            <param name="methodArguments">Dictionary of Method Arguments from XML comments.</param>
            <param name="routeTemplate">The route template with matching arguments.</param>
            <param name="selectedMethod">If we are on GET then we need to include query parameters.</param>
            <returns>An OpenApiOperation for this GET/PUT request.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.OverrideResponsesObject(Microsoft.OpenApi.Models.OpenApiOperation,System.Collections.Generic.List{System.String})">
            <summary>
            Override the operation responses object if we have exceptions pulled in from the XML comments of the controller method
            being documented.
            </summary>
            <param name="operation"></param>
            <param name="methodExceptions"></param>
            <returns>An OpenApiOperation for this request.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildPutOperationObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns OpenApiOperation object for Put using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="httpmethodDesc">Description of the httpMethod</param>
            <param name="httpMethodPermission">Permission for the httpMethod</param>
             <param name="httpMethodSummary">Summary for the httpMethod</param>
            <param name="httpRouteTemplate">route template for component reference name.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsSpecBased(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api is spec-based
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsBpa(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api is Business Process Based
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsEthos(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api is Ethos or Ethos Enabled
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsEthosEnabled(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api is Ethos or Ethos Enabled
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsWeb(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api is web enabled
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsLegacy(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api is Ethos or Ethos Enabled
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.SupportGetByIdOnly(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api only supports get by Id
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.SupportGetAllOnly(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api only supports get all
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.SupportPostOnly(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api only supports qapi post or post
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsCompositeKey(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returns true if the api uses a composite Key
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildQapiPostOperationObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns OpenApiOperation object for QAPI Post using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="httpmethodDesc">Description of the httpMethod</param>
            <param name="httpMethodPermission">Permission for the httpMethod</param>
            <param name="httpMethodSummary">Summary for the httpMethod</param>
            <param name="httpRouteTemplate">route template for component reference name.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildPostOperationObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns OpenApiOperation object for Post using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="httpmethodDesc">Description of the httpMethod</param>
            <param name="httpMethodPermission">Permission for the httpMethod</param>
            <param name="httpMethodSummary">Summary for the httpMethod</param>
            <param name="httpRouteTemplate">route template for component reference name.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildDeleteOperationObject(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns OpenApiOperation object for Delete using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="httpmethodDesc">Description of the httpMethod</param>
            <param name="httpMethodPermission">Permission for the httpMethod</param>
            <param name="httpMethodSummary">Summary for the httpMethod</param>
            <param name="httpRouteTemplate">route template for component reference name.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildPathItemPutPostRequestBody(Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String)">
            <summary>
            Returns OpenApiRequestBody object using the API configuration info
            </summary>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="schemaPrefix">prefix for the content schema</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildOpenApiSecurityRequirement">
            <summary>
            Returns static OpenApiSecurityRequirement object
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildPathItemResponse(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns OpenApiResponse object using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="httpMethod">Method supported by the operation</param>
            <param name="schema_prefix">prefix for the content schema</param>
            <param name="returnCode">http response return code</param>
            <param name="showAddResponseHeader">http response return code</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildOpenApiServersProperty(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration)">
            <summary>
            Returning OpenApiServers Info
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.BuildOpenApiInfoProperty(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            Returning OpenApiInfo object using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.UpdateOpenApiInfoProperty(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,Microsoft.OpenApi.Models.OpenApiInfo)">
            <summary>
            Returning OpenApiInfo object using the API configuration info
            </summary>
            <param name="apiConfiguration">main API configuration from EDM.EXTENSIONS</param>
            <param name="apiVersionConfig">version configuration info from EDM.EXT.VERSIONS</param>
            <param name="info">Existing Info object</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsParent(System.Type)">
            <summary>
            Determine if the type is parent
            </summary>
            <param name="type">Type</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetDisplayName(System.Reflection.PropertyInfo)">
            <summary>
            Get the name to be displayed
            </summary>
            <param name="prop">PropertyInfo</param>
            <returns>string</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetFilterName(System.Reflection.PropertyInfo)">
            <summary>
            If the property has a FilterPropertyAttribute, then return the name of the filter. 
            </summary>
            <param name="prop">propertyinfo</param>
            <returns>List of strings representing filter names associated to a property.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IsFilter(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Determine if a property has the FilterProperty attribute and should be displayed 
            </summary>
            <param name="prop">propertyinfo</param>
            <param name="filtername">string</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IterateProperties(System.String,System.Type,System.String,System.Boolean)">
            <summary>
            IterateProperties
            </summary>
            <param name="filterGroupName">string representing the filterGroup</param>
            <param name="T">property type</param>
            <param name="baseName">property name</param>
            <param name="checkForFilterGroup">validate the property is a member of a filterGroup.  used when a parent object is defined as 
            a filterable property, and all the children are then a memeber of that filter.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetGenericType(System.Type)">
            <summary>
            Get the generic type for a list
            </summary>
            <param name="T">Type</param>
            <returns>Type</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetIdOpenApiSchemaFromExtensibleDataAsync(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            GetIdOpenApiSchemaFromExtensibleData
            </summary>
            <param name="apiVersionConfig">Domain.Base.Entities.EthosExtensibleData</param>
            <param name="apiConfiguration">EthosApiConfiguration</param>
            <returns>OpenApiSchema</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetFilterOpenApiSchemaFromExtensibleDataAsync(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String)">
            <summary>
            GetIdOpenApiSchemaFromExtensibleData
            </summary>
            <param name="apiVersionConfig">Domain.Base.Entities.EthosExtensibleData</param>
            <param name="apiConfiguration">EthosApiConfiguration</param>
            <param name="queryName"></param>
            <returns>OpenApiSchema</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetNameQueryOpenApiSchemaFromExtensibleDataAsync(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData)">
            <summary>
            Build Schema for NameQuery component
            </summary>
            <param name="apiVersionConfig">Domain.Base.Entities.EthosExtensibleData</param>
            <param name="apiConfiguration">EthosApiConfiguration</param>
            <returns>OpenApiSchema</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetOpenApiSchemaFromExtensibleDataAsync(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String)">
            <summary>
            GetOpenApiSchemaFromExtensibleData
            </summary>
            <param name="extendConfig">Domain.Base.Entities.EthosExtensibleData</param>
            <param name="ethosApiConfiguration">EthosApiConfiguration</param>
            <param name="putPostMethod">whether this is Put or POST</param>
            <returns>OpenApiSchema</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.IspredefinedInputs(Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleDataRow)">
            <summary>
            Returns true if data field is predefinedInputs
            </summary>
            <param name="extendedData">EDMV column data</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetEnumNames(System.Type)">
            <summary>
            Gets all enum member values for given enum type
            </summary>
            <param name="fieldType">enum type</param>
            <returns>enum member values</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataController.GetApiName(System.String)">
            <summary>
            Gets the api name
            </summary>
            <param name="routeTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MetadataVersionNumberComparer.Compare(System.String,System.String)">
            <summary>
            Compare strings which represent semantic version numbers and/or integers
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>x is greater return 1 else if y is greater return -1</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.OrganizationalRelationshipsController">
            <summary>
            Provides access to organizational relationships
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationalRelationshipsController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IOrganizationalPersonPositionService,Ellucian.Colleague.Coordination.Base.Services.IOrganizationalRelationshipService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            OrganizationalRelationshipsController constructor
            </summary>
            <param name="organizationalPersonPositionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IOrganizationalPersonPositionService">IOrganizationalPersonPositionService</see></param>
            <param name="organizationalRelationshipService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IOrganizationalRelationshipService">IOrganizationalRelationshipService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationalRelationshipsController.CreateOrganizationalRelationshipAsync(Ellucian.Colleague.Dtos.Base.OrganizationalRelationship)">
            <summary>
            Create organizational relationship
            </summary>
            <param name="organizationalRelationship">The organizational relationship</param>
            <returns>The new organizational relationship</returns>
            <accessComments>
            Users with the following permission codes can create organizational relationships:
            
            UPDATE.ORGANIZATIONAL.RELATIONSHIPS
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationalRelationshipsController.UpdateOrganizationalRelationshipAsync(Ellucian.Colleague.Dtos.Base.OrganizationalRelationship)">
            <summary>
            Update organizational relationship
            </summary>
            <param name="organizationalRelationship">The organizational relationship</param>
            <returns>The updated organizational relationship</returns>
            <accessComments>
            Users with the following permission codes can update organizational relationships:
            
            UPDATE.ORGANIZATIONAL.RELATIONSHIPS
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationalRelationshipsController.DeleteOrganizationalRelationshipAsync(System.String)">
            <summary>
            Delete an organizational relationship
            </summary>
            <param name="id">Organizational relationship ID to delete</param>
            <accessComments>
            Users with the following permission codes can delete organizational relationships:
            
            UPDATE.ORGANIZATIONAL.RELATIONSHIPS
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.OrganizationsController">
            <summary>
            Provides access to Organizations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService,Ellucian.Colleague.Coordination.Base.Services.IEducationalInstitutionsService,Ellucian.Colleague.Coordination.Base.Services.IPersonService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            OrganizationsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="institutionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService">IInstitutionService</see></param>
            <param name="personService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonService">IPersonService</see></param>
            <param name="educationalInstitutionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEducationalInstitutionsService">IEducationalInstitutionsService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.GetOrganizations2Async(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String)">
            <summary>
            Return all Organizations
            </summary>
            <param name="page">Person page to retrieve</param>
            <param name="role">Person Role equal to (guid)</param>
            <param name="credentialType">Person Credential Type (colleagueId or ssn)</param>
            <param name="credentialValue">Person Credential equal to</param>
            <returns>List of Organization <see cref="T:Ellucian.Colleague.Dtos.Organization2"/> objects representing matching Organization</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.GetOrganizationByGuid2Async(System.String)">
            <summary>
            Read (GET) an Organization using a GUID
            </summary>
            <param name="id">GUID to desired Organization</param>
            <returns>An Organization object <see cref="T:Ellucian.Colleague.Dtos.Organization2"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.PostOrganizationAsync(Ellucian.Colleague.Dtos.Organization2)">
            <summary>
            Create (POST) a new Organization
            </summary>
            <param name="organization">DTO of the new Organization</param>
            <returns>A Organization object <see cref="T:Ellucian.Colleague.Dtos.Organization2"/> in Data Model format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.PutOrganizationAsync(System.String,Ellucian.Colleague.Dtos.Organization2)">
            <summary>
            Update (PUT) an existing Organization
            </summary>
            <param name="id">GUID of the Organization to update</param>
            <param name="organization">DTO of the updated Organization</param>
            <returns>A Organization object <see cref="T:Ellucian.Colleague.Dtos.Organization2"/> in Data Model format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.DeleteOrganizationByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) a Organization
            </summary>
            <param name="id">GUID to desired Organization</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OrganizationsController.ValidateOrganizationContent(Ellucian.Colleague.Dtos.Organization2)">
            <summary>
            This method does validation on the deserialized json content of organization
            Will throw exceptions for errors with the data
            </summary>
            <param name="organization"></param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.OtherHonorsController">
            <summary>
            Controller for Other Honors
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OtherHonorsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IOtherHonorService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the Other HonorController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="otherHonorService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IOtherHonorService">IOtherHonorService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OtherHonorsController.GetOtherHonorAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Other Honors
            </summary>
            <returns>All <see cref="!:OtherHonors">OtherHonors.</see></returns>        
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OtherHonorsController.GetOtherHonorByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Other Honor by ID.
            </summary>
            <returns>A <see cref="!:OtherHonors">OtherHonor.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OtherHonorsController.PutOtherHonors(Ellucian.Colleague.Dtos.OtherHonor)">
            <summary>
            Updates a OtherHonor.
            </summary>
            <param name="otherHonor"><see cref="!:OtherHonor">OtherHonor</see> to update</param>
            <returns>Newly updated <see cref="!:OtherHonor">OtherHonor</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OtherHonorsController.PostOtherHonors(Ellucian.Colleague.Dtos.OtherHonor)">
            <summary>
            Creates a OtherHonor.
            </summary>
            <param name="otherHonor"><see cref="!:OtherHonor">OtherHonor</see> to create</param>
            <returns>Newly created <see cref="!:OtherHonor">OtherHonor</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.OtherHonorsController.DeleteOtherHonors(System.String)">
            <summary>
            Delete (DELETE) an existing OtherHonor
            </summary>
            <param name="id">Id of the OtherHonor to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.PersonAgreementsController">
            <summary>
            Provides access to Citizen Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonAgreementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IPersonAgreementsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonAgreementsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="personAgreementsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonAgreementsService">IPersonAgreementsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonAgreementsController.QueryPersonAgreementsByPostAsync(Ellucian.Colleague.Dtos.Base.PersonAgreementQueryCriteria)">
            <summary>
            Retrieve person agreements using person agreement query criteria
            </summary>
            <param name="criteria">Query criteria for retrieving person agreements</param>
            <returns>Collection of person agreements for a given person</returns>
            <accessComments>Authenticated users can only retrieve their own person agreement information.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonAgreementsController.UpdatePersonAgreementAsync(Ellucian.Colleague.Dtos.Base.PersonAgreement)">
            <summary>
            Updates a <see cref="T:Ellucian.Colleague.Dtos.Base.PersonAgreement">person agreement</see>. Users can only update the status and the date and time that action was taken on the person agreement.
            The person agreement description and text must exactly match the information stored in the database of record; if the description or text does not match then the update will be rejected.
            </summary>
            <param name="agreement">The <see cref="T:Ellucian.Colleague.Dtos.Base.PersonAgreement">person agreement</see> to update</param>
            <returns>An updated <see cref="T:Ellucian.Colleague.Dtos.Base.PersonAgreement">person agreement</see></returns>
            <accessComments>Authenticated users can only update their own person agreements.</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController">
            <summary>
            Provides access to PersonExternalEducation
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IPersonExternalEducationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonExternalEducationController class.
            </summary>
            <param name="externalEducationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPersonExternalEducationService">IPersonExternalEducationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController.GetPersonExternalEducationAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all personExternalEducation
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">filter criteria</param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <param name="personByInstitutionType">Retrieve information for a specific person at institution's of a specific type</param>
            <returns>List of PersonExternalEducation <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducation"/> objects representing matching personExternalEducation</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController.GetPersonExternalEducationByGuidAsync(System.String)">
            <summary>
            Read (GET) a personExternalEducation using a GUID
            </summary>
            <param name="guid">GUID to desired personExternalEducation</param>
            <returns>A personExternalEducation object <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducation"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController.PutPersonExternalEducationAsync(System.String,Ellucian.Colleague.Dtos.PersonExternalEducation)">
            <summary>
            Update (PUT) an existing PersonExternalEducation
            </summary>
            <param name="guid">GUID of the personExternalEducation to update</param>
            <param name="personExternalEducation">DTO of the updated personExternalEducation</param>
            <returns>A PersonExternalEducation object <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducation"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController.PostPersonExternalEducationAsync(Ellucian.Colleague.Dtos.PersonExternalEducation)">
            <summary>
            Create (POST) a new personExternalEducation
            </summary>
            <param name="personExternalEducation">DTO of the new personExternalEducation</param>
            <returns>A personExternalEducation object <see cref="T:Ellucian.Colleague.Dtos.PersonExternalEducation"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PersonExternalEducationController.DeletePersonExternalEducationAsync(System.String)">
            <summary>
            Delete (DELETE) a personExternalEducation
            </summary>
            <param name="guid">GUID to desired personExternalEducation</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.PhoneNumbersController">
            <summary>
            Provides access to Address data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PhoneNumbersController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IPhoneNumberRepository,Ellucian.Colleague.Domain.Base.Repositories.IConfigurationRepository,Ellucian.Colleague.Coordination.Base.Services.IPhoneNumberService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PhoneNumbersController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="phoneNumberRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IPhoneNumberRepository">IPhoneNumberRepository</see></param>        
            <param name="configurationRepository">Repository of type<see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IConfigurationRepository">IConfigurationRepository</see></param>   
            <param name="phoneNumberService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IPhoneNumberService">IPhoneNumberService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PhoneNumbersController.GetPersonPhonesAsync(System.String)">
            <summary>
            Get all current phone numbers for a person
            </summary>
            <param name="personId">Person to get phone numbers for</param>
            <returns>PhoneNumber Object <see cref="T:Ellucian.Colleague.Dtos.Base.PhoneNumber">PhoneNumber</see></returns>
            <accessComments>Authenticated users can retrieve their own phone numbers or users with the VIEW.PERSON.INFORMATION permission can retrieve phone numbers for others.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PhoneNumbersController.QueryPhoneNumbersAsync(Ellucian.Colleague.Dtos.Base.PhoneNumberQueryCriteria)">
            <summary>
            Get a list of phone numbers from a list of Person keys
            </summary>
            <param name="criteria">Selection Criteria including PersonIds list.</param>
            <returns>List of Phone Number Objects <see cref="T:Ellucian.Colleague.Dtos.Base.PhoneNumber">PhoneNumber</see></returns>
            <accessComments>
            Authenticated users can query their own phone numbers only. 
            Users with the QUERY.PHONE.NUMBERS permission or the VIEW.PERSON.INFORMATION permission can query phone numbers for others.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PhoneNumbersController.QueryPilotPhoneNumbersAsync(Ellucian.Colleague.Dtos.Base.PhoneNumberQueryCriteria)">
            <summary>
            Get a list of phone numbers from a list of Pilot Person keys
            </summary>
            <param name="criteria">Selection Criteria including PersonIds list.</param>
            <returns>List of Phone Number Objects <see cref="T:Ellucian.Colleague.Dtos.Base.PhoneNumber">PhoneNumber</see></returns>
            <accessComments>
            Authenticated users can query their own phone numbers only. Users with the QUERY.PHONE.NUMBERS permission can query phone numbers for anyone.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.PrefixesController">
            <summary>
            Provides access to Prefix data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PrefixesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PrefixController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PrefixesController.Get">
            <summary>
            Retrieves all Prefixes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Prefix">Prefix codes and descriptions.</see></returns>
            <note>Prefix is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ProspectSourcesController">
            <summary>
            Provides access to Prospect Source data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProspectSourcesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ProspectSourcesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProspectSourcesController.Get">
            <summary>
            Retrieves all Prospect Sources.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.ProspectSource">Prospect Source codes and descriptions.</see></returns>
            <note>ProspectSource is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResourcesController">
            <summary>
            Provides specific version information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IBulkLoadRequestService,Ellucian.Colleague.Coordination.Base.Services.IEthosApiBuilderService,Ellucian.Web.Cache.ICacheProvider,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Ellucian.Web.Http.Configuration.ApiSettings,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.EndpointDataSource})">
            <summary>
            ResourcesController
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetResources">
            <summary>
            Retrieves version information for the Colleague Web API.
            </summary>
            <returns>Version information.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetResourcesAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.RouteEndpoint},System.String,System.String,System.String)">
            <summary>
            Gets all the resources
            </summary>
            <param name="mediaFormat"></param>
            <param name="httpMethodConstraintName"></param>
            <param name="headerVersionConstraintName"></param>
            <param name="httpRoutes"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetEthosExtensibilityResourceDefaultVersion(System.Collections.Generic.List{Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData},System.String)">
            <summary>
            returns the default version of an API
            </summary>
            <param name="allExtendedEthosConfigurations"> list of configuration</param>
            <param name="resourceName"> Name of the API</param>
            <returns>Version number.  May contain none, or unknown number of decimals</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.ExtractVersionNumberOnly(System.String)">
            <summary>
            Extract the version number from a customMediaType.  Extracts integers or semantic versions.
            </summary>
            <param name="original"></param>
            <returns>Version number.  May contain none, or unknown number of decimals</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.AddMajorVersion(System.Collections.Generic.List{Ellucian.Colleague.Dtos.Representation},Ellucian.Colleague.Dtos.Representation,System.Boolean,System.String)">
            <summary>
            publishing the major version route
            </summary>
            <param name="representations"></param>
            <param name="representationToCompare"></param>    
            <param name="isCustom">Flag indicating this route is spec based</param> 
            <param name="routeTemplate">routeTemplate from controller route definition</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.InsertGetAllPatterns(Ellucian.Colleague.Dtos.Representation,System.String,System.Boolean,System.Boolean)">
            <summary>
            check if there is a get, if there is check and see if paging is already in the getallpatterns section, if not add it
            </summary>
            <param name="representation">representation to check</param>
            <param name="mediaType"></param>
            <param name="isBulkSupportedOnRoute"></param>
            <param name="isBulkSupportedForClient"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetFilters(System.Collections.Generic.List{System.String},System.Collections.Generic.List{Ellucian.Colleague.Dtos.NamedQuery},System.Type,System.String)">
            <summary>
            Get Filters and named queries
            </summary>
            <param name="filters">collection of string</param>
            <param name="namedQueries">collection of named query objects</param>
            <param name="T">type</param>
            <param name="controllerAction">controller method name</param>
            <returns>collection of filters used in criteria filtergroup</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.IsParent(System.Type)">
            <summary>
            Determine if the type is parent
            </summary>
            <param name="type">Type</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetDisplayName(System.Reflection.PropertyInfo)">
            <summary>
            Get the name to be displayed
            </summary>
            <param name="prop">PropertyInfo</param>
            <returns>string</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.IsFilter(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Determine if a property has the FilterProperty attribute and should be displayed 
            </summary>
            <param name="prop">propertyinfo</param>
            <param name="filtername">string</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.IterateProperties(System.String,System.Type,System.String,System.Boolean)">
            <summary>
            IteratePropertie
            </summary>
            <param name="filterGroupName">string representing the filterGroup</param>
            <param name="T">property type</param>
            <param name="baseName">property name</param>
            <param name="checkForFilterGroup">validate the property is a member of a filterGroup.  used when a parent object is defined as 
            a filterable property, and all the children are then a memeber of that filter.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetGenericType(System.Type)">
            <summary>
            Get the generic type for a list
            </summary>
            <param name="T">Type</param>
            <returns>Type</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.LegacyFilters(System.Collections.Generic.List{System.String},System.Collections.Generic.IEnumerable{Ellucian.Web.Http.Filters.ValidateQueryStringFilter})">
            <summary>
            Get filters used for versions 6 and 7
            </summary>
            <param name="keywords"></param>
            <param name="validateQueryFilters"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.LegacyNamedQueries(System.Collections.Generic.List{System.String},System.Collections.Generic.IEnumerable{Ellucian.Web.Http.Filters.ValidateQueryStringFilter})">
            <summary>
            Get filters used for versions 6 and 7
            </summary>
            <param name="keywords"></param>
            <param name="validateQueryFilters"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourcesController.GetApiName(System.String)">
            <summary>
            Gets the api name
            </summary>
            <param name="routeTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VersionNumberComparer.Compare(System.String,System.String)">
            <summary>
            Compare strings which represent semantic version numbers and/or integers
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>x is greater return 1 else if y is greater return -1</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.RolesController">
            <summary>
            Provides access to Role data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RolesController.#ctor(Ellucian.Colleague.Domain.Repositories.IRoleRepository,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            RolesController constructor
            </summary>
            <param name="roleRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Repositories.IRoleRepository">IRoleRepository</see></param>
            <param name="adapterRegistry">Adapter of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RolesController.GetRolesAsync">
            <summary>
            Retrieves all Roles.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Role">user Roles defined in Colleague.</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.RoomTypesController">
            <summary>
            Controller for Room Types
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RoomTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IRoomTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RoomTypeController class.
            </summary>
            <param name="roomTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IRoomTypesService">IRoomTypesService</see></param>
            <param name="logger">Interface to Logger</param>    
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RoomTypesController.GetRoomTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Room Types
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.RoomTypes">RoomTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RoomTypesController.GetRoomTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Room Type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.RoomTypes">RoomTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RoomTypesController.PutRoomType(Ellucian.Colleague.Dtos.RoomTypes)">
            <summary>
            Updates a RoomTypes.
            </summary>
            <param name="roomTypes"><see cref="T:Ellucian.Colleague.Dtos.RoomTypes">RoomTypes</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.RoomTypes">RoomTypes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RoomTypesController.PostRoomType(Ellucian.Colleague.Dtos.RoomTypes)">
            <summary>
            Creates a RoomTypes.
            </summary>
            <param name="roomTypes"><see cref="T:Ellucian.Colleague.Dtos.RoomTypes">RoomTypes</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.RoomTypes">RoomTypes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RoomTypesController.DeleteRoomType(System.String)">
            <summary>
            Delete (DELETE) an existing RoomTypes
            </summary>
            <param name="id">Id of the RoomTypes to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SchemasController">
            <summary>
            Provides specific version information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IBulkLoadRequestService,Ellucian.Colleague.Coordination.Base.Services.IEthosApiBuilderService,Ellucian.Web.Cache.ICacheProvider,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
             <summary>
            SchemasController
             </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.GetSchemas(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves version information for the Colleague Web API.
            </summary>
            <returns>Version information.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.PutSchemas(System.Object)">
            <summary>
            Update not supported
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.PostSchemas(System.Object)">
            <summary>
            Create not supported
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.DeleteSchemas(System.String)">
            <summary>
            Delete not supported
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.GetSchemasAsync(System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Route},System.String,System.String,System.Boolean)">
            <summary>
            Gets all the schemas
            </summary>
            <param name="httpRoutes"></param>
            <param name="selectedSchema"></param>
            <param name="filterVersion"></param>
            <param name="bypassCache"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.ExtractVersionNumberOnly(System.String)">
            <summary>
            Extract the version number from a customMediaType.  Extracts integers or semantic versions.
            </summary>
            <param name="original"></param>
            <returns>Version number.  May contain none, or unknown number of decimals</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.AddMajorVersion(System.Collections.Generic.List{Ellucian.Colleague.Dtos.SchemaRepresentation},Ellucian.Colleague.Dtos.SchemaRepresentation)">
            <summary>
            publishing the major version route
            </summary>
            <param name="representations"></param>
            <param name="representationToCompare"></param>    
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.GetFilters(System.Collections.Generic.List{System.String},System.Collections.Generic.List{Ellucian.Colleague.Dtos.NamedQuery},System.Type,System.String)">
            <summary>
            Get Filters and named queries
            </summary>
            <param name="filters">collection of string</param>
            <param name="namedQueries">collection of named query objects</param>
            <param name="T">type</param>
            <param name="controllerAction">controller method name</param>
            <returns>collection of filters used in criteria filtergroup</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.IsParent(System.Type)">
            <summary>
            Determine if the type is parent
            </summary>
            <param name="type">Type</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.GetDisplayName(System.Reflection.PropertyInfo)">
            <summary>
            Get the name to be displayed
            </summary>
            <param name="prop">PropertyInfo</param>
            <returns>string</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.IsFilter(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Determine if a property has the FilterProperty attribute and should be displayed 
            </summary>
            <param name="prop">propertyinfo</param>
            <param name="filtername">string</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.IterateProperties(System.String,System.Type,System.String,System.Boolean)">
            <summary>
            IterateProperties
            </summary>
            <param name="filterGroupName">string representing the filterGroup</param>
            <param name="T">property type</param>
            <param name="baseName">property name</param>
            <param name="checkForFilterGroup">validate the property is a member of a filterGroup.  used when a parent object is defined as 
            a filterable property, and all the children are then a memeber of that filter.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.LegacyFilters(System.Collections.Generic.List{System.String},System.Type,System.String)">
            <summary>
            Get filters used for versions 6 and 7
            </summary>
            <param name="keywords"></param>
            <param name="T"></param>
            <param name="controllerAction"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.LegacyNamedQueries(System.Collections.Generic.List{System.String},System.Type,System.String)">
            <summary>
            Get filters used for versions 6 and 7
            </summary>
            <param name="keywords"></param>
            <param name="T"></param>
            <param name="controllerAction"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.GetApiName(System.String)">
            <summary>
            Gets the api name
            </summary>
            <param name="routeTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemasController.GetJsonSchemaFromExtensibleDataAsync(Ellucian.Web.Http.EthosExtend.EthosApiConfiguration,Ellucian.Colleague.Domain.Base.Entities.EthosExtensibleData,System.String,Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            GetJsonSchemaFromExtensibleData
            </summary>
            <param name="extendConfig">Domain.Base.Entities.EthosExtensibleData</param>
            <param name="existingSchema"></param>
            <param name="id"></param>
            <param name="ethosApiConfiguration">EthosApiConfiguration</param>
            <returns>JsonSchema</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchemaVersionNumberComparer.Compare(System.String,System.String)">
            <summary>
            Compare strings which represent semantic version numbers and/or integers
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>x is greater return 1 else if y is greater return -1</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SchoolsController">
            <summary>
            Provides access to Schools data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchoolsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SchoolsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="schoolRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SchoolsController.Get">
            <summary>
            Gets information for all Schools codes
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Base.School"/>Schools</returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>School is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SitesController">
            <summary>
            Provides access to Sites
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SitesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            SitesController constructor
            </summary>
            <param name="institutionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IFacilitiesService">IInstitutionService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SitesController.GetHedmSitesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all sites.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All Site objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SitesController.GetHedmSiteByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a site by ID.
            </summary>
            <returns>A <see cref="!:Ellucian.Colleague.Dtos.Site">Site.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SitesController.PostSiteAsync(Ellucian.Colleague.Dtos.Site2)">
            <summary>
            Creates a Site.
            </summary>
            <param name="site"><see cref="T:Ellucian.Colleague.Dtos.Site2">Site</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Site2">Site</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SitesController.PutSiteAsync(System.String,Ellucian.Colleague.Dtos.Site2)">
            <summary>
            Updates a Site.
            </summary>
            <param name="id">Id of the Site to update</param>
            <param name="site"><see cref="T:Ellucian.Colleague.Dtos.Site2">Site</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Site2">Site</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SitesController.DeleteSiteAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Site
            </summary>
            <param name="id">Id of the Site to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController">
            <summary>
            Controller for Social Media Types
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the  Social Media Types Controller class.
            </summary>
            <param name="socialMediaTypeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController.GetSocialMediaTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Social Media Types
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.SocialMediaType">Social Media Types.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController.GetSocialMediaTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Social Media Type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.SocialMediaType">Social Media Type.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController.PostSocialMediaTypeAsync(Ellucian.Colleague.Dtos.SocialMediaType)">
            <summary>        
            Creates an Social Media Type
            </summary>
            <param name="socialMediaType"><see cref="T:Ellucian.Colleague.Dtos.SocialMediaType">SocialMediaType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.SocialMediaType">SocialMediaType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController.PutSocialMediaTypeAsync(System.String,Ellucian.Colleague.Dtos.SocialMediaType)">
            <summary>        
            Updates an SocialMediaType.
            </summary>
            <param name="id">Id of the Social Media Type to update</param>
            <param name="socialMediaType"><see cref="T:Ellucian.Colleague.Dtos.SocialMediaType">SocialMediaType</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.SocialMediaType">SocialMediaType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SocialMediaTypesController.DeleteSocialMediaTypeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Social Media Type
            </summary>
            <param name="id">Id of the  Social Media Type to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SpecialNeedsController">
            <summary>
            Provides access to Special Needs data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SpecialNeedsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SpecialNeedsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">ReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SpecialNeedsController.Get">
            <summary>
            Gets all of the Special Needs.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.SpecialNeed">SpecialNeeds</see></returns>
            <note>SpecialNeed is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SuffixesController">
            <summary>
            Provides access to Suffix data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SuffixesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SuffixController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SuffixesController.Get">
            <summary>
            Retrieves all Suffixes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.Suffix">Suffix codes and descriptions.</see></returns>
            <note>Suffix is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TextDocumentsController">
            <summary>
            Provides specific version information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TextDocumentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Base.Services.IDocumentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AddressesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="documentService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDocumentService">IDocumentService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TextDocumentsController.GetAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a text document
            </summary>
            <param name="documentId">ID of document to build</param>
            <param name="primaryEntity">Primary entity for document creation</param>
            <param name="primaryId">Primary record ID</param>
            <param name="personId">ID of person for whom document is being created</param>
            <returns>A text document</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.VersionController">
            <summary>
            Provides specific version information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VersionController.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VersionController.Get">
            <summary>
            Retrieves version information for the Colleague Web API.
            </summary>
            <returns>Version information.</returns>
            <note>This request supports anonymous access. No Colleague entity data is exposed via this anonymous request. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.VisaTypesController">
            <summary>
            Provides access to Visa Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Ellucian.Colleague.Coordination.Base.Services.IDemographicService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VisaTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="demographicService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.Get">
            <summary>
            Retrieves all Visa Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.VisaType">Visa Type codes and descriptions.</see></returns>
            <note>VisaType is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.GetVisaTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Visa Types
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.VisaType">Visa Types.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.GetVisaTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Visa Type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.VisaType">Visa Type.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.PostVisaTypeAsync(Ellucian.Colleague.Dtos.VisaType)">
            <summary>        
            Creates an Visa Type
            </summary>
            <param name="visaType"><see cref="T:Ellucian.Colleague.Dtos.VisaType">VisaType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.VisaType">VisaType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.PutVisaTypeAsync(System.String,Ellucian.Colleague.Dtos.VisaType)">
            <summary>        
            Updates an Visa Type.
            </summary>
            <param name="id">Id of the Visa Type to update</param>
            <param name="visaType"><see cref="T:Ellucian.Colleague.Dtos.VisaType">VisaType</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.VisaType">VisaType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.VisaTypesController.DeleteVisaTypeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Visa Type
            </summary>
            <param name="id">Id of the Visa Type to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.WorkTasksController">
            <summary>
            Provides access to Work Task data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.WorkTasksController.#ctor(Ellucian.Colleague.Coordination.Base.Services.IWorkTaskService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Creates a work task controller object.
            </summary>
            <param name="workTaskService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.WorkTasksController.GetAsync(System.String)">
            <summary>
            Get the list of open tasks for the indicated person
            </summary>
            <param name="personId">Required. Id of person to whom tasks are assigned. Retrieves tasks that are assigned to the person's Id or to any of the person's roles.</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController">
            <summary>
            Provides access to BudgetCodes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetCodesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BudgetCodesController class.
            </summary>
            <param name="budgetCodesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetCodesService">IBudgetCodesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController.GetBudgetCodesAsync">
            <summary>
            Return all budgetCodes
            </summary>
            <returns>List of BudgetCodes <see cref="T:Ellucian.Colleague.Dtos.BudgetCodes"/> objects representing matching budgetCodes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController.GetBudgetCodesByGuidAsync(System.String)">
            <summary>
            Read (GET) a budgetCodes using a GUID
            </summary>
            <param name="guid">GUID to desired budgetCodes</param>
            <returns>A budgetCodes object <see cref="T:Ellucian.Colleague.Dtos.BudgetCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController.PostBudgetCodesAsync(Ellucian.Colleague.Dtos.BudgetCodes)">
            <summary>
            Create (POST) a new budgetCodes
            </summary>
            <param name="budgetCodes">DTO of the new budgetCodes</param>
            <returns>A budgetCodes object <see cref="T:Ellucian.Colleague.Dtos.BudgetCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController.PutBudgetCodesAsync(System.String,Ellucian.Colleague.Dtos.BudgetCodes)">
            <summary>
            Update (PUT) an existing budgetCodes
            </summary>
            <param name="guid">GUID of the budgetCodes to update</param>
            <param name="budgetCodes">DTO of the updated budgetCodes</param>
            <returns>A budgetCodes object <see cref="T:Ellucian.Colleague.Dtos.BudgetCodes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetCodesController.DeleteBudgetCodesAsync(System.String)">
            <summary>
            Delete (DELETE) a budgetCodes
            </summary>
            <param name="guid">GUID to desired budgetCodes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentConfigurationController">
            <summary>
            Budget Development Configuration controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentConfigurationController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetDevelopmentConfigurationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Budget Development Configuration controller.
            </summary>
            <param name="budgetDevelopmentConfigurationService">BudgetDevelopment Configuration service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentConfigurationController.GetBudgetDevelopmentConfigurationAsync">
            <summary>
            Returns the BudgetDevelopment configuration.
            </summary>
            <returns>The BudgetDevelopment configuration.</returns>
            <accessComments>
            No permission is needed.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentController">
            <summary>
            Budget Development Configuration controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetDevelopmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Budget Development controller.
            </summary>
            <param name="budgetDevelopmentService">BudgetDevelopment service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentController.QueryWorkingBudgetByPost2Async(Ellucian.Colleague.Dtos.BudgetManagement.WorkingBudgetQueryCriteria)">
            <summary>
            Returns the filtered line items in the working budget with or without subtotals.
            </summary>
            <returns>The working budget line items that match the filtered criteria with or without subtotals.</returns>
            <param name="criteria">Working budget filter criteria.</param>
            <accessComments>
            No permission is needed. A user has access based on what budget officers they are assigned.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetDevelopmentController.UpdateBudgetDevelopmentWorkingBudgetAsync(System.Collections.Generic.List{Ellucian.Colleague.Dtos.BudgetManagement.BudgetLineItem})">
            <summary>
            Updates the BudgetDevelopment working budget.
            </summary>
            <param name="budgetLineItemsDto">A list of budget line items for the working budget.</param>
            <returns>A list of updated budget line items for the working budget.</returns>
            <accessComments>
            No permission is needed. A user may only update budget line items based on what budget officers that they are assigned.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetOfficerController">
            <summary>
            Budget Development Configuration controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetOfficerController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetDevelopmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Budget Development controller.
            </summary>
            <param name="budgetDevelopmentService">BudgetDevelopment service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetOfficerController.GetBudgetOfficersAsync(System.Boolean)">
            <summary>
            Returns the budget officers for the working budget.
            </summary>
            <returns>The budget officers for the working budget.</returns>
            <param name="isInWorkingBudget">Indicates whether to get budget officers for the working budget for a user.</param>
            <accessComments>
            No permission is needed. A user has access based on what budget officers they and their reporting units are assigned.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController">
            <summary>
            Provides access to BudgetPhaseLineItems
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetPhaseLineItemsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BudgetPhaseLineItemsController class.
            </summary>
            <param name="budgetPhaseLineItemsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetPhaseLineItemsService">IBudgetPhaseLineItemsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController.GetBudgetPhaseLineItemsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all budgetPhaseLineItems
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">The default named query implementation for filtering</param>
            <returns>List of BudgetPhaseLineItems <see cref="T:Ellucian.Colleague.Dtos.BudgetPhaseLineItems"/> objects representing matching budgetPhaseLineItems</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController.GetBudgetPhaseLineItemsByGuidAsync(System.String)">
            <summary>
            Read (GET) a budgetPhaseLineItems using a GUID
            </summary>
            <param name="guid">GUID to desired budgetPhaseLineItems</param>
            <returns>A budgetPhaseLineItems object <see cref="T:Ellucian.Colleague.Dtos.BudgetPhaseLineItems"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController.PostBudgetPhaseLineItemsAsync(Ellucian.Colleague.Dtos.BudgetPhaseLineItems)">
            <summary>
            Create (POST) a new budgetPhaseLineItems
            </summary>
            <param name="budgetPhaseLineItems">DTO of the new budgetPhaseLineItems</param>
            <returns>A budgetPhaseLineItems object <see cref="T:Ellucian.Colleague.Dtos.BudgetPhaseLineItems"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController.PutBudgetPhaseLineItemsAsync(System.String,Ellucian.Colleague.Dtos.BudgetPhaseLineItems)">
            <summary>
            Update (PUT) an existing budgetPhaseLineItems
            </summary>
            <param name="guid">GUID of the budgetPhaseLineItems to update</param>
            <param name="budgetPhaseLineItems">DTO of the updated budgetPhaseLineItems</param>
            <returns>A budgetPhaseLineItems object <see cref="T:Ellucian.Colleague.Dtos.BudgetPhaseLineItems"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhaseLineItemsController.DeleteBudgetPhaseLineItemsAsync(System.String)">
            <summary>
            Delete (DELETE) a budgetPhaseLineItems
            </summary>
            <param name="guid">GUID to desired budgetPhaseLineItems</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController">
            <summary>
            Provides access to BudgetPhases
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetPhasesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BudgetPhasesController class.
            </summary>
            <param name="budgetPhasesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetPhasesService">IBudgetPhasesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController.GetBudgetPhasesAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all budgetPhases
            </summary>
            <param name="criteria">Filter criteria</param>
            <returns>List of BudgetPhases <see cref="T:Ellucian.Colleague.Dtos.BudgetPhases"/> objects representing matching budgetPhases</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController.GetBudgetPhasesByGuidAsync(System.String)">
            <summary>
            Read (GET) a budgetPhases using a GUID
            </summary>
            <param name="guid">GUID to desired budgetPhases</param>
            <returns>A budgetPhases object <see cref="T:Ellucian.Colleague.Dtos.BudgetPhases"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController.PostBudgetPhasesAsync(Ellucian.Colleague.Dtos.BudgetPhases)">
            <summary>
            Create (POST) a new budgetPhases
            </summary>
            <param name="budgetPhases">DTO of the new budgetPhases</param>
            <returns>A budgetPhases object <see cref="T:Ellucian.Colleague.Dtos.BudgetPhases"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController.PutBudgetPhasesAsync(System.String,Ellucian.Colleague.Dtos.BudgetPhases)">
            <summary>
            Update (PUT) an existing budgetPhases
            </summary>
            <param name="guid">GUID of the budgetPhases to update</param>
            <param name="budgetPhases">DTO of the updated budgetPhases</param>
            <returns>A budgetPhases object <see cref="T:Ellucian.Colleague.Dtos.BudgetPhases"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetPhasesController.DeleteBudgetPhasesAsync(System.String)">
            <summary>
            Delete (DELETE) a budgetPhases
            </summary>
            <param name="guid">GUID to desired budgetPhases</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetReportingUnitController">
            <summary>
            Reporting Unit controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetReportingUnitController.#ctor(Ellucian.Colleague.Coordination.BudgetManagement.Services.IBudgetDevelopmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Reporting Unit controller.
            </summary>
            <param name="budgetDevelopmentService">BudgetDevelopment service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BudgetManagement.BudgetReportingUnitController.GetBudgetReportingUnitsAsync(System.Boolean)">
            <summary>
            Returns the reporting units for the user in the working budget.
            </summary>
            <returns>The reporting units for the user in the working budget.</returns>
            <param name="isInWorkingBudget">Indicates whether to get reporting units in the working budget for a user.</param>
            <accessComments>
            No permission is needed. A user has access based on what budget officers they and their reporting units are assigned.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CacheManagementController">
            <summary>
            Allows for fine-tuned cache management (i.e. expiration of keys)
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CacheManagementController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Cache.ICacheProvider,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Colleague.Coordination.Base.Services.ICacheManagementService,Microsoft.Extensions.Options.IOptions{Ellucian.Colleague.Api.Models.ColleaguePubSubOptions},StackExchange.Redis.ISubscriber,Ellucian.Logging.AuditLoggingAdapter)">
            <summary>
            Public constructor
            </summary>
            <param name="logger"></param>
            <param name="cacheProvider"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
            <param name="cacheManagementService"></param>
            <param name="configManagementPubSubOptions"></param>
            <param name="pubSubSubscriber"></param>
            <param name="auditLoggingAdapter"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CacheManagementController.ListKeys">
            <summary>
            Allows for returning all cache provider keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CacheManagementController.GetSanitizedCacheValue(System.String)">
            <summary>
            Returns a YAML-like result with string values changed to "==NOTNULL==" or "null" to indicate properties that have values and those that don't
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CacheManagementController.RemoveCacheValue(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Allows removal of cache elements based on the provided keys.
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController">
            <summary>
            Provides access to Accounting Strings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountFundsAvailableService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            The primary use of the Account Funds Available entity is to validate the status of funds (available, not available, and not available, but may be overridden) 
            for an accounting string as of a given date. Initializes a new instance of the AccountFundsAvailableController class.
            </summary>
            <param name="accountingFundsAvailableService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountFundsAvailableService">IAccountFundsAvailableService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.GetAccountFundsAvailableAsync(Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            
            </summary>
            <param name="criteria">Filter Criteria</param>
            <param name="accountSpecification">Filter criteria for Named Query</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.Validate(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime}@,System.Decimal@,System.String@)">
            <summary>
            Parses and validates the input parameters
            </summary>
            <param name="accountingString"></param>
            <param name="amount"></param>
            <param name="balanceOn"></param>
            <param name="submittedBy"></param>
            <param name="balanceOnDateValue"></param>
            <param name="amountValue"></param>
            <param name="submittedByValue"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.PostAccountFundsAvailableAsync(Ellucian.Colleague.Dtos.AccountFundsAvailable)">
            <summary>
            AccountFundsAvailable Post
            </summary>
            <returns>MethodNotAllowed error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.PutAccountFundsAvailableAsync(System.String,Ellucian.Colleague.Dtos.AccountFundsAvailable)">
            <summary>
            Update (PUT) AccountFundsAvailable
            </summary>
            <param name="guid"></param>
            <param name="accountFundsAvailable"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.DeleteAccountFundsAvailableAsync(System.String)">
            <summary>
            Delete (DELETE) AccountFundsAvailable
            </summary>
            <param name="guid">GUID to desired vendor</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.GetAccountFundsAvailable_TransactionsAsync">
            <summary>
            Return all accountFundsAvailable_Transactions
            </summary>
            <returns>List of AccountFundsAvailable_Transactions <see cref="T:Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions"/> objects representing matching accountFundsAvailable_Transactions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.GetAccountFundsAvailable_TransactionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountFundsAvailable_Transactions using a GUID
            </summary>
            <param name="guid">GUID to desired accountFundsAvailable_Transactions</param>
            <returns>A accountFundsAvailable_Transactions object <see cref="T:Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.PostAccountFundsAvailable_TransactionsAsync(Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions)">
            <summary>
            Create (POST) a new accountFundsAvailable_Transactions
            </summary>
            <param name="accountFundsAvailable_Transactions">DTO of the new accountFundsAvailable_Transactions</param>
            <returns>A accountFundsAvailable_Transactions object <see cref="T:Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.PutAccountFundsAvailable_TransactionsAsync(System.String,Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions)">
            <summary>
            Update (PUT) an existing accountFundsAvailable_Transactions
            </summary>
            <param name="guid">GUID of the accountFundsAvailable_Transactions to update</param>
            <param name="accountFundsAvailable_Transactions">DTO of the updated accountFundsAvailable_Transactions</param>
            <returns>A accountFundsAvailable_Transactions object <see cref="T:Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.DeleteAccountFundsAvailable_TransactionsAsync(System.String)">
            <summary>
            Delete (DELETE) a accountFundsAvailable_Transactions
            </summary>
            <param name="guid">GUID to desired accountFundsAvailable_Transactions</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.QueryAccountFundsAvailable_TransactionsAsync(Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions)">
            <summary>
            Create (POST) a new accountFundsAvailable_Transactions
            </summary>
            <param name="accountFundsAvailable_Transactions">DTO of the new accountFundsAvailable_Transactions</param>
            <returns>A accountFundsAvailable_Transactions object <see cref="T:Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountFundsAvailableController.QueryAccountFundsAvailable_Transactions2Async(Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions2)">
            <summary>
            QAPI accountFundsAvailable_Transactions
            </summary>
            <param name="accountFundsAvailable_Transactions">DTO of the new accountFundsAvailable_Transactions</param>
            <returns>A accountFundsAvailable_Transactions object <see cref="T:Ellucian.Colleague.Dtos.AccountFundsAvailable_Transactions"/> in EEDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController">
            <summary>
            Provides access to Accounting Strings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountingStringService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountingStringsController class.
            </summary>
            <param name="accountingStringService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountingStringService">IAccountingStringService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringByFilterAsync(System.String,System.String)">
            <summary>
            Read (GET) an AccountingString using an accounting string as a filter, return confirms it exists and is valid
            </summary>
            <param name="accountingString">Accounting String to search for, may contain project number</param>
            <param name="validOn">date to check for to see if accounting string is valid on the date</param>
            <returns>An AccountingString object <see cref="T:Ellucian.Colleague.Dtos.AccountingString"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringsAsync">
            <summary>
            AccountingString Get all
            </summary>
            <returns>MethodNotAllowed error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PostAccountingStringsAsync(Ellucian.Colleague.Dtos.AccountingString)">
            <summary>
            AccountingString Post
            </summary>
            <returns>MethodNotAllowed error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringsByGuidAsync(System.String)">
            <summary>
            AccountingString Get by Id
            </summary>
            <returns>MethodNotAllowed error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PutAccountingStringsAsync(System.String,Ellucian.Colleague.Dtos.AccountingString)">
            <summary>
            AccountingString Put
            </summary>
            <returns>MethodNotAllowed error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.DeleteAccountingStringsAsync(System.String)">
            <summary>
            AccountingString Delete
            </summary>
            <returns>MethodNotAllowed error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentsAsync">
            <summary>
            Return all accountingStringComponents
            </summary>
            <returns>List of AccountingStringComponents <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponent"/> objects representing matching accountingStringComponents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringComponents using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringComponents</param>
            <returns>A accountingStringComponents object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponent"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PostAccountingStringComponentsAsync(Ellucian.Colleague.Dtos.AccountingStringComponent)">
            <summary>
            Create (POST) a new accountingStringComponents
            </summary>
            <param name="accountingStringComponents">DTO of the new accountingStringComponents</param>
            <returns>A accountingStringComponents object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponent"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PutAccountingStringComponentsAsync(System.String,Ellucian.Colleague.Dtos.AccountingStringComponent)">
            <summary>
            Update (PUT) an existing accountingStringComponents
            </summary>
            <param name="guid">GUID of the accountingStringComponents to update</param>
            <param name="accountingStringComponents">DTO of the updated accountingStringComponent</param>
            <returns>A accountingStringComponents object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponent"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.DeleteAccountingStringComponentsAsync(System.String)">
            <summary>
            Delete (DELETE) a accountingStringComponents
            </summary>
            <param name="guid">GUID to desired accountingStringComponents</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringFormatsAsync">
            <summary>
            Return all accountingStringFormats
            </summary>
            <returns>List of AccountingStringFormats <see cref="T:Ellucian.Colleague.Dtos.AccountingStringFormats"/> objects representing matching accountingStringFormats</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringFormatsByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringFormats using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringFormats</param>
            <returns>A accountingStringFormats object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringFormats"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PostAccountingStringFormatsAsync(Ellucian.Colleague.Dtos.AccountingStringFormats)">
            <summary>
            Create (POST) a new accountingStringFormats
            </summary>
            <param name="accountingStringFormats">DTO of the new accountingStringFormats</param>
            <returns>A accountingStringFormats object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringFormats"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PutAccountingStringFormatsAsync(System.String,Ellucian.Colleague.Dtos.AccountingStringFormats)">
            <summary>
            Update (PUT) an existing accountingStringFormats
            </summary>
            <param name="guid">GUID of the accountingStringFormats to update</param>
            <param name="accountingStringFormats">DTO of the updated accountingStringFormats</param>
            <returns>A accountingStringFormats object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringFormats"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.DeleteAccountingStringFormatsAsync(System.String)">
            <summary>
            Delete (DELETE) a accountingStringFormats
            </summary>
            <param name="guid">GUID to desired accountingStringFormats</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentValuesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all accountingStringComponentValues
            </summary>
            <returns>List of AccountingStringComponentValues <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> objects representing matching accountingStringComponentValues</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentValuesByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringComponentValues using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PostAccountingStringComponentValuesAsync(Ellucian.Colleague.Dtos.AccountingStringComponentValues)">
            <summary>
            Create (POST) a new accountingStringComponentValues
            </summary>
            <param name="accountingStringComponentValues">DTO of the new accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PutAccountingStringComponentValuesAsync(System.String,Ellucian.Colleague.Dtos.AccountingStringComponentValues)">
            <summary>
            Update (PUT) an existing accountingStringComponentValues
            </summary>
            <param name="guid">GUID of the accountingStringComponentValues to update</param>
            <param name="accountingStringComponentValues">DTO of the updated accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.DeleteAccountingStringComponentValuesAsync(System.String)">
            <summary>
            Delete (DELETE) a accountingStringComponentValues
            </summary>
            <param name="guid">GUID to desired accountingStringComponentValues</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentValues2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all accountingStringComponentValues
            </summary>
            <returns>List of AccountingStringComponentValues <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> objects representing matching accountingStringComponentValues</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentValues3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all accountingStringComponentValues
            </summary>
            <returns>List of AccountingStringComponentValues <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> objects representing matching accountingStringComponentValues</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentValues3ByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringComponentValues using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.GetAccountingStringComponentValues2ByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringComponentValues using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PostAccountingStringComponentValues2Async(Ellucian.Colleague.Dtos.AccountingStringComponentValues2)">
            <summary>
            Create (POST) a new accountingStringComponentValues
            </summary>
            <param name="accountingStringComponentValues">DTO of the new accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringsController.PutAccountingStringComponentValues2Async(System.String,Ellucian.Colleague.Dtos.AccountingStringComponentValues2)">
            <summary>
            Update (PUT) an existing accountingStringComponentValues
            </summary>
            <param name="guid">GUID of the accountingStringComponentValues to update</param>
            <param name="accountingStringComponentValues">DTO of the updated accountingStringComponentValues</param>
            <returns>A accountingStringComponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringComponentValues"/> in EEDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController">
            <summary>
            Provides access to AccountingStringSubcomponents
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountingStringSubcomponentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountingStringSubcomponentsController class.
            </summary>
            <param name="accountingStringSubcomponentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountingStringSubcomponentsService">IAccountingStringSubcomponentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController.GetAccountingStringSubcomponentsAsync">
            <summary>
            Return all accountingStringSubcomponents
            </summary>
            <returns>List of AccountingStringSubcomponents <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponents"/> objects representing matching accountingStringSubcomponents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController.GetAccountingStringSubcomponentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringSubcomponents using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringSubcomponents</param>
            <returns>A accountingStringSubcomponents object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController.PostAccountingStringSubcomponentsAsync(Ellucian.Colleague.Dtos.AccountingStringSubcomponents)">
            <summary>
            Create (POST) a new accountingStringSubcomponents
            </summary>
            <param name="accountingStringSubcomponents">DTO of the new accountingStringSubcomponents</param>
            <returns>A accountingStringSubcomponents object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController.PutAccountingStringSubcomponentsAsync(System.String,Ellucian.Colleague.Dtos.AccountingStringSubcomponents)">
            <summary>
            Update (PUT) an existing accountingStringSubcomponents
            </summary>
            <param name="guid">GUID of the accountingStringSubcomponents to update</param>
            <param name="accountingStringSubcomponents">DTO of the updated accountingStringSubcomponents</param>
            <returns>A accountingStringSubcomponents object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentsController.DeleteAccountingStringSubcomponentsAsync(System.String)">
            <summary>
            Delete (DELETE) a accountingStringSubcomponents
            </summary>
            <param name="guid">GUID to desired accountingStringSubcomponents</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController">
            <summary>
            Provides access to AccountingStringSubcomponentValues
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountingStringSubcomponentValuesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountingStringSubcomponentValuesController class.
            </summary>
            <param name="accountingStringSubcomponentValuesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountingStringSubcomponentValuesService">IAccountingStringSubcomponentValuesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController.GetAccountingStringSubcomponentValuesAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all accountingStringSubcomponentValues
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of AccountingStringSubcomponentValues <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponentValues"/> objects representing matching accountingStringSubcomponentValues</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController.GetAccountingStringSubcomponentValuesByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingStringSubcomponentValues using a GUID
            </summary>
            <param name="guid">GUID to desired accountingStringSubcomponentValues</param>
            <returns>A accountingStringSubcomponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController.PostAccountingStringSubcomponentValuesAsync(Ellucian.Colleague.Dtos.AccountingStringSubcomponentValues)">
            <summary>
            Create (POST) a new accountingStringSubcomponentValues
            </summary>
            <param name="accountingStringSubcomponentValues">DTO of the new accountingStringSubcomponentValues</param>
            <returns>A accountingStringSubcomponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController.PutAccountingStringSubcomponentValuesAsync(System.String,Ellucian.Colleague.Dtos.AccountingStringSubcomponentValues)">
            <summary>
            Update (PUT) an existing accountingStringSubcomponentValues
            </summary>
            <param name="guid">GUID of the accountingStringSubcomponentValues to update</param>
            <param name="accountingStringSubcomponentValues">DTO of the updated accountingStringSubcomponentValues</param>
            <returns>A accountingStringSubcomponentValues object <see cref="T:Ellucian.Colleague.Dtos.AccountingStringSubcomponentValues"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountingStringSubcomponentValuesController.DeleteAccountingStringSubcomponentValuesAsync(System.String)">
            <summary>
            Delete (DELETE) a accountingStringSubcomponentValues
            </summary>
            <param name="guid">GUID to desired accountingStringSubcomponentValues</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController">
            <summary>
            Provides access to AccountsPayableInvoices
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountsPayableInvoicesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountsPayableInvoicesController class.
            </summary>
            <param name="accountsPayableInvoicesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountsPayableInvoicesService">IAccountsPayableInvoicesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController.GetAccountsPayableInvoices2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all accountsPayableInvoices version 11
            </summary>
            <returns>List of AccountsPayableInvoices <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableInvoices2"/> objects representing matching accountsPayableInvoices</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController.GetAccountsPayableInvoices2ByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountsPayableInvoices version 11 using a GUID
            </summary>
            <param name="guid">GUID to desired accountsPayableInvoices</param>
            <returns>A accountsPayableInvoices object <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableInvoices2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController.PostAccountsPayableInvoices2Async(Ellucian.Colleague.Dtos.AccountsPayableInvoices2)">
            <summary>
            Create (POST) a new accountsPayableInvoices
            </summary>
            <param name="accountsPayableInvoices">DTO of the new accountsPayableInvoices</param>
            <returns>A accountsPayableInvoices object <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableInvoices2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController.PutAccountsPayableInvoices2Async(System.String,Ellucian.Colleague.Dtos.AccountsPayableInvoices2)">
            <summary>
            Update (PUT) an existing accountsPayableInvoices
            </summary>
            <param name="guid">GUID of the accountsPayableInvoices to update</param>
            <param name="accountsPayableInvoices">DTO of the updated accountsPayableInvoices</param>
            <returns>A accountsPayableInvoices object <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableInvoices2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableInvoicesController.DeleteAccountsPayableInvoicesAsync(System.String)">
            <summary>
            Delete (DELETE) a accountsPayableInvoices
            </summary>
            <param name="guid">GUID to desired accountsPayableInvoices</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController">
            <summary>
            Provides access to AccountsPayableSources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountsPayableSourcesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountsPayableSourcesController class.
            </summary>
            <param name="accountsPayableSourcesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountsPayableSourcesService">IAccountsPayableSourcesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController.GetAccountsPayableSourcesAsync">
            <summary>
            Return all accountsPayableSources
            </summary>
            <returns>List of AccountsPayableSources <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableSources"/> objects representing matching accountsPayableSources</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController.GetAccountsPayableSourcesByIdAsync(System.String)">
            <summary>
            Read (GET) a accountsPayableSources using a GUID
            </summary>
            <param name="guid">GUID to desired accountsPayableSources</param>
            <returns>A accountsPayableSources object <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController.PostAccountsPayableSourcesAsync(Ellucian.Colleague.Dtos.AccountsPayableSources)">
            <summary>
            Create (POST) a new accountsPayableSources
            </summary>
            <param name="accountsPayableSources">DTO of the new accountsPayableSources</param>
            <returns>A accountsPayableSources object <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController.PutAccountsPayableSourcesAsync(System.String,Ellucian.Colleague.Dtos.AccountsPayableSources)">
            <summary>
            Update (PUT) an existing accountsPayableSources
            </summary>
            <param name="guid">GUID of the accountsPayableSources to update</param>
            <param name="accountsPayableSources">DTO of the updated accountsPayableSources</param>
            <returns>A accountsPayableSources object <see cref="T:Ellucian.Colleague.Dtos.AccountsPayableSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableSourcesController.DeleteAccountsPayableSourcesAsync(System.String)">
            <summary>
            Delete (DELETE) a accountsPayableSources
            </summary>
            <param name="guid">GUID to desired accountsPayableSources</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableTaxesController">
            <summary>
            Provides access to Accounts Payable Tax code information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableTaxesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountsPayableTaxService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor to initialize AccountsPayableTaxesController object.
            </summary>
            <param name="accountsPayableTaxService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableTaxesController.GetAccountsPayableTaxesAsync">
            <summary>
            Get all of the Accounts Payable Tax codes.
            </summary>
            <returns></returns>
            <note>AccountsPayableTax is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableTypesController">
            <summary>
            Provides access to AccountsPayable Type code information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableTypesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IAccountsPayableTypeService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor to initialize AccountsPayableTypesController object.
            </summary>
            <param name="accountsPayableTypeService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.AccountsPayableTypesController.GetAccountsPayableTypesAsync">
            <summary>
            Get all of the AccountsPayable Type codes.
            </summary>
            <returns></returns>
            <note>AccountsPayableType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ApproversController">
            <summary>
            Provides access to approver objects.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ApproversController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IApproverService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the approver service controller.
            </summary>
            <param name="approverService">Approves service object.</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ApproversController.GetNextApproverValidationAsync(System.String)">
            <summary>
            Validate an approver ID. 
            A next approver ID and an approver ID are the same. They are just
            populated under different circumstances.
            </summary>
            <param name="nextApproverId">Next approver ID.</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.NextApproverValidationResponse">DTO.</see>/></returns>
            <accessComments>
            Requires permission CREATE.UPDATE.BUDGET.ADJUSTMENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ApproversController.GetNextApproverByKeywordAsync(System.String)">
            <summary>
            Get the list of next apporvers based on keyword search.
            </summary>
            <param name="queryKeyword">parameter for passing search keyword</param>
            <returns>The Next approver search results</returns>      
            <accessComments>
            Requires at least one of the permissions VIEW.ANY.PERSON or CREATE.UPDATE.REQUISITION or CREATE.UPDATE.PURCHASE.ORDER or CREATE.UPDATE.VOUCHER or CREATE.UPDATE.BUDGET.ADJUSTMENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ApproversController.QueryNextApproverByKeywordAsync(Ellucian.Colleague.Dtos.ColleagueFinance.KeywordSearchCriteria)">
            <summary>
            Get the list of Next Approvers based on keyword search.
            </summary>
            <param name="criteria">KeywordSearchCriteria parameter for passing search keyword</param>
            <returns> The Next approver search results</returns>      
            <accessComments>
            Requires at least one of the permissions VIEW.ANY.PERSON or CREATE.UPDATE.REQUISITION or CREATE.UPDATE.PURCHASE.ORDER or CREATE.UPDATE.VOUCHER or CREATE.UPDATE.BUDGET.ADJUSTMENT
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController">
            <summary>
            This is the controller for blanket purchase orders.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IBlanketPurchaseOrderService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the BlanketPurchaseOrdersController object.
            </summary>
            <param name="blanketPurchaseOrderService">Blanket purchase order service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.GetBlanketPurchaseOrderAsync(System.String)">
            <summary>
            Retrieves a specified blanket purchase order.
            </summary>
            <param name="blanketPurchaseOrderId">ID of the requested blanket purchase order.</param>
            <returns>Blanket purchase order DTO.</returns>
            <accessComments>
            Requires permission VIEW.BLANKET.PURCHASE.ORDER, and requires access to at least one of the
            general ledger numbers on the blanket purchase order.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.GetBlanketPurchaseOrdersAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all blanket purchase orders
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Filtering Criteria object</param>
            <returns>List of BlanketPurchaseOrders <see cref="T:Ellucian.Colleague.Dtos.BlanketPurchaseOrders"/> objects representing matching BlanketPurchaseOrders</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.GetBlanketPurchaseOrdersByGuidAsync(System.String)">
            <summary>
            Read (GET) a blanket purchase order using a GUID
            </summary>
            <param name="id">GUID to desired purchaseOrders</param>
            <returns>A BlanketPurchaseOrders object <see cref="T:Ellucian.Colleague.Dtos.BlanketPurchaseOrders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.PostBlanketPurchaseOrdersAsync(Ellucian.Colleague.Dtos.BlanketPurchaseOrders)">
            <summary>
            Create (POST) a new blanket purchase order
            </summary>
            <param name="blanketPurchaseOrders">DTO of the new BlanketPurchaseOrders</param>
            <returns>A BlanketPurchaseOrders object <see cref="T:Ellucian.Colleague.Dtos.BlanketPurchaseOrders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.PutBlanketPurchaseOrdersAsync(System.String,Ellucian.Colleague.Dtos.BlanketPurchaseOrders)">
            <summary>
            Update (PUT) an existing blanketPurchaseOrders
            </summary>
            <param name="id">GUID of the blanketPurchaseOrders to update</param>
            <param name="blanketPurchaseOrders">DTO of the updated blanketPurchaseOrders</param>
            <returns>A blanketPurchaseOrders object <see cref="T:Ellucian.Colleague.Dtos.BlanketPurchaseOrders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.ValidateBPO(Ellucian.Colleague.Dtos.BlanketPurchaseOrders)">
            <summary>
            Helper method to validate Blanket Purchase Order PUT/POST.
            </summary>
            <param name="bpo">Blanket Purchase Order DTO object of type <see cref="T:Ellucian.Colleague.Dtos.BlanketPurchaseOrders"/></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BlanketPurchaseOrdersController.DeleteBlanketPurchaseOrdersAsync(System.String)">
            <summary>
            Delete (DELETE) a purchaseOrders
            </summary>
            <param name="id">GUID to desired purchaseOrders</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController">
            <summary>
            Controls actions for budget adjustments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IBudgetAdjustmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the controller.
            </summary>
            <param name="budgetAdjustmentService">Budget adjustment service</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.PostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.BudgetAdjustment)">
            <summary>
            Creates a new budget adjustment.
            </summary>
            <param name="budgetAdjustmentDto">Budget adjustment DTO</param>
            <accessComments>
            Requires permission CREATE.UPDATE.BUDGET.ADJUSTMENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.PutAsync(System.String,Ellucian.Colleague.Dtos.ColleagueFinance.BudgetAdjustment)">
            <summary>
            Updates an existing budget adjustment.
            </summary>
            <param name="id">The ID of the budget adjustment that will be updated.</param>
            <param name="budgetAdjustmentDto">The budget adjustment content that will be updated.</param>
            <accessComments>
            Requires permission CREATE.UPDATE.BUDGET.ADJUSTMENT
            </accessComments>
            <returns>The updated budget adjustment as it was stored.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.GetBudgetAdjustmentAsync(System.String)">
            <summary>
            Get a budget adjustment.
            </summary>
            <param name="id">The ID of the budget adjustment.</param>
            <returns>A budget adjustment</returns>
            <accessComments>
            Requires permission VIEW.BUDGET.ADJUSTMENT.
            The current user must be the user that created the budget adjustment.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.GetBudgetAdjustmentPendingApprovalDetailAsync(System.String)">
            <summary>
            Get a budget adjustment that is awaiting the user's approval.
            </summary>
            <param name="id">The ID of the budget adjustment.</param>
            <returns>A budget adjustment</returns>
            <accessComments>
            Requires permission VIEW.BUD.ADJ.PENDING.APPR.
            The current user must be one of the users listed as a "next approver" on the budget adjustment.
            Adjustment Line data will only be returned for GL accounts that the user has access to based on their GL user access.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.PostBudgetAdjustmentApprovalAsync(System.String,Ellucian.Colleague.Dtos.ColleagueFinance.BudgetAdjustmentApproval)">
            <summary>
            A user approves an existing budget adjustment.
            </summary>
            <param name="id">The ID of the budget adjustment that will get the approval ID.</param>
            <param name="budgetAdjustmentApprovalDto">The budget adjustment approval data.</param>
            <returns>The budget adjustment approval dto.</returns>
            <accessComments>
            Requires permission VIEW.BUD.ADJ.PENDING.APPR.
            The current user must be one of the users listed as a "next approver" on the budget adjustment,
            and they must have not approved this budget adjustment already.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.GetBudgetAdjustmentsSummaryAsync">
            <summary>
            Get all the budget adjustments summary for a user.
            </summary>
            <returns>List of budget adjustment summary DTOs for the current user.</returns>
            <accessComments>
            Requires permission VIEW.BUDGET.ADJUSTMENT.
            A user can only get a list of draft and non-draft budget adjustments that they created.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.BudgetAdjustmentsController.GetBudgetAdjustmentsPendingApprovalSummaryAsync">
            <summary>
            Get all the budget adjustments pending approval summaries for a user.
            </summary>
            <returns>List of budget adjustment pending approval summary DTOs for the current user.</returns>
            <accessComments>
            Requires permission VIEW.BUD.ADJ.PENDING.APPR.
            A user can only get a list of budget adjustments pending approval 
            where they are a next approver.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController">
            <summary>
            Provides access to FormT4aPdfData objects.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.ColleagueFinance.Services.IColleagueFinanceTaxFormPdfService,Ellucian.Colleague.Coordination.Base.Services.ITaxFormConsentService,Ellucian.Colleague.Coordination.Base.Services.IConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the controller.
            </summary>
            <param name="adapterRegistry">Adapter Registry</param>
            <param name="logger">Logger object</param>
            <param name="taxFormPdfService">FormT4aPdfData service object</param>
            <param name="taxFormConsentService">Form T4A consent service object</param>
            <param name="configurationService">Configuation service object</param>
            <param name="actionContextAccessor"></param>
            <param name="webHostEnvironment"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController.GetFormT4aPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the T4A tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the T4A.</param>
            <param name="recordId">The record ID where the T4A pdf data is stored</param>  
            <accessComments>
            Requires permission VIEW.T4A for the recipient.
            Requires permission VIEW.T4A for someone who currently has permission to proxy for the recipient requested.
            Requires permission VIEW.RECIPIENT.T4A for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>        
            <returns>An ActionResult containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController.Get1099MiscTaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1099-MISC tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1099-MISC.</param>
            <param name="recordId">The record ID where the 1099-MISC pdf data is stored</param>         
            <accessComments>
            Requires permission VIEW.1099MISC.
            The tax form record requested must belong to the current user.       
            </accessComments>
            <returns>An IActionResult containing a byte array representing a PDF.</returns> 
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController.Get1099NecTaxFormPdfAsync(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1099-NEC tax form.
            Updated in 2023 to use FastReport (.frx) instead of Microsoft RDLC Report Designer (.rdlc) and 
            keep only tax years up to 2016.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1099-NEC.</param>
            <param name="recordId">The record ID where the 1099-NEC pdf data is stored</param>         
            <accessComments>
            Requires permission VIEW.1099NEC.
            The tax form record requested must belong to the current user.       
            </accessComments>
            <returns>An PDF document as byte array.</returns>  
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController.GetFormT4aPdfAsync(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the T4A tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the T4A.</param>
            <param name="recordId">The record ID where the T4A pdf data is stored</param>  
            <accessComments>
            Requires permission VIEW.T4A for the recipient.
            Requires permission VIEW.T4A for someone who currently has permission to proxy for the recipient requested.
            Requires permission VIEW.RECIPIENT.T4A for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>        
            <returns>An IActionResult containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormPdfsController.Get1099MiscTaxFormPdfAsync(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1099-MISC tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1099-MISC.</param>
            <param name="recordId">The record ID where the 1099-MISC pdf data is stored</param>         
            <accessComments>
            Requires permission VIEW.1099MISC.
            The tax form record requested must belong to the current user.       
            </accessComments>
            <returns>An IActionResult containing a byte array representing a PDF.</returns> 
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController">
            <summary>
            This is the controller for the type of Tax Form Statements.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.ColleagueFinance.Services.IColleagueFinanceTaxFormStatementService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the Tax Form Statement controller.
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="taxFormStatementService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController.GetT4a2Async(System.String)">
            <summary>
            Returns T4A tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of T4A tax form statements</returns>
            <accessComments>
            In order to access T4A statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewRecipientT4A
            2. Have the ViewT4A permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController.Get1099Mi2Async(System.String)">
            <summary>
            Returns 1099MI tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1099MI tax form statements</returns>
            <accessComments>
            In order to access 1099MI statement data, the user shoud have the View.1099MISC permission and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController.Get1099NecAsync(System.String)">
            <summary>
            Returns 1099NEC tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1099NEC tax form statements</returns>
            <accessComments>
            In order to access 1099NEC statement data, the user shoud have the View.1099NEC permission and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController.GetT4aAsync(System.String)">
            <summary>
            Returns T4A tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of T4A tax form statements</returns>
            <accessComments>
            In order to access T4A statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewRecipientT4A
            2. Have the ViewT4A permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceTaxFormStatementsController.Get1099MIAsync(System.String)">
            <summary>
            Returns 1099MI tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1099MI tax form statements</returns>
            <accessComments>
            In order to access 1099MI statement data, the user shoud have the View.1099MISC permission and be requesting their own data
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceWebConfigurationsController">
            <summary>
            The controller for ColleagueFinanceWebConfiguration
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceWebConfigurationsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IColleagueFinanceWebConfigurationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the ColleagueFinanceWebConfigurationsController object
            </summary>
            <param name="colleagueFinanceWebConfigurationsService">ColleagueFinanceWebConfigurationsService object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ColleagueFinanceWebConfigurationsController.GetColleagueFinanceWebConfigurationsAsync">
            <summary>
            Retrieves Colleague finance web configurations
            </summary>
            <accessComments>
            Any authenticated user can get the Colleague finance web configurations
            </accessComments>
            <returns>Colleague finance web configurations object</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController">
            <summary>
            Provides access to CommodityCodes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.ColleagueFinance.Services.ICommodityCodesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CommodityCodesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="commodityCodesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.ICommodityCodesService">ICommodityCodesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.GetCommodityCodesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all commodity codes.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All commodity codes objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.GetCommodityCodeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a commodity code by ID.
            </summary>
            <param name="id">Id of commodity code to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CommodityCode">commodity code.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.PostCommodityCodeAsync(Ellucian.Colleague.Dtos.CommodityCode)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a CommodityCode.
            </summary>
            <param name="commodityCode"><see cref="T:Ellucian.Colleague.Dtos.CommodityCode">CommodityCode</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CommodityCode">CommodityCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.PutCommodityCodeAsync(System.String,Ellucian.Colleague.Dtos.CommodityCode)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a commodity code.
            </summary>
            <param name="id">Id of the CommodityCode to update</param>
            <param name="commodityCode"><see cref="T:Ellucian.Colleague.Dtos.CommodityCode">CommodityCode</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CommodityCode">CommodityCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.DeleteCommodityCodeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing commodityCode
            </summary>
            <param name="id">Id of the commodityCode to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.GetAllCommodityCodesAsync">
            <summary>
            Returns all CommodityCodes
            </summary>
            <returns>List of CommodityCodes DTO objects </returns>
            <accessComments>
            No permission is needed.
            </accessComments>
            <note>ComodityCodes is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityCodesController.GetCommodityCodeAsync(System.String)">
            <summary>
            Returns a commodity code
            </summary>
            <param name="commodityCode">commodity code</param>
            <returns>Procurement commodity code DTO</returns>
            <accessComments>
            No permission is needed.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController">
            <summary>
            Provides access to CommodityUnitTypes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.ColleagueFinance.Services.ICommodityUnitTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CommodityUnitTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="commodityUnitTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.ICommodityUnitTypesService">ICommodityUnitTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.GetCommodityUnitTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all commodity unit types.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All commodity unit types objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.GetCommodityUnitTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a commodity unit type by ID.
            </summary>
            <param name="id">Id of commodity unit type to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CommodityUnitType">commodity unit type.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.PostCommodityUnitTypeAsync(Ellucian.Colleague.Dtos.CommodityUnitType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a CommodityUnitType.
            </summary>
            <param name="commodityUnitType"><see cref="T:Ellucian.Colleague.Dtos.CommodityUnitType">CommodityUnitType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CommodityUnitType">CommodityUnitType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.PutCommodityUnitTypeAsync(System.String,Ellucian.Colleague.Dtos.CommodityUnitType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a commodity unit type.
            </summary>
            <param name="id">Id of the CommodityUnitType to update</param>
            <param name="commodityUnitType"><see cref="T:Ellucian.Colleague.Dtos.CommodityUnitType">CommodityUnitType</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CommodityUnitType">CommodityUnitType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.DeleteCommodityUnitTypeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing commodityUnitType
            </summary>
            <param name="id">Id of the commodityUnitType to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CommodityUnitTypesController.GetAllCommodityUnitTypesAsync">
            <summary>
            Retrieves all commodity unit types.
            </summary>
            <returns>All commodity unit types objects.</returns>
            <note>CommodityUnitType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CostCentersController">
            <summary>
            This is the controller for GL cost centers.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CostCentersController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.ICostCenterService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the GL cost center object.
            </summary>
            <param name="costCenterService">GL cost center service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CostCentersController.GetAsync(System.String)">
            <summary>
            Retrieves all the GL cost centers assigned to the user for the specific fiscal year.
            If no fiscal year is passed in as an argument, it obtains data 
            for the fiscal year for today's date.
            Only expense GL accounts are considered.
            </summary>
            <param name="fiscalYear">General Ledger fiscal year. Optional</param>
            <returns>List of GL cost center DTOs for the specified fiscal year.</returns>
            <accessComments>
            The user can only access those cost centers for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CostCentersController.GetCostCenterAsync(System.String,System.String)">
            <summary>
            Retrieves the GL cost center the user selected.
            If no fiscal year is passed in as an argument, it obtains data 
            for the fiscal year for today's date.         
            </summary>
            <param name="costCenterId">Selected cost center ID.</param>
            <param name="fiscalYear">The GL fiscal year.</param>
            <returns>Cost Center DTO.</returns>
            <accessComments>
            The user can only access those cost centers for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.CostCentersController.QueryCostCentersByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.CostCenterQueryCriteria)">
            <summary>
            Retrieves the filtered cost centers
            </summary>
            <param name="criteria">Cost center filter criteria.</param>
            <returns>Cost centers that match the filter criteria.</returns>
            <accessComments>
            The user can only access those cost centers for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DocumentApprovalController">
            <summary>
            Controls actions for budget adjustments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DocumentApprovalController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IDocumentApprovalService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the controller.
            </summary>
            <param name="documentApprovalService">Document approval service</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DocumentApprovalController.GetAsync">
            <summary>
            Get the document approval for the user.
            </summary>
            <returns>A document approval DTO.</returns>
            <accessComments>
            Requires permission VIEW.DOCUMENT.APPROVAL
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DocumentApprovalController.PostDocumentApprovalAsync(Ellucian.Colleague.Dtos.ColleagueFinance.DocumentApprovalRequest)">
            <summary>
            Update document approvals.
            </summary>
            <param name="documentApprovalUpdateRequest">The document approval update request DTO.</param>        
            <returns>The document approval update response DTO.</returns>
            <accessComments>
            Requires permission VIEW.DOCUMENT.APPROVAL.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DocumentApprovalController.QueryApprovedDocumentsAsync(Ellucian.Colleague.Dtos.ColleagueFinance.ApprovedDocumentFilterCriteria)">
            <summary>
            Retrieves documents approved by the user.
            </summary>
            <param name="filterCriteria">Approved documents filter criteria.</param>
            <returns>List of document approved DTOs.</returns>
            <accessComments>
            Requires permission VIEW.DOCUMENT.APPROVAL.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DraftBudgetAdjustmentsController">
            <summary>
            Controls actions for budget adjustments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DraftBudgetAdjustmentsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IDraftBudgetAdjustmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the controller.
            </summary>
            <param name="draftBudgetAdjustmentService">Draft Budget adjustment service</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DraftBudgetAdjustmentsController.PostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.DraftBudgetAdjustment)">
            <summary>
            Creates a new draft budget adjustment.
            </summary>
            <param name="draftBudgetAdjustmentDto">Draft Budget adjustment DTO</param>
            <accessComments>
            Requires permission CREATE.UPDATE.BUDGET.ADJUSTMENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DraftBudgetAdjustmentsController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.ColleagueFinance.DraftBudgetAdjustment)">
            <summary>
            Updates the requested draft budget adjustment.
            </summary>
            <param name="id">A draft budget adjustment id.</param>
            <param name="draftBudgetAdjustmentDto">Draft Budget adjustment DTO</param>
            <accessComments>
            Requires permission CREATE.UPDATE.BUDGET.ADJUSTMENT
            A user can only update a draft budget adjustments that they created.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DraftBudgetAdjustmentsController.GetAsync(System.String)">
            <summary>
            Get the requested draft budget adjustment.
            </summary>
            <param name="id">A draft budget adjustment id.</param>
            <returns>A draft budget adjustment DTO.</returns>
            <accessComments>
            Requires permission VIEW.BUDGET.ADJUSTMENT
            A user can only get a draft budget adjustment that they have created.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.DraftBudgetAdjustmentsController.DeleteAsync(System.String)">
            <summary>
            Delete the requested draft budget adjustment.
            </summary>
            <param name="id">The draft budget adjustment ID to delete.</param>
            <returns>nothing</returns>
            <accessComments>
            Requires permission DELETE.BUDGET.ADJUSTMENT
            A user can only delete a draft budget adjustment that they have created.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinanceQueryController">
            <summary>
            This is the controller for GL finance query.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinanceQueryController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFinanceQueryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the GL Finance query service object.
            </summary>
            <param name="financeQueryService">GL Finance query service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinanceQueryController.QueryFinanceQuerySelectionByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.FinanceQueryCriteria)">
            <summary>
            Retrieves the filtered GL Accounts list
            </summary>
            <param name="criteria">Finance query filter criteria.</param>
            <returns>GL accounts that match the filter criteria.</returns>
            <accessComments>
            The user can only access those GL accounts for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinanceQueryController.QueryFinanceQueryDetailSelectionByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.FinanceQueryCriteria)">
            <summary>
            Retrieves the filtered GL Account detail data.
            </summary>
            <param name="criteria">Finance query filter criteria.</param>
            <returns>GL account data that match the filter criteria.</returns>
            <accessComments>
            The user can only access those GL accounts for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController">
            <summary>
            Provides access to FinancialDocumentTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFinancialDocumentTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialDocumentTypesController class.
            </summary>
            <param name="financialDocumentTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFinancialDocumentTypesService">IFinancialDocumentTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController.GetFinancialDocumentTypesAsync">
            <summary>
            Return all financialDocumentTypes
            </summary>
            <returns>List of FinancialDocumentTypes <see cref="T:Ellucian.Colleague.Dtos.FinancialDocumentTypes"/> objects representing matching financialDocumentTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController.GetFinancialDocumentTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a financialDocumentTypes using a GUID
            </summary>
            <param name="guid">GUID to desired financialDocumentTypes</param>
            <returns>A financialDocumentTypes object <see cref="T:Ellucian.Colleague.Dtos.FinancialDocumentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController.PostFinancialDocumentTypesAsync(Ellucian.Colleague.Dtos.FinancialDocumentTypes)">
            <summary>
            Create (POST) a new financialDocumentTypes
            </summary>
            <param name="financialDocumentTypes">DTO of the new financialDocumentTypes</param>
            <returns>A financialDocumentTypes object <see cref="T:Ellucian.Colleague.Dtos.FinancialDocumentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController.PutFinancialDocumentTypesAsync(System.String,Ellucian.Colleague.Dtos.FinancialDocumentTypes)">
            <summary>
            Update (PUT) an existing financialDocumentTypes
            </summary>
            <param name="guid">GUID of the financialDocumentTypes to update</param>
            <param name="financialDocumentTypes">DTO of the updated financialDocumentTypes</param>
            <returns>A financialDocumentTypes object <see cref="T:Ellucian.Colleague.Dtos.FinancialDocumentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialDocumentTypesController.DeleteFinancialDocumentTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a financialDocumentTypes
            </summary>
            <param name="guid">GUID to desired financialDocumentTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementDefinitionsController">
            <summary>
            The controller for FinancialStatementsConfiguration
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementDefinitionsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFinancialStatementDefinitionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the FinancialStatementsConfigurationController object
            </summary>
            <param name="financialStatementDefinitionsService">FinancialStatementDefinitionsService object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementDefinitionsController.GetFinancialStatementDefinitionsAsync(System.String)">
            <summary>
            Retrieves the financial statement definition for the given preference type.
            </summary>
            <param name="preferenceType">The financial statement definition key.</param>
            <returns>The financial statement definition for the specified key.</returns>
            /// <accessComments>
            Requires permission USE.FINANCIAL.STATEMENTS.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementDefinitionsController.UpdateFinancialStatementDefinitionsAsync(Ellucian.Colleague.Dtos.ColleagueFinance.FinancialStatementDefinition)">
            <summary>
            Updates the financial statement definition with the given parameters.
            </summary>
            <param name="finStmtDefinition">The financial statement definition to be updated</param>
            <returns>The updated financial statement definition.</returns>
            /// <accessComments>
            Requires permission USE.FINANCIAL.STATEMENTS.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementDefinitionsController.DeleteFinancialStatementDefinitionsAsync(System.String)">
            <summary>
            Delete a financial statement definition.
            </summary>
            <param name="preferenceType">The financial statement definition type.</param>
            <returns>nothing</returns>
            /// <accessComments>
            Requires permission USE.FINANCIAL.STATEMENTS.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementsController">
            <summary>
            This is the controller class for financial statements methods.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFinancialStatementsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the GL Finance query service object.
            </summary>
            <param name="financialStatementsService">GL Finance query service object</param>
            <param name="_logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementsController.QueryFinancialStatementsByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.FinancialStatementsReportConfiguration)">
            <summary>
            Retrieves the filtered GL Accounts list
            </summary>
            <param name="reportConfig">Financial statement report configuration object.</param>
            <returns>GL accounts that match the filter criteria.</returns>
            <accessComments>
            Requires permission USE.FINANCIAL.STATEMENTS.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementsController.GetAllGlComponentDetailsAsync">
            <summary>
            Retrieves All the Gl component details
            </summary>
            <returns>gl components with description.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementsController.GetFinancialStatementsGeneralLedgerAccountsAsync">
            <summary>
            Retrieves the list of GL account DTOs.
            </summary>
            <returns>A collection of expense GL account DTOs.</returns>
            <accessComments>
            Requires permission USE.FINANCIAL.STATEMENTS.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FinancialStatementsController.QueryFinancialStatementsActivityByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.GlActivityDetailQueryCriteria)">
            <summary>
            Retrieves all the budget, actuals and encumbrances activity detail for the GL account and the fiscal year.
            This API does not use GL account access security. It is permission based.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.GlActivityDetailQueryCriteria">Query criteria</see>includes the GL account and the fiscal year for the query.</param>
            <returns>List of GL activity detail DTOs for the specified GL account for the specified fiscal year.</returns>
            <accessComments>
            Requires permission USE.FINANCIAL.STATEMENTS.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController">
            <summary>
            Provides access to FiscalPeriods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFiscalPeriodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FiscalPeriodsController class.
            </summary>
            <param name="fiscalPeriodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFiscalPeriodsService">IFiscalPeriodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController.GetFiscalPeriodsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all fiscalPeriods
            </summary>
            <returns>List of FiscalPeriods <see cref="T:Ellucian.Colleague.Dtos.FiscalPeriods"/> objects representing matching fiscalPeriods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController.GetFiscalPeriodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a fiscalPeriods using a GUID
            </summary>
            <param name="guid">GUID to desired fiscalPeriods</param>
            <returns>A fiscalPeriods object <see cref="T:Ellucian.Colleague.Dtos.FiscalPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController.PostFiscalPeriodsAsync(Ellucian.Colleague.Dtos.FiscalPeriods)">
            <summary>
            Create (POST) a new fiscalPeriods
            </summary>
            <param name="fiscalPeriods">DTO of the new fiscalPeriods</param>
            <returns>A fiscalPeriods object <see cref="T:Ellucian.Colleague.Dtos.FiscalPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController.PutFiscalPeriodsAsync(System.String,Ellucian.Colleague.Dtos.FiscalPeriods)">
            <summary>
            Update (PUT) an existing fiscalPeriods
            </summary>
            <param name="guid">GUID of the fiscalPeriods to update</param>
            <param name="fiscalPeriods">DTO of the updated fiscalPeriods</param>
            <returns>A fiscalPeriods object <see cref="T:Ellucian.Colleague.Dtos.FiscalPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalPeriodsController.DeleteFiscalPeriodsAsync(System.String)">
            <summary>
            Delete (DELETE) a fiscalPeriods
            </summary>
            <param name="guid">GUID to desired fiscalPeriods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController">
            <summary>
            Fiscal Years controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.ICostCenterService,Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFiscalYearsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the Fiscal Years controller.
            </summary>
            <param name="costCenterService">GL cost center service object.</param>
            <param name="fiscalYearsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFiscalYearsService">IFiscalYearsService</see></param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.GetAsync">
            <summary>
            Retrieves all the GL fiscal years available to the user - these include the
            fiscal year for today plus a maximum of 5 previous fiscal years, if available.
            </summary>
            <returns>List of fiscal years.</returns>
            <accessComments>
            No permission is needed.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.GetFiscalYearForTodayAsync">
            <summary>
            Returns the fiscal year for today's date based on the General Ledger configuration.
            </summary>
            <returns>The fiscal year for today's date.</returns>
            <accessComments>
            No permission is needed.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.GetFiscalYearsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all fiscalYears
            </summary>
            <returns>List of FiscalYears <see cref="T:Ellucian.Colleague.Dtos.FiscalYears"/> objects representing matching fiscalYears</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.GetFiscalYearsByGuidAsync(System.String)">
            <summary>
            Read (GET) a fiscalYears using a GUID
            </summary>
            <param name="guid">GUID to desired fiscalYears</param>
            <returns>A fiscalYears object <see cref="T:Ellucian.Colleague.Dtos.FiscalYears"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.PostFiscalYearsAsync(Ellucian.Colleague.Dtos.FiscalYears)">
            <summary>
            Create (POST) a new fiscalYears
            </summary>
            <param name="fiscalYears">DTO of the new fiscalYears</param>
            <returns>A fiscalYears object <see cref="T:Ellucian.Colleague.Dtos.FiscalYears"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.PutFiscalYearsAsync(System.String,Ellucian.Colleague.Dtos.FiscalYears)">
            <summary>
            Update (PUT) an existing fiscalYears
            </summary>
            <param name="guid">GUID of the fiscalYears to update</param>
            <param name="fiscalYears">DTO of the updated fiscalYears</param>
            <returns>A fiscalYears object <see cref="T:Ellucian.Colleague.Dtos.FiscalYears"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FiscalYearsController.DeleteFiscalYearsAsync(System.String)">
            <summary>
            Delete (DELETE) a fiscalYears
            </summary>
            <param name="guid">GUID to desired fiscalYears</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController">
            <summary>
            Provides access to FixedAssetCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FixedAssetCategoriesController class.
            </summary>
            <param name="fixedAssetCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetCategoriesService">IFixedAssetCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController.GetFixedAssetCategoriesAsync">
            <summary>
            Return all fixedAssetCategories
            </summary>
            <returns>List of FixedAssetCategories <see cref="T:Ellucian.Colleague.Dtos.FixedAssetCategory"/> objects representing matching fixedAssetCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController.GetFixedAssetCategoriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a fixedAssetCategories using a GUID
            </summary>
            <param name="guid">GUID to desired fixedAssetCategories</param>
            <returns>A fixedAssetCategories object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetCategory"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController.PostFixedAssetCategoriesAsync(Ellucian.Colleague.Dtos.FixedAssetCategory)">
            <summary>
            Create (POST) a new fixedAssetCategories
            </summary>
            <param name="fixedAssetCategories">DTO of the new fixedAssetCategories</param>
            <returns>A fixedAssetCategories object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetCategory"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController.PutFixedAssetCategoriesAsync(System.String,Ellucian.Colleague.Dtos.FixedAssetCategory)">
            <summary>
            Update (PUT) an existing fixedAssetCategories
            </summary>
            <param name="guid">GUID of the fixedAssetCategories to update</param>
            <param name="fixedAssetCategories">DTO of the updated fixedAssetCategories</param>
            <returns>A fixedAssetCategories object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetCategory"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetCategoriesController.DeleteFixedAssetCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a fixedAssetCategories
            </summary>
            <param name="guid">GUID to desired fixedAssetCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController">
            <summary>
            Provides access to FixedAssetDesignations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetDesignationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FixedAssetDesignationsController class.
            </summary>
            <param name="fixedAssetDesignationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetDesignationsService">IFixedAssetDesignationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController.GetFixedAssetDesignationsAsync">
            <summary>
            Return all fixedAssetDesignations
            </summary>
            <returns>List of FixedAssetDesignations <see cref="T:Ellucian.Colleague.Dtos.FixedAssetDesignations"/> objects representing matching fixedAssetDesignations</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController.GetFixedAssetDesignationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a fixedAssetDesignations using a GUID
            </summary>
            <param name="guid">GUID to desired fixedAssetDesignations</param>
            <returns>A fixedAssetDesignations object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetDesignations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController.PostFixedAssetDesignationsAsync(Ellucian.Colleague.Dtos.FixedAssetDesignations)">
            <summary>
            Create (POST) a new fixedAssetDesignations
            </summary>
            <param name="fixedAssetDesignations">DTO of the new fixedAssetDesignations</param>
            <returns>A fixedAssetDesignations object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetDesignations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController.PutFixedAssetDesignationsAsync(System.String,Ellucian.Colleague.Dtos.FixedAssetDesignations)">
            <summary>
            Update (PUT) an existing fixedAssetDesignations
            </summary>
            <param name="guid">GUID of the fixedAssetDesignations to update</param>
            <param name="fixedAssetDesignations">DTO of the updated fixedAssetDesignations</param>
            <returns>A fixedAssetDesignations object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetDesignations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetDesignationsController.DeleteFixedAssetDesignationsAsync(System.String)">
            <summary>
            Delete (DELETE) a fixedAssetDesignations
            </summary>
            <param name="guid">GUID to desired fixedAssetDesignations</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController">
            <summary>
            Provides access to FixedAssets
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FixedAssetsController class.
            </summary>
            <param name="fixedAssetsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetsService">IFixedAssetsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.GetFixedAssetsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all fixed-assets
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of FixedAssets <see cref="T:Ellucian.Colleague.Dtos.FixedAssets"/> objects representing matching fixedAssets</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.GetFixedAssetsByGuidAsync(System.String)">
            <summary>
            Read (GET) a fixed-assets using a GUID
            </summary>
            <param name="guid">GUID to desired fixedAssets</param>
            <returns>A fixedAssets object <see cref="T:Ellucian.Colleague.Dtos.FixedAssets"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.PostFixedAssetsAsync(Ellucian.Colleague.Dtos.FixedAssets)">
            <summary>
            Create (POST) a new fixedAssets
            </summary>
            <param name="fixedAssets">DTO of the new fixedAssets</param>
            <returns>A fixedAssets object <see cref="T:Ellucian.Colleague.Dtos.FixedAssets"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.PutFixedAssetsAsync(System.String,Ellucian.Colleague.Dtos.FixedAssets)">
            <summary>
            Update (PUT) an existing fixedAssets
            </summary>
            <param name="guid">GUID of the fixedAssets to update</param>
            <param name="fixedAssets">DTO of the updated fixedAssets</param>
            <returns>A fixedAssets object <see cref="T:Ellucian.Colleague.Dtos.FixedAssets"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.DeleteFixedAssetsAsync(System.String)">
            <summary>
            Delete (DELETE) a fixedAssets
            </summary>
            <param name="guid">GUID to desired fixedAssets</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetsController.GetFixedAssetTransferFlagsAsync">
            <summary>
            Return all Fixed asset transfer flags
            </summary>
            <returns>List of Fixed asset transfer flag <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.FixedAssetsFlag"/> objects representing matching FixedAssetsFlag</returns>
            <accessComments>
            Any authenticated user can get the Fixed asset transfer flags
            </accessComments>
            <note>FixedAssetsFlag is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController">
            <summary>
            Provides access to FixedAssetTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FixedAssetTypesController class.
            </summary>
            <param name="fixedAssetTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFixedAssetTypesService">IFixedAssetTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController.GetFixedAssetTypesAsync">
            <summary>
            Return all fixedAssetTypes
            </summary>
            <returns>List of FixedAssetTypes <see cref="T:Ellucian.Colleague.Dtos.FixedAssetType"/> objects representing matching fixedAssetTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController.GetFixedAssetTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a fixedAssetTypes using a GUID
            </summary>
            <param name="guid">GUID to desired fixedAssetTypes</param>
            <returns>A fixedAssetTypes object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController.PostFixedAssetTypesAsync(Ellucian.Colleague.Dtos.FixedAssetType)">
            <summary>
            Create (POST) a new fixedAssetTypes
            </summary>
            <param name="fixedAssetTypes">DTO of the new fixedAssetTypes</param>
            <returns>A fixedAssetTypes object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController.PutFixedAssetTypesAsync(System.String,Ellucian.Colleague.Dtos.FixedAssetType)">
            <summary>
            Update (PUT) an existing fixedAssetTypes
            </summary>
            <param name="guid">GUID of the fixedAssetTypes to update</param>
            <param name="fixedAssetTypes">DTO of the updated fixedAssetTypes</param>
            <returns>A fixedAssetTypes object <see cref="T:Ellucian.Colleague.Dtos.FixedAssetType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FixedAssetTypesController.DeleteFixedAssetTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a fixedAssetTypes
            </summary>
            <param name="guid">GUID to desired fixedAssetTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController">
            <summary>
            Provides access to FreeOnBoardTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFreeOnBoardTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FreeOnBoardTypesController class.
            </summary>
            <param name="freeOnBoardTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IFreeOnBoardTypesService">IFreeOnBoardTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController.GetFreeOnBoardTypesAsync">
            <summary>
            Return all freeOnBoardTypes
            </summary>
            <returns>List of FreeOnBoardTypes <see cref="T:Ellucian.Colleague.Dtos.FreeOnBoardTypes"/> objects representing matching freeOnBoardTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController.GetFreeOnBoardTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a freeOnBoardTypes using a GUID
            </summary>
            <param name="guid">GUID to desired freeOnBoardTypes</param>
            <returns>A freeOnBoardTypes object <see cref="T:Ellucian.Colleague.Dtos.FreeOnBoardTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController.PostFreeOnBoardTypesAsync(Ellucian.Colleague.Dtos.FreeOnBoardTypes)">
            <summary>
            Create (POST) a new freeOnBoardTypes
            </summary>
            <param name="freeOnBoardTypes">DTO of the new freeOnBoardTypes</param>
            <returns>A freeOnBoardTypes object <see cref="T:Ellucian.Colleague.Dtos.FreeOnBoardTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController.PutFreeOnBoardTypesAsync(System.String,Ellucian.Colleague.Dtos.FreeOnBoardTypes)">
            <summary>
            Update (PUT) an existing freeOnBoardTypes
            </summary>
            <param name="guid">GUID of the freeOnBoardTypes to update</param>
            <param name="freeOnBoardTypes">DTO of the updated freeOnBoardTypes</param>
            <returns>A freeOnBoardTypes object <see cref="T:Ellucian.Colleague.Dtos.FreeOnBoardTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.FreeOnBoardTypesController.DeleteFreeOnBoardTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a freeOnBoardTypes
            </summary>
            <param name="guid">GUID to desired freeOnBoardTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerAccountsController">
            <summary>
            Provides access to general ledger objects.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerAccountsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGeneralLedgerAccountService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the GL account controller.
            </summary>
            <param name="generalLedgerAccountService">General ledger account service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerAccountsController.GetUserGeneralLedgerAccountsAsync(System.String)">
            <summary>
            Retrieves the list of active expense GL account DTOs for which the user has access.
            </summary>
            <param name="glClass">Optional: null for all the user GL accounts, expense for only the expense type GL accounts.</param>
            <returns>A collection of expense GL account DTOs for the user.</returns>
            <accessComments>
            No permission is needed. The user can only access those GL accounts
            for which they have GL account security access granted.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerAccountsController.GetAsync(System.String)">
            <summary>
            Retrieves a single general ledger object using the supplied GL account ID.
            </summary>
            <param name="generalLedgerAccountId">General ledger account ID.</param>
            <returns>General ledger account DTO.</returns>
            <accessComments>
            The user can only access those GL accounts for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerAccountsController.GetGlAccountValidationAsync(System.String,System.String)">
            <summary>
            Validate a GL account. 
            If there is a fiscal year, it will also validate it for that year.
            </summary>
            <param name="generalLedgerAccountId">GL account ID.</param>
            <param name="fiscalYear">Optional; General Ledger fiscal year.</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.GlAccountValidationResponse">DTO.</see>/></returns>
            <accessComments>
            The user can only access those GL accounts for which they have
            GL account security access granted.
            </accessComments>     
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerActivityDetailsController">
            <summary>
            This is the controller for GL activity details.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerActivityDetailsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGeneralLedgerActivityDetailService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            GeneralLedgerActivityDetailsController class constructor.
            </summary>
            <param name="generalLedgerActivityDetailsService">GL activity details service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerActivityDetailsController.QueryGeneralLedgerActivityDetailsByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.GlActivityDetailQueryCriteria)">
            <summary>
            Retrieves all the actuals and encumbrances activity detail for the GL account and the fiscal year.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.GlActivityDetailQueryCriteria">Query criteria</see>includes the GL account and the fiscal year for the query.</param>
            <returns>List of GL activity detail DTOs for the specified GL account for the specified fiscal year.</returns>
            <accessComments>
            The user can only access transactions for a GL account for which they have
            GL account security access granted.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerConfigurationController">
            <summary>
            General Ledger Configuration controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerConfigurationController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGeneralLedgerConfigurationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the General Ledger Configuration controller.
            </summary>
            <param name="glConfigurationService">General Ledger Configuration service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerConfigurationController.GetGeneralLedgerConfigurationAsync">
            <summary>
            Returns the General Ledger configuration.
            </summary>
            <returns>The General Ledger configuration.</returns>
            <accessComments>
            No permission is needed.
            </accessComments>
            <note>GlAccountStructure is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerConfigurationController.GetBudgetAdjustmentConfigurationAsync">
            <summary>
            Get configuration information necessary to validate user input in a budget adjustment.
            </summary>
            <returns>BudgetAdjustmentConfiguration DTO</returns>
            <accessComments>
            No permission is needed.
            </accessComments> 
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerConfigurationController.GetBudgetAdjustmentsEnabledAsync">
            <summary>
            Get indicator that determines whether budget adjustments are turned on or off.
            </summary>
            <returns>BudgetAdjustmentEnabled DTO</returns>
            <accessComments>
            No permission is needed.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerConfigurationController.GetGlFiscalYearConfigurationAsync">
            <summary>
            Get fiscal year configuration information necessary to validate fiscal year dates used in finance query.
            </summary>
            <returns>GlFiscalYearConfiguration DTO</returns>
            <accessComments>
            No permission is needed.
            </accessComments> 
            <note>GlFiscalYearConfiguration is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerObjectCodesController">
            <summary>
            This is the controller for General Ledger object codes.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerObjectCodesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGlObjectCodeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the GL object code object.
            </summary>
            <param name="glObjectCodeService">GL object code service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerObjectCodesController.QueryGeneralLedgerObjectCodesByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.CostCenterQueryCriteria)">
            <summary>
            Retrieves the filtered GL object codes. Uses the filter criteria selected in
            the cost centers view because the filter has to persist on the object view.
            </summary>
            <param name="criteria">Cost center filter criteria.</param>
            <returns>GL object codes DTOs that match the filter criteria.</returns>
            <accessComments>
            The user can only access those GL object codes for which they have
            GL account security access granted.
            </accessComments>        
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController">
            <summary>
            The controller for general ledger transactions for the Ellucian Data Model.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGeneralLedgerTransactionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the GeneralLedgerTransactionController object
            </summary>
            <param name="generalLedgerTransactionService">General Ledger Transaction service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.GetById3Async(System.String)">
            <summary>
            Retrieves a specified general ledger transaction for the data model version 12
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <returns>A GeneralLedgerTransaction DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.Get3Async(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Retrieves all general ledger transactions for the data model version 12
            Paging implemented in 2024.
            </summary>
            <param name="page">limit and offset values</param>
            <returns>A Collection of GeneralLedgerTransactions <see cref="T:Ellucian.Colleague.Dtos.GeneralLedgerTransaction3"/> delimited by the limit and offset values.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.Update3Async(System.String,Ellucian.Colleague.Dtos.GeneralLedgerTransaction3)">
            <summary>
            Update a single general ledger transaction for the data model version 12
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <param name="generalLedgerDto">General Ledger DTO from Body of request</param>
            <returns>A single GeneralLedgerTransaction</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.Create3Async(Ellucian.Colleague.Dtos.GeneralLedgerTransaction3)">
            <summary>
            Create a single general ledger transaction for the data model version 12
            </summary>
            <param name="generalLedgerDto">General Ledger DTO from Body of request</param>
            <returns>A single GeneralLedgerTransaction</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.DeleteAsync(System.String)">
            <summary>
            Delete a single general ledger transaction for the data model version 6
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.GetById2Async(System.String)">
            <summary>
            Retrieves a specified general ledger transaction for the data model version 8
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <returns>A GeneralLedgerTransaction DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.Get2Async">
            <summary>
            Retrieves all general ledger transactions for the data model version 8
            </summary>
            <returns>A Collection of GeneralLedgerTransactions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.Create2Async(Ellucian.Colleague.Dtos.GeneralLedgerTransaction2)">
            <summary>
            Create a single general ledger transaction for the data model version 8
            </summary>
            <param name="generalLedgerDto">General Ledger DTO from Body of request</param>
            <returns>A single GeneralLedgerTransaction</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.Update2Async(System.String,Ellucian.Colleague.Dtos.GeneralLedgerTransaction2)">
            <summary>
            Update a single general ledger transaction for the data model version 8
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <param name="generalLedgerDto">General Ledger DTO from Body of request</param>
            <returns>A single GeneralLedgerTransaction</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.GetByIdAsync(System.String)">
            <summary>
            Retrieves a specified general ledger transaction for the data model version 6
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <returns>A GeneralLedgerTransaction DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.GetAsync">
            <summary>
            Retrieves all general ledger transactions for the data model version 6
            </summary>
            <returns>A Collection of GeneralLedgerTransactions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.CreateAsync(Ellucian.Colleague.Dtos.GeneralLedgerTransaction)">
            <summary>
            Create a single general ledger transaction for the data model version 6
            </summary>
            <param name="generalLedgerDto">General Ledger DTO from Body of request</param>
            <returns>A single GeneralLedgerTransaction</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GeneralLedgerTransactionsController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.GeneralLedgerTransaction)">
            <summary>
            Update a single general ledger transaction for the data model version 6
            </summary>
            <param name="id">The requested general ledger transaction GUID</param>
            <param name="generalLedgerDto">General Ledger DTO from Body of request</param>
            <returns>A single GeneralLedgerTransaction</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GlAccountBalancesController">
            <summary>
            This is the controller for GL account balances.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GlAccountBalancesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGlAccountBalancesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            GlAccountBalancesController class constructor.
            </summary>
            <param name="glAccountBalancesService">GL account balances service object.</param>
            <param name="logger">Logger object.</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GlAccountBalancesController.QueryGlAccountBalancesAsync(Ellucian.Colleague.Dtos.ColleagueFinance.GlAccountBalancesQueryCriteria)">
            <summary>
            Retrieves balances for the list of GL accounts and the fiscal year.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.GlAccountBalancesQueryCriteria">Query criteria</see>includes the GL account and the fiscal year for the query.</param>
            <returns>List of GL account balances DTOs for the specified GL accounts for the specified fiscal year.</returns>
            <accessComments>
            The user can only access transactions for a GL account for which they have
            GL account security access granted and Requires at least one of the permissions CREATE.UPDATE.REQUISITION, CREATE.UPDATE.PURCHASE.ORDER, CREATE.UPDATE.VOUCHER
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController">
            <summary>
            Provides access to Grants
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGrantsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GrantsController class.
            </summary>
            <param name="grantsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IGrantsService">IGrantsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController.GetGrantsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all grant.
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <param name="fiscalYear"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController.GetGrantsByGuidAsync(System.String)">
            <summary>
            Read (GET) a grant using a GUID.
            </summary>
            <param name="guid">GUID to desired grant</param>
            <returns>A grant object <see cref="T:Ellucian.Colleague.Dtos.Grant"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController.PostGrantsAsync(Ellucian.Colleague.Dtos.Grant)">
            <summary>
            Create (POST) a new grant.
            </summary>
            <param name="grant">DTO of the new grant</param>
            <returns>A grants object <see cref="T:Ellucian.Colleague.Dtos.Grant"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController.PutGrantsAsync(System.String,Ellucian.Colleague.Dtos.Grant)">
            <summary>
            Update (PUT) an existing grant.
            </summary>
            <param name="guid">GUID of the grants to update</param>
            <param name="grant">DTO of the updated grants</param>
            <returns>A grants object <see cref="T:Ellucian.Colleague.Dtos.Grant"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.GrantsController.DeleteGrantsAsync(System.String)">
            <summary>
            Delete (DELETE) a grant.
            </summary>
            <param name="guid">GUID to desired grants</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.InitiatorController">
            <summary>
            The controller for initiator
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.InitiatorController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IInitiatorService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the InitiatorController object
            </summary>
            <param name="initiatorService">Initiator service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.InitiatorController.GetInitiatorByKeywordAsync(System.String)">
            <summary>
            Get the list of initiators based on keyword search.
            </summary>
            <param name="queryKeyword">parameter for passing search keyword</param>
            <returns>The initiator search results</returns>      
            <accessComments>
            Requires at least one of the permissions VIEW.ANY.PERSON or CREATE.UPDATE.REQUISITION or CREATE.UPDATE.PURCHASE.ORDER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.InitiatorController.QueryInitiatorByKeywordAsync(Ellucian.Colleague.Dtos.ColleagueFinance.KeywordSearchCriteria)">
            <summary>
            Get the list of initiators based on keyword search.
            </summary>
            <param name="criteria">KeywordSearchCriteria parameter for passing search keyword</param>
            <returns> The initiator search results</returns>      
            <accessComments>
            Requires at least one of the permissions VIEW.ANY.PERSON or CREATE.UPDATE.REQUISITION or CREATE.UPDATE.PURCHASE.ORDER.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.JournalEntriesController">
            <summary>
            The controller for journal entries
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.JournalEntriesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IJournalEntryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the JournalEntriesController object
            </summary>
            <param name="journalEntryService">Journal Entry service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.JournalEntriesController.GetJournalEntryAsync(System.String)">
            <summary>
            Retrieves a specified journal entry
            </summary>
            <param name="journalEntryId">The requested journal entry ID</param>
            <returns>A Journal Entry DTO</returns>
            <accessComments>
            Requires permission VIEW.JOURNAL.ENTRY, and requires access to at least one of the
            general ledger numbers on the journal entry.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController">
            <summary>
            Provides access to LedgerActivities
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.ILedgerActivityService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LedgerActivitiesController class.
            </summary>
            <param name="ledgerActivityService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.ILedgerActivityService">ILedgerActivityService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController.GetLedgerActivitiesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all ledgerActivities
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <param name="fiscalYear"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController.GetLedgerActivitiesByGuidAsync(System.String)">
            <summary>
            Read (GET) a ledgerActivities using a GUID
            </summary>
            <param name="guid">GUID to desired ledgerActivities</param>
            <returns>A ledgerActivities object <see cref="T:Ellucian.Colleague.Dtos.LedgerActivity"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController.PostLedgerActivitiesAsync(Ellucian.Colleague.Dtos.LedgerActivity)">
            <summary>
            Create (POST) a new ledgerActivities
            </summary>
            <param name="ledgerActivities">DTO of the new ledgerActivities</param>
            <returns>A ledgerActivities object <see cref="T:Ellucian.Colleague.Dtos.LedgerActivity"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController.PutLedgerActivitiesAsync(System.String,Ellucian.Colleague.Dtos.LedgerActivity)">
            <summary>
            Update (PUT) an existing ledgerActivities
            </summary>
            <param name="guid">GUID of the ledgerActivities to update</param>
            <param name="ledgerActivities">DTO of the updated ledgerActivities</param>
            <returns>A ledgerActivities object <see cref="T:Ellucian.Colleague.Dtos.LedgerActivity"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.LedgerActivitiesController.DeleteLedgerActivitiesAsync(System.String)">
            <summary>
            Delete (DELETE) a ledgerActivities
            </summary>
            <param name="guid">GUID to desired ledgerActivities</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController">
            <summary>
            Provides access to PaymentTransactions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IPaymentTransactionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PaymentTransactionsController class.
            </summary>
            <param name="paymentTransactionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IPaymentTransactionsService">IPaymentTransactionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController.GetPaymentTransactionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all paymentTransactions
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="document">Named query</param>
             <param name="criteria">criteria filter</param>
            <returns>List of PaymentTransactions <see cref="T:Ellucian.Colleague.Dtos.PaymentTransactions"/> objects representing matching paymentTransactions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController.GetPaymentTransactionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a paymentTransactions using a GUID
            </summary>
            <param name="guid">GUID to desired paymentTransactions</param>
            <returns>A paymentTransactions object <see cref="T:Ellucian.Colleague.Dtos.PaymentTransactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController.PostPaymentTransactionsAsync(Ellucian.Colleague.Dtos.PaymentTransactions)">
            <summary>
            Create (POST) a new paymentTransactions
            </summary>
            <param name="paymentTransactions">DTO of the new paymentTransactions</param>
            <returns>A paymentTransactions object <see cref="T:Ellucian.Colleague.Dtos.PaymentTransactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController.PutPaymentTransactionsAsync(System.String,Ellucian.Colleague.Dtos.PaymentTransactions)">
            <summary>
            Update (PUT) an existing paymentTransactions
            </summary>
            <param name="guid">GUID of the paymentTransactions to update</param>
            <param name="paymentTransactions">DTO of the updated paymentTransactions</param>
            <returns>A paymentTransactions object <see cref="T:Ellucian.Colleague.Dtos.PaymentTransactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PaymentTransactionsController.DeletePaymentTransactionsAsync(System.String)">
            <summary>
            Delete (DELETE) a paymentTransactions
            </summary>
            <param name="guid">GUID to desired paymentTransactions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController">
            <summary>
            Provides access to ProcurementReceipts
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IProcurementReceiptsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ProcurementReceiptsController class.
            </summary>
            <param name="procurementReceiptsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IProcurementReceiptsService">IProcurementReceiptsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController.GetProcurementReceiptsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all ProcurementReceipts
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">QueryStringFilter</param>
            <returns>List of ProcurementReceipts <see cref="T:Ellucian.Colleague.Dtos.ProcurementReceipts"/> objects representing matching procurementReceipts</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController.GetProcurementReceiptsByGuidAsync(System.String)">
            <summary>
            Read (GET) a ProcurementReceipts using a GUID
            </summary>
            <param name="guid">GUID to desired procurementReceipts</param>
            <returns>A procurementReceipts object <see cref="T:Ellucian.Colleague.Dtos.ProcurementReceipts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController.PostProcurementReceiptsAsync(Ellucian.Colleague.Dtos.ProcurementReceipts)">
            <summary>
            Create (POST) a new procurementReceipts
            </summary>
            <param name="procurementReceipts">DTO of the new procurementReceipts</param>
            <returns>A procurementReceipts object <see cref="T:Ellucian.Colleague.Dtos.ProcurementReceipts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController.PutProcurementReceiptsAsync(System.String,Ellucian.Colleague.Dtos.ProcurementReceipts)">
            <summary>
            Update (PUT) an existing procurementReceipts
            </summary>
            <param name="guid">GUID of the procurementReceipts to update</param>
            <param name="procurementReceipts">DTO of the updated procurementReceipts</param>
            <returns>A procurementReceipts object <see cref="T:Ellucian.Colleague.Dtos.ProcurementReceipts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReceiptsController.DeleteProcurementReceiptsAsync(System.String)">
            <summary>
            Delete (DELETE) a procurementReceipts
            </summary>
            <param name="guid">GUID to desired procurementReceipts</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReturnReasonController">
            <summary>
            Provides Procurement Return Reason information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReturnReasonController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IProcurementReturnReasonService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor to initialize ProcurementReturnReasonController object.
            </summary>
            <param name="procurementReturnReasonService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ProcurementReturnReasonController.GetProcurementReturnReasonsAsync">
            <summary>
            Get all of the Return Reason codes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController">
            <summary>
            Provides access to PurchaseClassifications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PurchaseClassificationsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController.GetPurchaseClassificationsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all purchase-classifications
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PurchaseClassifications">PurchaseClassifications</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController.GetPurchaseClassificationsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing purchase-classifications
            </summary>
            <param name="guid">GUID of the purchase-classifications to get</param>
            <returns>A purchaseClassifications object <see cref="T:Ellucian.Colleague.Dtos.PurchaseClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController.PostPurchaseClassificationsAsync(Ellucian.Colleague.Dtos.PurchaseClassifications)">
            <summary>
            Create (POST) a new purchaseClassifications
            </summary>
            <param name="purchaseClassifications">DTO of the new purchaseClassifications</param>
            <returns>A purchaseClassifications object <see cref="T:Ellucian.Colleague.Dtos.PurchaseClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController.PutPurchaseClassificationsAsync(System.String,Ellucian.Colleague.Dtos.PurchaseClassifications)">
            <summary>
            Update (PUT) an existing purchaseClassifications
            </summary>
            <param name="guid">GUID of the purchaseClassifications to update</param>
            <param name="purchaseClassifications">DTO of the updated purchaseClassifications</param>
            <returns>A purchaseClassifications object <see cref="T:Ellucian.Colleague.Dtos.PurchaseClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseClassificationsController.DeletePurchaseClassificationsAsync(System.String)">
            <summary>
            Delete (DELETE) a purchaseClassifications
            </summary>
            <param name="guid">GUID to desired purchaseClassifications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController">
            <summary>
            The controller for purchase orders
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IPurchaseOrderService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the PurchaseOrdersController object
            </summary>
            <param name="purchaseOrderService">Purchase Order service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.GetPurchaseOrderAsync(System.String)">
            <summary>
            Retrieves a specified purchase order
            </summary>
            <param name="purchaseOrderId">The requested purchase order ID</param>
            <returns>Purchase Order DTO</returns>
            <accessComments>
            Requires permission VIEW.PURCHASE.ORDER, and requires access to at least one of the
            general ledger numbers on the purchase order line items.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.GetPurchaseOrdersAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all purchaseOrders
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Criteria Filter (orderNumber)</param>
            <returns>List of PurchaseOrders <see cref="T:Ellucian.Colleague.Dtos.PurchaseOrders2"/> objects representing matching purchaseOrders</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.GetPurchaseOrdersByGuidAsync(System.String)">
            <summary>
            Read (GET) a purchaseOrders using a GUID
            </summary>
            <param name="guid">GUID to desired purchaseOrders</param>
            <returns>A purchaseOrders object <see cref="T:Ellucian.Colleague.Dtos.PurchaseOrders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.PostPurchaseOrdersAsync(Ellucian.Colleague.Dtos.PurchaseOrders2)">
            <summary>
            Create (POST) a new purchaseOrders
            </summary>
            <param name="purchaseOrders">DTO of the new purchaseOrders</param>
            <returns>A purchaseOrders object <see cref="T:Ellucian.Colleague.Dtos.PurchaseOrders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.PutPurchaseOrdersAsync(System.String,Ellucian.Colleague.Dtos.PurchaseOrders2)">
            <summary>
            Update (PUT) an existing purchaseOrders
            </summary>
            <param name="guid">GUID of the purchaseOrders to update</param>
            <param name="purchaseOrders">DTO of the updated purchaseOrders</param>
            <returns>A purchaseOrders object <see cref="T:Ellucian.Colleague.Dtos.PurchaseOrders"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.PostPurchaseOrderAsync(Ellucian.Colleague.Dtos.ColleagueFinance.PurchaseOrderCreateUpdateRequest)">
            <summary>
            Create / Update a purchase order.
            </summary>
            <param name="purchaseOrderCreateUpdateRequest">The purchase order create update request DTO.</param>        
            <returns>The purchase order create response DTO.</returns>
            <accessComments>
            Requires Staff record, requires permission CREATE.UPDATE.PURCHASE.ORDER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.DeletePurchaseOrdersAsync(System.String)">
            <summary>
            Delete (DELETE) a purchaseOrders
            </summary>
            <param name="guid">GUID to desired purchaseOrders</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.GetPurchaseOrderSummaryByPersonIdAsync(System.String)">
            <summary>
            Retrieves list of Purchase Order summary
            </summary>
            <param name="personId">ID logged in user</param>
            <returns>list of Purchase Order Summary DTO</returns>
            <accessComments>
            Requires permission VIEW.PURCHASE.ORDER, and requires access to at least one of the
            general ledger numbers on the purchase order line items.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.VoidPurchaseOrderAsync(Ellucian.Colleague.Dtos.ColleagueFinance.PurchaseOrderVoidRequest)">
            <summary>
            Void a purchase order.
            </summary>
            <param name="purchaseOrderVoidRequest">The purchase order void request DTO.</param>        
            <returns>The purchase order void response DTO.</returns>
            <accessComments>
            Requires Staff record, requires permission CREATE.UPDATE.PURCHASE.ORDER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchaseOrdersController.QueryPurchaseOrderSummariesAsync(Ellucian.Colleague.Dtos.ColleagueFinance.ProcurementDocumentFilterCriteria)">
            <summary>
            Retrieves list of purchase order summary
            </summary>
            <param name="filterCriteria">procurement filter criteria</param>
            <returns>list of purchase order Summary DTO</returns>
            <accessComments>
            Requires Staff record, requires permission VIEW.PURCHASE.ORDER or CREATE.UPDATE.PURCHASE.ORDER.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController">
            <summary>
            Provides access to PurchasingArrangements
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PurchasingArrangementsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController.GetPurchasingArrangementsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all purchasing-arrangements
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PurchasingArrangement">PurchasingArrangements</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController.GetPurchasingArrangementsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing purchasing-arrangements
            </summary>
            <param name="guid">GUID of the purchasing-arrangements to get</param>
            <returns>A purchasingArrangements object <see cref="T:Ellucian.Colleague.Dtos.PurchasingArrangement"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController.PostPurchasingArrangementsAsync(Ellucian.Colleague.Dtos.PurchasingArrangement)">
            <summary>
            Create (POST) a new purchasingArrangements
            </summary>
            <param name="purchasingArrangements">DTO of the new purchasingArrangements</param>
            <returns>A purchasingArrangements object <see cref="T:Ellucian.Colleague.Dtos.PurchasingArrangement"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController.PutPurchasingArrangementsAsync(System.String,Ellucian.Colleague.Dtos.PurchasingArrangement)">
            <summary>
            Update (PUT) an existing purchasingArrangement
            </summary>
            <param name="guid">GUID of the purchasingArrangement to update</param>
            <param name="purchasingArrangement">DTO of the updated purchasingArrangement</param>
            <returns>A purchasingArrangements object <see cref="T:Ellucian.Colleague.Dtos.PurchasingArrangement"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.PurchasingArrangementsController.DeletePurchasingArrangementAsync(System.String)">
            <summary>
            Delete (DELETE) a purchasingArrangement
            </summary>
            <param name="guid">GUID to desired purchasingArrangement</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ReceiveProcurementsController">
            <summary>
            The controller for receive procurement
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ReceiveProcurementsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IReceiveProcurementsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the ReceiveProcurementsController object
            </summary>
            <param name="receiveProcurementsService">ReceiveProcurements service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ReceiveProcurementsController.GetReceiveProcurementsByPersonIdAsync(System.String)">
            <summary>
            Retrieves list of procurement receiving items
            </summary>
            <param name="personId">ID logged in user</param>
            <returns>list of Procurement Receving Items DTO</returns>
            <accessComments>
            Requires Staff record, requires permission UPDATE.RECEIVING
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ReceiveProcurementsController.PostAcceptOrReturnProcurementItemsAsync(Ellucian.Colleague.Dtos.ColleagueFinance.ProcurementAcceptReturnItemInformationRequest)">
            <summary>
            
            </summary>
            <param name="procurementAcceptOrReturnItemInformationRequest">Procurement accept return request DTO</param>
            <returns>Procurement accept return response DTO</returns>
            <accessComments>
            Requires Staff record, requires permission UPDATE.RECEIVING
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RecurringVouchersController">
            <summary>
            This is the controller for recurring vouchers
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RecurringVouchersController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IRecurringVoucherService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the RecurringVouchersController object
            </summary>
            <param name="recurringVoucherService">Recurring Voucher service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RecurringVouchersController.GetRecurringVoucherAsync(System.String)">
            <summary>
            Retrieves a specified recurring voucher
            </summary>
            <param name="recurringVoucherId">The requested recurring voucher ID</param>
            <returns>Recurring Voucher DTO</returns>
            <accessComments>
            Requires permission VIEW.RECURRING.VOUCHER, and requires access to at least one of the 
            general ledger numbers on the recurring voucher line items.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController">
            <summary>
            The controller for requisitions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IRequisitionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the RequisitionsController object
            </summary>
            <param name="requisitionService">Requisition service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.GetRequisitionAsync(System.String)">
            <summary>
            Retrieves a specified requisition
            </summary>
            <param name="requisitionId">ID of the requested requisition</param>
            <returns>Requisition DTO</returns>
            <accessComments>
            Requires permission VIEW.REQUISITION, and requires access to at least one of the
            general ledger numbers on the requisition line items.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.GetRequisitionsSummaryByPersonIdAsync(System.String)">
            <summary>
            Retrieves list of requistion summary
            </summary>
            <param name="personId">ID logged in user</param>
            <returns>list of Requisition Summary DTO</returns>
            <accessComments>
            Requires Staff record, requires permission VIEW.REQUISITION.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.PostRequisitionAsync(Ellucian.Colleague.Dtos.ColleagueFinance.RequisitionCreateUpdateRequest)">
            <summary>
            Create / Update a requisition.
            </summary>
            <param name="requisitionCreateUpdateRequest">The requisition create update request DTO.</param>        
            <returns>The requisition create response DTO.</returns>
            <accessComments>
            Requires Staff record, requires permission CREATE.UPDATE.REQUISITION.
            </accessComments>        
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.GetRequisitionForModifyWithLineItemDefaultsAsync(System.String)">
            <summary>
            Retrieves a specified requisition for modify with line item defaults
            </summary>
            <param name="requisitionId">ID of the requested requisition</param>
            <returns>Modify Requisition DTO</returns>
            <accessComments>
            Requires permission VIEW.REQUISITION, and requires access to at least one of the
            general ledger numbers on the requisition line items.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.DeleteRequisitionAsync(Ellucian.Colleague.Dtos.ColleagueFinance.RequisitionDeleteRequest)">
            <summary>
            Delete a requisition.
            </summary>
            <param name="requisitionDeleteRequest">The requisition delete request DTO.</param>        
            <returns>The requisition delete response DTO.</returns>
            <accessComments>
            Requires Staff record, requires permission DELETE.REQUISITION.
            </accessComments>        
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.QueryRequisitionSummariesAsync(Ellucian.Colleague.Dtos.ColleagueFinance.ProcurementDocumentFilterCriteria)">
            <summary>
            Retrieves list of requistion summary
            </summary>
            <param name="filterCriteria">procurement filter criteria</param>
            <returns>list of Requisition Summary DTO</returns>
            <accessComments>
            Requires Staff record, requires permission VIEW.REQUISITION or CREATE.UPDATE.REQUISITION.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.GetRequisitionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all requisitions
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria"></param>
            <returns>List of Requisitions <see cref="T:Ellucian.Colleague.Dtos.Requisitions"/> objects representing matching requisitions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.GetRequisitionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a requisitions using a GUID
            </summary>
            <param name="guid">GUID to desired requisitions</param>
            <returns>A requisitions object <see cref="T:Ellucian.Colleague.Dtos.Requisitions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.PutRequisitionsAsync(System.String,Ellucian.Colleague.Dtos.Requisitions)">
            <summary>
            Update (PUT) an existing Requisitions
            </summary>
            <param name="guid">GUID of the requisitions to update</param>
            <param name="requisitions">DTO of the updated requisitions</param>
            <returns>A Requisitions object <see cref="T:Ellucian.Colleague.Dtos.Requisitions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.PostRequisitionsAsync(Ellucian.Colleague.Dtos.Requisitions)">
            <summary>
            Create (POST) a new requisitions
            </summary>
            <param name="requisitions">DTO of the new requisitions</param>
            <returns>A requisitions object <see cref="T:Ellucian.Colleague.Dtos.Requisitions"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.RequisitionsController.DeleteRequisitionsAsync(System.String)">
            <summary>
            Delete (DELETE) a requisitions
            </summary>
            <param name="guid">GUID to desired requisitions</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController">
            <summary>
            Provides access to ShippingMethods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IShippingMethodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ShippingMethodsController class.
            </summary>
            <param name="shippingMethodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IShippingMethodsService">IShippingMethodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.GetShippingMethodsAsync">
            <summary>
            Return all shippingMethods
            </summary>
            <returns>List of ShippingMethods <see cref="T:Ellucian.Colleague.Dtos.ShippingMethods"/> objects representing matching shippingMethods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.GetShippingMethodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a ShippingMethods using a GUID
            </summary>
            <param name="guid">GUID to desired ShippingMethods</param>
            <returns>A ShippingMethods object <see cref="T:Ellucian.Colleague.Dtos.ShippingMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.PostShippingMethodsAsync(Ellucian.Colleague.Dtos.ShippingMethods)">
            <summary>
            Create (POST) a new ShippingMethods
            </summary>
            <param name="shippingMethods">DTO of the new ShippingMethods</param>
            <returns>A ShippingMethods object <see cref="T:Ellucian.Colleague.Dtos.ShippingMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.PutShippingMethodsAsync(System.String,Ellucian.Colleague.Dtos.ShippingMethods)">
            <summary>
            Update (PUT) an existing ShippingMethods
            </summary>
            <param name="guid">GUID of the ShippingMethods to update</param>
            <param name="shippingMethods">DTO of the updated ShippingMethods</param>
            <returns>A ShippingMethods object <see cref="T:Ellucian.Colleague.Dtos.ShippingMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.DeleteShippingMethodsAsync(System.String)">
            <summary>
            Delete (DELETE) a ShippingMethods
            </summary>
            <param name="guid">GUID to desired ShippingMethods</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShippingMethodsController.GetShipViaCodesAsync">
            <summary>
            Return all ShipViaCode
            </summary>
            <returns>List of ShipViaCodes <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.ShipViaCode"/> objects representing matching ShipToCode</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController">
            <summary>
            Provides access to ShipToDestinations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IShipToDestinationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ShipToDestinationsController class.
            </summary>
            <param name="shipToDestinationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IShipToDestinationsService">IShipToDestinationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.GetShipToDestinationsAsync">
            <summary>
            Return all shipToDestinations
            </summary>
            <returns>List of ShipToDestinations <see cref="T:Ellucian.Colleague.Dtos.ShipToDestinations"/> objects representing matching shipToDestinations</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.GetShipToCodesAsync">
            <summary>
            Return all ShipToCodes
            </summary>
            <returns>List of ShipToCodes <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.ShipToCode"/> objects representing matching ShipToCode</returns>
            <note>ShipToCode is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.GetShipToDestinationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a shipToDestinations using a GUID
            </summary>
            <param name="guid">GUID to desired shipToDestinations</param>
            <returns>A shipToDestinations object <see cref="T:Ellucian.Colleague.Dtos.ShipToDestinations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.PostShipToDestinationsAsync(Ellucian.Colleague.Dtos.ShipToDestinations)">
            <summary>
            Create (POST) a new shipToDestinations
            </summary>
            <param name="shipToDestinations">DTO of the new shipToDestinations</param>
            <returns>A shipToDestinations object <see cref="T:Ellucian.Colleague.Dtos.ShipToDestinations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.PutShipToDestinationsAsync(System.String,Ellucian.Colleague.Dtos.ShipToDestinations)">
            <summary>
            Update (PUT) an existing shipToDestinations
            </summary>
            <param name="guid">GUID of the shipToDestinations to update</param>
            <param name="shipToDestinations">DTO of the updated shipToDestinations</param>
            <returns>A shipToDestinations object <see cref="T:Ellucian.Colleague.Dtos.ShipToDestinations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.ShipToDestinationsController.DeleteShipToDestinationsAsync(System.String)">
            <summary>
            Delete (DELETE) a shipToDestinations
            </summary>
            <param name="guid">GUID to desired shipToDestinations</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.TaxFormCodesController">
            <summary>
            Provides access to TaxFormCodesController
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.TaxFormCodesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.ITaxFormsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TaxFormCodesController class.
            </summary>
            <param name="taxFormsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.ITaxFormsService">ITaxFormsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.TaxFormCodesController.GetTaxFormsAsync">
            <summary>
            Return all Tax forms
            </summary>
            <returns>List of Tax forms <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.TaxForm"/> objects representing matching TaxForm</returns>
            <accessComments>
            Any authenticated user can get the TaxForms
            </accessComments>
            <note>TaxForm is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController">
            <summary>
            Provides access to VendorAddressUsages
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorAddressUsagesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VendorAddressUsagesController class.
            </summary>
            <param name="vendorAddressUsagesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorAddressUsagesService">IVendorAddressUsagesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController.GetVendorAddressUsagesAsync">
            <summary>
            Return all vendorAddressUsages
            </summary>
            <returns>List of VendorAddressUsages <see cref="T:Ellucian.Colleague.Dtos.VendorAddressUsages"/> objects representing matching vendorAddressUsages</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController.GetVendorAddressUsagesByGuidAsync(System.String)">
            <summary>
            Read (GET) a vendorAddressUsages using a GUID
            </summary>
            <param name="guid">GUID to desired vendorAddressUsages</param>
            <returns>A vendorAddressUsages object <see cref="T:Ellucian.Colleague.Dtos.VendorAddressUsages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController.PostVendorAddressUsagesAsync(Ellucian.Colleague.Dtos.VendorAddressUsages)">
            <summary>
            Create (POST) a new vendorAddressUsages
            </summary>
            <param name="vendorAddressUsages">DTO of the new vendorAddressUsages</param>
            <returns>A vendorAddressUsages object <see cref="T:Ellucian.Colleague.Dtos.VendorAddressUsages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController.PutVendorAddressUsagesAsync(System.String,Ellucian.Colleague.Dtos.VendorAddressUsages)">
            <summary>
            Update (PUT) an existing vendorAddressUsages
            </summary>
            <param name="guid">GUID of the vendorAddressUsages to update</param>
            <param name="vendorAddressUsages">DTO of the updated vendorAddressUsages</param>
            <returns>A vendorAddressUsages object <see cref="T:Ellucian.Colleague.Dtos.VendorAddressUsages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorAddressUsagesController.DeleteVendorAddressUsagesAsync(System.String)">
            <summary>
            Delete (DELETE) a vendorAddressUsages
            </summary>
            <param name="guid">GUID to desired vendorAddressUsages</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController">
            <summary>
            Provides access to Vendor Types data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VendorTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="vendorTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorTypesService">Vendor type service</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController.GetVendorTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all Vendor types.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All vendor types objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController.GetVendorTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a vendor type by ID.
            </summary>
            <param name="guid">Guid of vendor type to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.VendorType">vendor type.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController.PostVendorTypeAsync(Ellucian.Colleague.Dtos.VendorType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a Vendor type.
            </summary>
            <param name="vendorType"><see cref="T:Ellucian.Colleague.Dtos.VendorType">VendorType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.VendorType">vendor type</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController.PutVendorTypeAsync(System.String,Ellucian.Colleague.Dtos.VendorType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a vendor type.
            </summary>
            <param name="guid">Guid of the vendor to update</param>
            <param name="vendorType"><see cref="T:Ellucian.Colleague.Dtos.VendorType">vendor type</see> to update</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.VendorType">vendor type</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorClassificationsController.DeleteVendorTypeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing vendor type.
            </summary>
            <param name="guid">Guid of the vendor type to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorCommodityController">
            <summary>
            This is the controller for vendor commodity.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorCommodityController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorCommodityService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the VendorCommodityController object.
            </summary>
            <param name="vendorCommodityService">vendor commodity service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorCommodityController.GetVendorCommodityAsync(System.String,System.String)">
            <summary>
            Returns a vendor and commodity code association.
            </summary>
            <param name="vendorId">vendor id.</param>        
            <param name="commodityCode">Commodity code.</param>
            <returns>VendorCommodity Dto.</returns>
            <accessComments>
            Requires at least one of the permissions VIEW.VENDOR, CREATE.UPDATE.VOUCHER, CREATE.UPDATE.REQUISITION and CREATE.UPDATE.PURCHASE.ORDER
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController">
            <summary>
            Provides access to VendorContacts
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorContactsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VendorContactsController class.
            </summary>
            <param name="vendorContactsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorContactsService">IVendorContactsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.GetVendorContactsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all vendorContacts
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria"></param>
            <returns>List of VendorContacts <see cref="T:Ellucian.Colleague.Dtos.VendorContacts"/> objects representing matching vendorContacts</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.GetVendorContactsByGuidAsync(System.String)">
            <summary>
            Read (GET) a vendorContacts using a GUID
            </summary>
            <param name="guid">GUID to desired vendorContacts</param>
            <returns>A vendorContacts object <see cref="T:Ellucian.Colleague.Dtos.VendorContacts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.PostVendorContactsAsync(Ellucian.Colleague.Dtos.VendorContacts)">
            <summary>
            Create (POST) a new vendorContacts
            </summary>
            <param name="vendorContacts">DTO of the new vendorContacts</param>
            <returns>A vendorContacts object <see cref="T:Ellucian.Colleague.Dtos.VendorContacts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.PutVendorContactsAsync(System.String,Ellucian.Colleague.Dtos.VendorContacts)">
            <summary>
            Update (PUT) an existing vendorContacts
            </summary>
            <param name="guid">GUID of the vendorContacts to update</param>
            <param name="vendorContacts">DTO of the updated vendorContacts</param>
            <returns>A vendorContacts object <see cref="T:Ellucian.Colleague.Dtos.VendorContacts"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.DeleteVendorContactsAsync(System.String)">
            <summary>
            Delete (DELETE) a vendorContacts
            </summary>
            <param name="guid">GUID to desired vendorContacts</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.PostVendorContactInitiationProcessAsync(Ellucian.Colleague.Dtos.VendorContactInitiationProcess)">
            <summary>
            Create (POST) a new vendor-contact-initiation-Process.
            </summary>
            <param name="vendorContactInitiationProcess"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.PutVendorContactInitiationProcess(System.String,Ellucian.Colleague.Dtos.VendorContacts)">
            <summary>
            Update a Vendor Contact Initiation Process in Colleague (Not Supported).
            </summary>
            <param name="guid"></param>
            <param name="vendorContactsDto"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.GetVendorContactInitiationProcess(System.String)">
            <summary>
            Get a Vendor Contact Initiation Process in Colleague (Not Supported).
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorContactsController.DeleteVendorContactInitiationProcess(System.String)">
            <summary>
            Delete (DELETE) an existing Vendor Contact Initiation Process.
            </summary>
            <param name="guid"></param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController">
            <summary>
            Provides access to VendorHoldReasons
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorHoldReasonsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VendorHoldReasonsController class.
            </summary>
            <param name="vendorHoldReasonsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorHoldReasonsService">IVendorHoldReasonsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController.GetVendorHoldReasonsAsync">
            <summary>
            Return all vendorHoldReasons
            </summary>
            <returns>List of VendorHoldReasons <see cref="T:Ellucian.Colleague.Dtos.VendorHoldReasons"/> objects representing matching vendorHoldReasons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController.GetVendorHoldReasonsByIdAsync(System.String)">
            <summary>
            Read (GET) a vendorHoldReasons using a GUID
            </summary>
            <param name="guid">GUID to desired vendorHoldReasons</param>
            <returns>A vendorHoldReasons object <see cref="T:Ellucian.Colleague.Dtos.VendorHoldReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController.PostVendorHoldReasonsAsync(Ellucian.Colleague.Dtos.VendorHoldReasons)">
            <summary>
            Create (POST) a new vendorHoldReasons
            </summary>
            <param name="vendorHoldReasons">DTO of the new vendorHoldReasons</param>
            <returns>A vendorHoldReasons object <see cref="T:Ellucian.Colleague.Dtos.VendorHoldReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController.PutVendorHoldReasonsAsync(System.String,Ellucian.Colleague.Dtos.VendorHoldReasons)">
            <summary>
            Update (PUT) an existing vendorHoldReasons
            </summary>
            <param name="guid">GUID of the vendorHoldReasons to update</param>
            <param name="vendorHoldReasons">DTO of the updated vendorHoldReasons</param>
            <returns>A vendorHoldReasons object <see cref="T:Ellucian.Colleague.Dtos.VendorHoldReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorHoldReasonsController.DeleteVendorHoldReasonsAsync(System.String)">
            <summary>
            Delete (DELETE) a vendorHoldReasons
            </summary>
            <param name="guid">GUID to desired vendorHoldReasons</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController">
            <summary>
            Provides access to VendorPaymentTerms
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorPaymentTermsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VendorPaymentTermsController class.
            </summary>
            <param name="vendorPaymentTermsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorPaymentTermsService">IVendorPaymentTermsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController.GetVendorPaymentTermsAsync">
            <summary>
            Return all vendorPaymentTerms
            </summary>
            <returns>List of VendorPaymentTerms <see cref="T:Ellucian.Colleague.Dtos.VendorPaymentTerms"/> objects representing matching vendorPaymentTerms</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController.GetVendorPaymentTermsByGuidAsync(System.String)">
            <summary>
            Read (GET) a vendorPaymentTerms using a GUID
            </summary>
            <param name="guid">GUID to desired vendorPaymentTerms</param>
            <returns>A vendorPaymentTerms object <see cref="T:Ellucian.Colleague.Dtos.VendorPaymentTerms"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController.PostVendorPaymentTermsAsync(Ellucian.Colleague.Dtos.VendorPaymentTerms)">
            <summary>
            Create (POST) a new vendorPaymentTerms
            </summary>
            <param name="vendorPaymentTerms">DTO of the new vendorPaymentTerms</param>
            <returns>A vendorPaymentTerms object <see cref="T:Ellucian.Colleague.Dtos.VendorPaymentTerms"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController.PutVendorPaymentTermsAsync(System.String,Ellucian.Colleague.Dtos.VendorPaymentTerms)">
            <summary>
            Update (PUT) an existing vendorPaymentTerms
            </summary>
            <param name="guid">GUID of the vendorPaymentTerms to update</param>
            <param name="vendorPaymentTerms">DTO of the updated vendorPaymentTerms</param>
            <returns>A vendorPaymentTerms object <see cref="T:Ellucian.Colleague.Dtos.VendorPaymentTerms"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorPaymentTermsController.DeleteVendorPaymentTermsAsync(System.String)">
            <summary>
            Delete (DELETE) a vendorPaymentTerms
            </summary>
            <param name="guid">GUID to desired vendorPaymentTerms</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController">
            <summary>
            Provides access to Vendors
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the VendorsController class.
            </summary>
            <param name="vendorsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVendorsService">IVendorsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all vendors
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">The default named query implementation for filtering</param>
            <returns>List of Vendors <see cref="T:Ellucian.Colleague.Dtos.Vendors"/> objects representing matching vendors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorsByGuidAsync(System.String)">
            <summary>
            Read (GET) a vendor using a GUID
            </summary>
            <param name="guid">GUID to desired vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.Vendors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.PostVendorsAsync(Ellucian.Colleague.Dtos.Vendors)">
            <summary>
            Create (POST) a new vendor
            </summary>
            <param name="vendor">DTO of the new vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.Vendors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.PutVendorsAsync(System.String,Ellucian.Colleague.Dtos.Vendors)">
            <summary>
            Update (PUT) an existing vendor
            </summary>
            <param name="guid">GUID of the vendor to update</param>
            <param name="vendor">DTO of the updated vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.Vendors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.DeleteVendorsAsync(System.String)">
            <summary>
            Delete (DELETE) a vendor
            </summary>
            <param name="guid">GUID to desired vendor</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.ValidateVendor(Ellucian.Colleague.Dtos.Vendors)">
            <summary>
            Helper method to validate vendors PUT/POST.
            </summary>
            <param name="vendor">Vendors DTO object of type <see cref="T:Ellucian.Colleague.Dtos.Vendors"/></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.ValidateUpdateRequest(System.String,Ellucian.Colleague.Dtos.BaseModel2)">
            <summary>
            Validate the request on Put meets conditions for guid consistency 
            </summary>
            <param name="guid"></param>
            <param name="request"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorsAsync2(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all vendors
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">The default named query implementation for filtering</param>
             <param name="vendorDetail">Vendor detail id GUId filter as in person or organization or institution guid</param>
            <returns>List of Vendors <see cref="T:Ellucian.Colleague.Dtos.Vendors2"/> objects representing matching vendors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorsByGuidAsync2(System.String)">
            <summary>
            Read (GET) a vendor using a GUID
            </summary>
            <param name="guid">GUID to desired vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.Vendors2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.PostVendorsAsync2(Ellucian.Colleague.Dtos.Vendors2)">
            <summary>
            Create (POST) a new vendor
            </summary>
            <param name="vendor">DTO of the new vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.Vendors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.ConvertToIntegrationApiError(System.String,System.String,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Static helper method to convert a repository error into an integration API error
            </summary>
            <param name="message"></param>
            <param name="code"></param>
            <param name="guid"></param>
            <param name="id"></param>
            <param name="httpStatusCode"></param>
            <returns>An integration API error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.PutVendorsAsync2(System.String,Ellucian.Colleague.Dtos.Vendors2)">
            <summary>
            Update (PUT) an existing vendor
            </summary>
            <param name="guid">GUID of the vendor to update</param>
            <param name="vendor">DTO of the updated vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.Vendors2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorsMaximumAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all vendors
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">The default named query implementation for filtering</param>
             <param name="vendorDetail">Vendor detail id GUId filter as in person or organization or institution guid</param>
            <returns>List of Vendors <see cref="T:Ellucian.Colleague.Dtos.VendorsMaximum"/> objects representing matching vendors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorsMaximumByGuidAsync(System.String)">
            <summary>
            Read (GET) a vendor using a GUID
            </summary>
            <param name="id">GUID to desired vendor</param>
            <returns>A vendor object <see cref="T:Ellucian.Colleague.Dtos.VendorsMaximum"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.PostVendorsMaximumAsync(Ellucian.Colleague.Dtos.VendorsMaximum)">
            <summary>
            Create (POST) a new vendorsMaximum
            </summary>
            <param name="vendorsMaximum">DTO of the new vendorsMaximum</param>
            <returns>A vendorsMaximum object <see cref="T:Ellucian.Colleague.Dtos.VendorsMaximum"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.PutVendorsMaximumAsync(System.String,Ellucian.Colleague.Dtos.VendorsMaximum)">
            <summary>
            Update (PUT) an existing vendorsMaximum
            </summary>
            <param name="guid">GUID of the vendorsMaximum to update</param>
            <param name="vendorsMaximum">DTO of the updated vendorsMaximum</param>
            <returns>A vendorsMaximum object <see cref="T:Ellucian.Colleague.Dtos.VendorsMaximum"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.DeleteVendorsMaximumAsync(System.String)">
            <summary>
            Delete (DELETE) a vendorsMaximum
            </summary>
            <param name="guid">GUID to desired vendorsMaximum</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.QueryVendorsByPostAsync(Ellucian.Colleague.Dtos.ColleagueFinance.VendorSearchCriteria)">
            <summary>
            Get the list of vendors based on keyword search.
            </summary>
            <param name="searchCriteria"> The search criteria containing keyword for vendor search.</param>
            <returns> The vendor search results</returns>      
            <accessComments>
            Requires at least one of the permissions VIEW.VENDOR, CREATE.UPDATE.REQUISITION and CREATE.UPDATE.PURCHASE.ORDER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.QueryVendorForVoucherAsync(Ellucian.Colleague.Dtos.ColleagueFinance.VendorSearchCriteria)">
            <summary>
            Get the list of vendors based on keyword search for Vouchers.
            </summary>
            <param name="searchCriteria"> The search criteria containing keyword for vendor search.</param>
            <returns> The vendor search results for Vouchers</returns>      
            <accessComments>
            Requires at least one of the permissions VIEW.VENDOR, CREATE.UPDATE.VOUCHER
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VendorsController.GetVendorDefaultTaxFormInfoAsync(System.String,System.String)">
            <summary>
            Retrieves a vendor's tax form, box no and state to be defaulted in procurement document.
            </summary>
            <param name="vendorId">vendor id.</param>        
            <param name="apType">AP type.</param>
            <returns>VendorDefaultTaxFormInfo DTO.</returns>
            <accessComments>
            Requires at least one of the permissions VIEW.VENDOR, CREATE.UPDATE.VOUCHER, CREATE.UPDATE.REQUISITION,
            CREATE.UPDATE.PURCHASE.ORDER and CREATE.UPDATE.VOUCHER
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController">
            <summary>
            This is the controller for vouchers.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IVoucherService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the VouchersController object.
            </summary>
            <param name="voucherService">Voucher service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.GetVoucherAsync(System.String)">
            <summary>
            Retrieves a specified voucher.
            </summary>
            <param name="voucherId">ID of the requested voucher.</param>
            <returns>Voucher DTO.</returns>
            <accessComments>
            Requires permission VIEW.VOUCHER, and requires access to at least one of the
            general ledger numbers on the voucher line items.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.GetVoucher2Async(System.String)">
            <summary>
            Retrieves a specified voucher.
            </summary>
            <param name="voucherId">ID of the requested voucher.</param>
            <returns>Voucher DTO.</returns>
            <accessComments>
            Requires permission VIEW.VOUCHER, and requires access to at least one of the
            general ledger numbers on the voucher line items.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.GetVoucherSummariesAsync(System.String)">
            <summary>
            Retrieves list of voucher summary
            </summary>
            <param name="personId">ID logged in user</param>
            <returns>list of Voucher Summary DTO</returns>
            <accessComments>
            Requires Staff record, requires permission VIEW.VOUCHER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.PostVoucherAsync(Ellucian.Colleague.Dtos.ColleagueFinance.VoucherCreateUpdateRequest)">
            <summary>
            Create / Update a voucher.
            </summary>
            <param name="voucherCreateUpdateRequest">The voucher create update request DTO.</param>        
            <returns>The voucher create response DTO.</returns>
            <accessComments>
            Requires Staff record, requires permission CREATE.UPDATE.VOUCHER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.GetReimbursePersonAddressForVoucherAsync">
            <summary>
            Gets a payment address of person for voucher
            </summary>
            <returns> Payment address DTO</returns>
            <accessComments>
            Requires  permission CREATE.UPDATE.VOUCHER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.VoidVoucherAsync(Ellucian.Colleague.Dtos.ColleagueFinance.VoucherVoidRequest)">
            <summary>
            Void a Voucher.
            </summary>
            <param name="voucherVoidRequest">The voucher void request DTO.</param>        
            <returns>The voucher void response DTO.</returns>
            <accessComments>
            Requires Staff record, requires permission CREATE.UPDATE.VOUCHER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.GetVouchersByVendorAndInvoiceNoAsync(System.String,System.String)">
            <summary>
            Retrieves list of vouchers
            </summary>
            <param name="vendorId">Vendor id</param>
            <param name="invoiceNo">Invoice number</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.ColleagueFinance.Voucher2">Vouchers</see></returns>
            <accessComments>
            Requires permission VIEW.VOUCHER.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ColleagueFinance.VouchersController.QueryVoucherSummariesAsync(Ellucian.Colleague.Dtos.ColleagueFinance.ProcurementDocumentFilterCriteria)">
            <summary>
            Retrieves list of voucher summary
            </summary>
            <param name="filterCriteria">procurement filter criteria</param>
            <returns>list of voucher summary DTO</returns>
            <accessComments>
            Requires Staff record, requires permission VIEW.VOUCHER or CREATE.UPDATE.VOUCHER.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BuyersController">
            <summary>
            Provides access to Buyers
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuyersController.#ctor(Ellucian.Colleague.Coordination.ColleagueFinance.Services.IBuyersService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BuyersController class.
            </summary>
            <param name="buyersService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ColleagueFinance.Services.IBuyersService">IBuyersService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuyersController.GetBuyersAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all buyers
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of Buyers <see cref="T:Ellucian.Colleague.Dtos.Buyers"/> objects representing matching buyers</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuyersController.GetBuyersByGuidAsync(System.String)">
            <summary>
            Read (GET) a buyers using a GUID
            </summary>
            <param name="guid">GUID to desired buyers</param>
            <returns>A buyers object <see cref="T:Ellucian.Colleague.Dtos.Buyers"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuyersController.PostBuyersAsync(Ellucian.Colleague.Dtos.Buyers)">
            <summary>
            Create (POST) a new buyers
            </summary>
            <param name="buyers">DTO of the new buyers</param>
            <returns>A buyers object <see cref="T:Ellucian.Colleague.Dtos.Buyers"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuyersController.PutBuyersAsync(System.String,Ellucian.Colleague.Dtos.Buyers)">
            <summary>
            Update (PUT) an existing buyers
            </summary>
            <param name="guid">GUID of the buyers to update</param>
            <param name="buyers">DTO of the updated buyers</param>
            <returns>A buyers object <see cref="T:Ellucian.Colleague.Dtos.Buyers"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BuyersController.DeleteBuyersAsync(System.String)">
            <summary>
            Delete (DELETE) a buyers
            </summary>
            <param name="guid">GUID to desired buyers</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController">
            <summary>
            Provides access to get student financial account activity.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.#ctor(Ellucian.Colleague.Coordination.Finance.IAccountActivityService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AccountActivityController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IAccountActivityService">IAccountActivityService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.GetAccountActivityPeriodsForStudent(System.String)">
            <summary>
            Retrieves the account period data for a student.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Student ID</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.AccountActivityPeriods">account activity period</see> data</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.GetAccountActivityTermsForStudent(System.String)">
            <summary>
            Retrieves the terms for which a student has activity.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="guid">PERSON GUID</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.AccountActivityTerms">account activity terms</see> data</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.GetAccountActivityByTermForStudent(System.String,System.String)">
            <summary>
            Retrieves the account activity data for a student for a specified term.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="termId">Term ID</param>
            <param name="studentId">Student ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.DetailedAccountPeriod">detailed account period</see> data for the specified student and term.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <note>DetailedAccountPeriod is cached for 1 minute.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.GetAccountActivityByTermForStudent2(System.String,System.String)">
            <summary>
            Retrieves the account activity data for a student for a specified term.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY permission or proxy permissions can request other users' data
            </accessComments>
            <param name="termId">Term ID</param>
            <param name="studentId">Student ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.DetailedAccountPeriod">detailed account period</see> for the specified student and term.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.PostAccountActivityByPeriodForStudent(Ellucian.Colleague.Dtos.Finance.AccountActivity.AccountActivityPeriodArguments,System.String)">
            <summary>
            Retrieves the account activity data for a student for a specified period.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="arguments">The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.AccountActivityPeriodArguments">AccountActivityPeriodArguments</see> for the desired period</param>
            <param name="studentId">Student ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.DetailedAccountPeriod">detailed account period</see> data for the specified student and period.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <note>DetailedAccountPeriod is cached for 1 minute.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.PostAccountActivityByPeriodForStudent2(Ellucian.Colleague.Dtos.Finance.AccountActivity.AccountActivityPeriodArguments,System.String)">
            <summary>
            Retrieves the account activity data for a student for a specified period.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="arguments">The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.AccountActivityPeriodArguments">AccountActivityPeriodArguments</see> for the desired period</param>
            <param name="studentId">Student ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.DetailedAccountPeriod">Detailed Account Period</see> for the specified student and period.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.GetStudentAwardDisbursementInfoAsync(System.String,System.String,System.String)">
            <summary>
            Gets student award disbursement information for the specified award for the specified year
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">student id</param>
            <param name="awardYear">award year code</param>
            <param name="awardId">award id</param>
            <returns>StudentAwardDisbursementInfo DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountActivityController.QueryStudentPotentialD7FinancialAidAsync(Ellucian.Colleague.Dtos.Finance.PotentialD7FinancialAidCriteria)">
            <summary>
            Returns information about potentially untransmitted D7 financial aid, based on
            current charges, credits, and awarded aid.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="criteria">The <see cref="T:Ellucian.Colleague.Dtos.Finance.PotentialD7FinancialAidCriteria"/> criteria of
            potential financial aid for which to search.</param>
            <returns>Enumeration of <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountActivity.PotentialD7FinancialAid"/> 
            awards and potential award amounts.</returns>
            
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.AccountDueController">
            <summary>
            Provides access to get student financial account due information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountDueController.#ctor(Ellucian.Colleague.Coordination.Finance.IAccountDueService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AccountDueController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IAccountDueService">IAccountDueService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountDueController.GetAccountDueForStudent(System.String)">
            <summary>
            Retrieves the account due data for a student broken out by term.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Student ID</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountDue.AccountDue">account due</see> data</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.AccountDueController.GetAccountDuePeriodForStudent(System.String)">
            <summary>
            Retrieves the account due data for a student broken out by period.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Student ID</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountDue.AccountDuePeriod">account due period</see> data</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.DepositsController">
            <summary>
            Provides access to get and update Accounts Receivable information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.DepositsController.#ctor(Ellucian.Colleague.Coordination.Finance.IAccountsReceivableService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AccountsReceivableController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IAccountsReceivableService">IAccountsReceivableService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.DepositsController.GetDepositsDue(System.String)">
            <summary>
            Get the deposits due for a specified student
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Student ID</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Finance.DepositDue">deposits due</see> for the student</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.DepositsController.GetDepositTypes">
            <summary>
            Retrieves all Deposit Types
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Finance.DepositType">deposit type</see> codes and descriptions.</returns>
            <note>DepositType is cached for 24 hours.</note>
            <note>DepositType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.FinanceConfigurationController">
            <summary>
            Provides access to get student finance parameters and settings.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.FinanceConfigurationController.#ctor(Ellucian.Colleague.Coordination.Finance.IFinanceConfigurationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            FinanceConfigurationController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IFinanceConfigurationService">IFinanceConfigurationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.FinanceConfigurationController.Get">
            <summary>
            Retrieves the configuration information for Student Finance.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.Configuration.FinanceConfiguration">Finance Configuration</see></returns>
            <note>FinanceConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.FinanceConfigurationController.GetImmediatePaymentControl">
            <summary>
            Retrieves the configuration information for Immediate Payment Control.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.ImmediatePaymentControl">Immediate Payment Control</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the required setup is not complete</exception>
            <note>ImmediatePaymentControl is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.PaymentController">
            <summary>
            Provides access to process student payments.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.#ctor(Ellucian.Colleague.Coordination.Finance.IPaymentService,Ellucian.Colleague.Coordination.Finance.IAccountsReceivableService,Ellucian.Colleague.Coordination.Finance.IFinanceConfigurationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PaymentController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IPaymentService">IPaymentService</see></param>
            <param name="arService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IAccountsReceivableService">IAccountsReceivableService</see></param>
            <param name="financeConfigService"></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.GetPaymentConfirmation(System.String,System.String,System.String)">
            <summary>
            Retrieves information required to process a student payment.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <param name="distribution">Distribution ID</param>
            <param name="paymentMethod">Payment Method</param>
            <param name="amountToPay">Amount being paid</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.PaymentConfirmation">Payment Confirmation</see> information</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.PostPaymentProvider(Ellucian.Colleague.Dtos.Finance.Payments.Payment)">
            <summary>
            Process a student payment using a credit card
            </summary>
            <accessComments>
            Users may change their own data. Additionally, users who have proxy permissions can
            change other users' data
            </accessComments>
            <param name="paymentDetails">The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.Payment">Payment</see> information</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.PaymentProvider">Payment Provider</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to make this payment</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.GetPaymentReceipt(System.String,System.String)">
            <summary>
            Retrieves the information needed to acknowledge a payment.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="transactionId">e-Commerce Transaction ID</param>
            <param name="cashReceiptId">Cash Receipt ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.PaymentReceipt">Payment Receipt</see> information</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.PostProcessElectronicCheck(Ellucian.Colleague.Dtos.Finance.Payments.Payment)">
            <summary>
            Process a student payment using an electronic check
            </summary>
            <accessComments>
            Users may change their own data. Additionally, users who have proxy permissions can
            change other users' data
            </accessComments>
            <param name="paymentDetails">The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.Payment">Payment</see> information</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.ElectronicCheckProcessingResult">Electronic Check Processing Result</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to make this payment</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.GetCheckPayerInformation(System.String)">
            <summary>
            Retrieves the payer information needed to process an e-check.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have proxy permissions can
            request other users' data
            </accessComments>
            <param name="personId">Payer ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.ElectronicCheckPayer">Electronic Check Payer</see> information</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.GetPaymentDistributions(System.String,System.String,System.String)">
            <summary>
            Retrieves the payment distributions for a student, account types, and payment process.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY 
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Student ID</param>
            <param name="accountTypes">Comma-delimited list of account type codes</param>
            <param name="paymentProcess">Code of payment process</param>
            <returns>List of payment distributions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentController.GetRestrictedPaymentMethodsAsync(System.String)">
            <summary>
            Retrieves a list of restricted payment methods
            </summary>
            <param name="studentId">Student ID</param>
            <returns>List of Available Payment Methods</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController">
            <summary>
            Provides access to get and update registration billing information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.#ctor(Ellucian.Colleague.Coordination.Finance.IRegistrationBillingService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            RegistrationBillingController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IRegistrationBillingService">IRegistrationBillingService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.Get(System.String)">
            <summary>
            Retrieves a specified registration payment control.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="id">Registration payment control ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationPaymentControl">Registration Payment Control</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetStudent(System.String)">
            <summary>
            Retrieves the incomplete payment controls for a student.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Student ID</param>
            <returns>The list of <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationPaymentControl">Registration Payment Control</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetDocument(System.String,System.String)">
            <summary>
            Retrieves a registration payment control document.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="id">Registration payment control ID</param>
            <param name="documentId">Document ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Base.TextDocument">Text Document</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.PostAcceptTerms(Ellucian.Colleague.Dtos.Finance.PaymentTermsAcceptance)">
            <summary>
            Post the approval of a registration's terms and conditions
            </summary>
            <accessComments>
            Users may change their own data only
            </accessComments>
            <param name="approval">The registration approval information</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationTermsApproval">registration approval</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.PostAcceptTerms2(Ellucian.Colleague.Dtos.Finance.PaymentTermsAcceptance2)">
            <summary>
            Post the approval of a registration's terms and conditions
            </summary>
            <accessComments>
            Users may change their own data only
            </accessComments>
            <param name="approval">The registration approval information</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationTermsApproval">registration approval</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetOptions(System.String)">
            <summary>
            Retrieves payment options for a student for a term.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY permission or proxy permissions can request other users' data
            </accessComments>
            <param name="id">Registration payment control ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.ImmediatePaymentOptions">Immediate Payment Options</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.Put(Ellucian.Colleague.Dtos.Finance.RegistrationPaymentControl)">
            <summary>
            Updates a payment control
            </summary>
            <accessComments>
            Users may change their own data only
            </accessComments>
            <param name="rpcDto"><see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationPaymentControl">Registration Payment Control</see> DTO to update</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationPaymentControl">Registration Payment Control</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetSummary(System.String,System.String,System.Decimal)">
            <summary>
            Retrieves the payment summary for a payment control, pay method, and payment amount.
            </summary>
            <accessComments>
            Users may request their own data only
            </accessComments>
            <param name="id">Registration payment control ID</param>
            <param name="payMethod">Payment method code</param>
            <param name="amount">Total payment amount</param>
            <returns>The List of <see cref="T:Ellucian.Colleague.Dtos.Finance.Payments.Payment">payments</see> to be made</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.PostStartPayment(Ellucian.Colleague.Dtos.Finance.Payments.Payment)">
            <summary>
            Starts a registration payment
            </summary>
            <accessComments>
            Users may create their own data only
            </accessComments>
            <param name="payment">The registration payment</param>
            <returns>Payment provider information to start a payment</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetTermsApproval(System.String)">
            <summary>
            Retrieves the registration terms approval.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="id">Terms approval ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationTermsApproval">terms approval</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetTermsApproval2(System.String)">
            <summary>
            Retrieves the registration terms approval.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="id">Terms approval ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.RegistrationTermsApproval2">terms approval</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentControlsController.GetProposedPaymentPlan(System.String,System.String)">
            <summary>
            Get a proposed payment plan
            </summary>
            <accessComments>
            Users may request their own data only
            </accessComments>
            <param name="payControlId">ID of a payment control record</param>
            <param name="receivableType">Receivable Type for proposed payment plan</param>
            <returns>The proposed<see cref="T:Ellucian.Colleague.Dtos.Finance.PaymentPlan">Payment Plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to get proposed payment plan</exception>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController">
            <summary>
            Provides access to get and update payment plan information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.#ctor(Ellucian.Colleague.Coordination.Finance.IPaymentPlanService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PaymentPlansController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IPaymentPlanService">IPaymentPlanService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.GetPaymentPlanTemplates">
            <summary>
            Gets all payment plan templates
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A list of PaymentPlanTemplate DTOs</returns>
            <note>PaymentPlanTemplate is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.GetPaymentPlan(System.String)">
            <summary>
            Get the specified payment plan
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="paymentPlanId">ID of the payment plan</param>
            <returns>A PaymentPlan DTO</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the payment plan ID is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to get the payment plan</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.GetPaymentPlanTemplate(System.String)">
            <summary>
            Gets the specified payment plan template
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <param name="templateId">ID of the payment plan template</param>
            <returns>A PaymentPlanTemplate DTO</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the payment plan is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create the payment plan</exception>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.PostAcceptTerms(Ellucian.Colleague.Dtos.Finance.PaymentPlanTermsAcceptance)">
            <summary>
            Post the approval of a payment plan's terms and conditions
            </summary>
            <accessComments>
            Users may change their own data only
            </accessComments>
            <param name="approval">The payment plan approval information</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Finance.PaymentPlanApproval">Payment Plan approval</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the payment plan is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.GetPaymentPlanApproval(System.String)">
            <summary>
            Get an approval for a payment plan
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="approvalId">Approval ID</param>
            <returns>A PaymentPlanApproval DTO</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the payment plan approval is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.GetPlanPaymentSummary(System.String,System.String,System.Decimal,System.String)">
            <summary>
            Retrieves the down payment information for a payment control, payment plan, pay method and amount
            </summary>
            <accessComments>
            Users may request their own data only
            </accessComments>
            <param name="planId">Payment plan ID</param>
            <param name="payMethod">Payment method code</param>
            <param name="amount">Total payment amount</param>
            <param name="payControlId">Registration payment control ID</param>
            <returns>List of payments to be made</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.PaymentPlansController.GetProposedPaymentPlanAsync(System.String,System.String,System.String,System.Decimal)">
            <summary>
            Gets a proposed payment plan for a given person for a given term and receivable type with total charges
            no greater than the stated amount
            </summary>
            <accessComments>
            Users may request their own data only
            </accessComments>
            <param name="personId">Proposed plan owner ID</param>
            <param name="termId">Billing term ID</param>
            <param name="receivableTypeCode">Receivable Type Code</param>
            <param name="planAmount">Maximum total payment plan charges</param>
            <returns>Proposed payment plan</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController">
            <summary>
            Provides access to get and update Accounts Receivable information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.#ctor(Ellucian.Colleague.Coordination.Finance.IAccountsReceivableService,Ellucian.Colleague.Coordination.Finance.IPaymentPlanService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AccountsReceivableController class constructor
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IAccountsReceivableService">IAccountsReceivableService</see></param>
            <param name="payPlanService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Finance.IPaymentPlanService">IPaymentPlanService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetAccountHolder(System.String)">
            <summary>
            Retrieves the account holder information for a specified person.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="personId">Person ID</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountHolder">AccountHolder</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <note>AccountHolder is cached for 1 minute.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetAccountHolder2Async(System.String,System.Boolean)">
            <summary>
            Retrieves the privacy-restricted account holder information for a specified person.
            </summary>
            <param name="personId">Person ID</param>
            <param name="bypassCache">bypassCache</param>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountHolder">AccountHolder</see> information. Account Holder privacy is enforced by this 
            response. If any Account Holder has an assigned privacy code that the user is not authorized to access, the AccountHolder response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of account holders. In this situation, 
            all details except the advisee name are cleared from the specific AccountHolder object.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
            <note>AccountHolder is cached for 1 minute.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryAccountHoldersByPostAsync(System.String)">
            <summary>
            Retrieves the information for a single accountholder if an id is provided,
            or the matching accountholders if a first and last name are provided.  
            In the latter case, a middle name is optional.
            Matching is done by partial name; i.e., 'Bro' will match 'Brown' or 'Brodie'. 
            Capitalization is ignored.
            </summary>
            <remarks>the following input is legal
            <list type="bullet">
            <item>a Colleague id.  Short ids will be zero-padded.</item>
            <item>First Last</item>
            <item>First Middle Last</item>
            <item>Last, First</item>
            <item>Last, First Middle</item>
            </list>
            </remarks>
            <param name="criteria">either a Person ID or a first and last name.  A middle name is optional.</param>
            <returns>An enumeration of <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountHolder">AccountHolder</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryAccountHoldersByPostAsync2(System.String)">
            <summary>
            Retrieves the privacy-restricted information for a single accountholder if an id is provided,
            or the matching accountholders if a first and last name are provided.  
            In the latter case, a middle name is optional.
            Matching is done by partial name; i.e., 'Bro' will match 'Brown' or 'Brodie'. 
            Capitalization is ignored.
            </summary>
            <accessComments>
            Users who have VIEW.STUDENT.ACCOUNT.ACTIVITY permission may request this data
            </accessComments>
            <remarks>the following input is legal
            <list type="bullet">
            <item>a Colleague id.  Short ids will be zero-padded.</item>
            <item>First Last</item>
            <item>First Middle Last</item>
            <item>Last, First</item>
            <item>Last, First Middle</item>
            </list>
            </remarks>
            <param name="criteria">either a Person ID or a first and last name.  A middle name is optional.</param>
            <returns>An enumeration of <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountHolder">AccountHolder</see> information. Account Holder privacy is enforced by this 
            response. If any Account Holder has an assigned privacy code that the user is not authorized to access, the AccountHolder response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of account holders. In this situation, 
            all details except the advisee name are cleared from the specific AccountHolder object.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryAccountHoldersByPost3Async(Ellucian.Colleague.Dtos.Finance.AccountHolderQueryCriteria)">
            <summary>
            Retrieves the privacy-restricted information for a single accountholder if an id is provided,
            or the matching accountholders if a first and last name are provided.  
            In the latter case, a middle name is optional.
            Matching is done by partial name; i.e., 'Bro' will match 'Brown' or 'Brodie'. 
            Capitalization is ignored.
            </summary>
            <accessComments>
            Users who have VIEW.STUDENT.ACCOUNT.ACTIVITY permission may request this data
            </accessComments>
            <remarks>the following input is legal
            <list type="bullet">
            <item>a Colleague id.  Short ids will be zero-padded.</item>
            <item>First Last</item>
            <item>First Middle Last</item>
            <item>Last, First</item>
            <item>Last, First Middle</item>
            </list>
            </remarks>
            <param name="criteria">either a Person ID or a first and last name, or a list of Person Ids.</param>
            <returns>An enumeration of <see cref="T:Ellucian.Colleague.Dtos.Finance.AccountHolder">AccountHolder</see> information. Account Holder privacy is enforced by this 
            response. If any Account Holder has an assigned privacy code that the user is not authorized to access, the AccountHolder response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of account holders. In this situation, 
            all details except the advisee name are cleared from the specific AccountHolder object.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetInvoices(System.String)">
            <summary>
            Retrieves a set of specified invoices.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="invoiceIds">Comma-delimited list of invoice IDs</param>
            <returns>The collection of <see cref="T:Ellucian.Colleague.Dtos.Finance.Invoice">Invoice</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryInvoicesByPostAsync(Ellucian.Colleague.Dtos.Finance.InvoiceQueryCriteria)">
             <summary>
             Accepts a list invoice Ids and will post a query against invoices.
             </summary>
             <accessComments>
             Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
             permission or proxy permissions can request other users' data
            </accessComments>
             <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Finance.InvoiceQueryCriteria">Query Criteria</see> including the list of Invoice Ids to use to retrieve invoices.</param>
             <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Finance.Invoice">Invoices</see> objects. </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryInvoicePaymentsByPostAsync(Ellucian.Colleague.Dtos.Finance.InvoiceQueryCriteria)">
            <summary>
            Accepts a list invoice Ids and will post a query against invoice payments.
            Retrieves a set of specified invoice payment items which inherits from invoice but has the addition of an amount paid on the invoice
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Finance.InvoiceQueryCriteria">Query Criteria</see> including the list of Invoice Ids. At least 1 invoice Id must be specified.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Finance.InvoicePayment">InvoicePayments</see> objects. </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetPayments(System.String)">
            <summary>
            Get a set of specified payments
            </summary>
            <param name="paymentIds">Comma-delimited list of payment IDs</param>
            <returns>The collection of <see cref="T:Ellucian.Colleague.Dtos.Finance.ReceivablePayment">ReceivablePayment</see> information</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetDepositsDue(System.String)">
            <summary>
            OBSOLETE - Use GetDepositsDue() in DepositsController to get deposits due for a student.
            Get the deposits due for a specified student
            </summary>
            <param name="id">Student ID</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Finance.DepositDue">deposits due</see> for the student</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this information</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetDepositTypes">
            <summary>
            OBSOLETE - Use GetDepositTypes() in DepositsController to get all deposit types.
            Get all deposit types
            </summary>
            <returns>A list of all <see cref="T:Ellucian.Colleague.Dtos.Finance.DepositType">deposit types</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetReceivableTypes">
            <summary>
            Retrieves all receivable types.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A list of all <see cref="T:Ellucian.Colleague.Dtos.Finance.ReceivableType">receivable types</see></returns>
            <note>ReceivableType is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryAccountHolderPaymentPlanOptionsAsync(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Finance.BillingTermPaymentPlanInformation})">
            <summary>
            Gets valid billing term payment plan information from a proposed billing term payment plan information collection
            </summary>
            <accessComments>
            Users may request their own data only
            </accessComments>
            <param name="billingTerms">List of payment items</param>
            <returns>Valid billing term payment plan information from a proposed billing term payment plan information collection</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.QueryAccountHolderPaymentPlanOptions2Async(Ellucian.Colleague.Dtos.Finance.PaymentPlanQueryCriteria)">
            <summary>
            Gets valid billing term payment plan information from a proposed billing term payment plan information collection
            </summary>
            <accessComments>
            Users may request their own data only
            </accessComments>
            <param name="criteria">payment plan query criteria</param>
            <returns>Valid billing term payment plan information from a proposed billing term payment plan information collection</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.ReceivablesController.GetChargeCodesAsync">
            <summary>
            Retrieves all charge codes.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A list of all <see cref="T:Ellucian.Colleague.Dtos.Finance.ChargeCode">receivable types</see></returns>
            <note>Charge codes are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Finance.StudentStatementsController">
            <summary>
            StudentStatementsController exposes the StudentStatement endpoint
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.StudentStatementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Finance.IStudentStatementService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            StudentStatementsController constructor
            </summary>
            <param name="adapterRegistry">Adapter Registry</param>
            <param name="statementService">Interface to Student Statement Coordination Service</param>
            <param name="logger">Logger</param>
            <param name="apiSettings">ERP API Settings</param>
            <param name="actionContextAccessor"></param>
            <param name="webHostEnvironment"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Finance.StudentStatementsController.GetStudentStatementAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Get a student's accounts receivable statement as a byte array representation of a PDF file for a timeframe.  
            Client should indicate the header value - Accept: application/pdf.
            A suggested filename for the report is located in the ContentDisposition.Filename header 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.STUDENT.ACCOUNT.ACTIVITY 
            permission or proxy permissions can request other users' data
            </accessComments>
            <param name="accountHolderId">ID of the student for whom the statement will be generated</param>
            <param name="timeframeId">ID of the timeframe for which the statement will be generated. For example, for Spring 2022 term this would be 2022/SP</param>
            <param name="startDate">Date on which the supplied timeframe starts</param>
            <param name="endDate">Date on which the supplied timeframe ends</param>
            <returns>An IActionResult containing a byte array representing a PDF</returns>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressAppealCodesController">
            <summary>
            Exposes Academic Progress Appeal Codes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressAppealCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor to AcademicProgressStatusesController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="financialAidReferenceDataRepository"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressAppealCodesController.GetAcademicProgressAppealCodesAsync">
            <summary>
            Get all Academic Progress Appeal Codes objects.
            An Academic Progress Appeal Code indicates an appeal of an academic progress evaluation.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns></returns>
            <note>AcademicProgressAppealCode is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressEvaluationsController">
            <summary>
            Controller exposes methods for interacting with Financial Aid Satisfactory Academic Progress (SAP)
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressEvaluationsController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IAcademicProgressService,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the AcademicProgressEvaluationsController
            </summary>
            <param name="academicProgressService"></param>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressEvaluationsController.GetStudentAcademicProgressEvaluationsAsync(System.String)">
            <summary>
            Get AcademicProgressEvaluation entities for the given student. 
            </summary>
            <param name="studentId">Colleague PERSON id of the student for whom to get AcademicProgressEvaluations</param>
            <returns>A list of AcademicProgressEvaluations</returns>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressEvaluationsController.GetStudentAcademicProgressEvaluations2Async(System.String)">
            <summary>
            Get AcademicProgressEvaluation2 DTOs for the given student. 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student for whom to get AcademicProgressEvaluations</param>
            <returns>A list of AcademicProgressEvaluations</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressStatusesController">
            <summary>
            Exposes methods to interact with AcademicProgressStatus resources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor to AcademicProgressStatusesController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="financialAidReferenceDataRepository"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AcademicProgressStatusesController.GetAcademicProgressStatusesAsync">
            <summary>
            Get all AcademicProgressStatus objects. An AcademicProgressStatus indicates the status of an academic progress evaluation.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns></returns>
            <note>AcademicProgressStatus objects are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController">
            <summary>
            Provides access to Aid Application Additional Info data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationAdditionalInfoService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes a new instance of the AidApplicationAdditionalInfoController class.
            </summary>
            <param name="aidApplicationAdditionalInfoService">Aid Application Additional Info Service of type <see cref="T:Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationAdditionalInfoService">IAidApplicationAdditionalInfoService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController.GetAidApplicationAdditionalInfoAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all aidApplicationAdditionalInfo
            </summary>
            <returns>List of AidApplicationAdditionalInfo <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationAdditionalInfo"/> objects representing all aid application additional info</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPL.ADDITIONAL can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController.GetAidApplicationAdditionalInfoByIdAsync(System.String)">
            <summary>
            Read (GET) an aidApplicationAdditionalInfo using an Id
            </summary>
            <param name="id">Id to desired aidApplicationAdditionalInfo</param>
            <returns>An aidApplicationAdditionalInfo object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationAdditionalInfo"/> in EEDM format</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPL.ADDITIONAL can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController.PostAidApplicationAdditionalInfoAsync(Ellucian.Colleague.Dtos.FinancialAid.AidApplicationAdditionalInfo)">
            <summary>
            Create (POST) additional aid application information
            </summary>
            <param name="aidApplicationAdditionalInfo">DTO of the new aidApplicationAdditionalInfo</param>
            <returns>An aidApplicationAdditionalInfo object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationAdditionalInfo"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController.PutAidApplicationAdditionalInfoAsync(System.String,Ellucian.Colleague.Dtos.FinancialAid.AidApplicationAdditionalInfo)">
            <summary>
            Update (PUT) an existing aid application additional info
            </summary>
            <param name="id">Id of the aid application additional info to update</param>
            <param name="aidApplicationAdditionalInfo">DTO of the updated aid application additional info</param>
            <returns>A aidApplicationAdditionalInfo object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationAdditionalInfo"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationAdditionalInfoController.DeleteAidApplicationAdditionalInfoAsync(System.String)">
            <summary>
            Delete (DELETE) an existing aid application additional info
            </summary>
            <param name="id">Id of the aid application additional info to update</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController">
            <summary>
            Provides access to Aid Application Demographics data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationDemographicsService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes a new instance of the AidApplicationDemographicsController class.
            </summary>
            <param name="aidApplicationDemographicsService">Aid Application Demographics service<see cref="T:Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationDemographicsService">IAidApplicationDemographicsService</see></param>
            <param name="logger">Logger<see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController.GetAidApplicationDemographicsByIdAsync(System.String)">
            <summary>
            Read (GET) a AidApplicationDemographics using a Id
            </summary>
            <param name="id">Id to desired aid application demographics</param>
            <returns>A aidApplicationDemographics object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationDemographics"/> in EEDM format</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPL.DEMO can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController.GetAidApplicationDemographicsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all AidApplicationDemographics
            </summary>
            <returns>List of AidApplicationDemographics <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationDemographics"/> objects representing all aid application demographics</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPL.DEMO can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController.PostAidApplicationDemographicsAsync(Ellucian.Colleague.Dtos.FinancialAid.AidApplicationDemographics)">
            <summary>
            Create (POST) a new aid application demographics
            </summary>
            <param name="aidApplicationDemographics">DTO of the new aid application demographics</param>
            <returns>A AidApplicationDemographics object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationDemographics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController.PutAidApplicationDemographicsAsync(System.String,Ellucian.Colleague.Dtos.FinancialAid.AidApplicationDemographics)">
            <summary>
            Update (PUT) an existing aid application demographics
            </summary>
            <param name="id">Id of the aid application demographics to update</param>
            <param name="aidApplicationDemographics">DTO of the updated aid application demographics</param>
            <returns>A AidApplicationDemographics object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationDemographics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationDemographicsController.DeleteAidApplicationDemographicsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing aid application demographics
            </summary>
            <param name="id">Id of the aid application demographics to update</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController">
            <summary>
            Provides access to Aid Application Results data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationResultsService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes a new instance of the AidApplicationResultsController class.
            </summary>
            <param name="aidApplicationResultsService">Aid Application Results service<see cref="T:Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationResultsService">IAidApplicationResultsService</see></param>
            <param name="logger">Logger<see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController.GetAidApplicationResultsByIdAsync(System.String)">
            <summary>
            Read (GET) a AidApplicationResults using a Id
            </summary>
            <param name="id">Id to desired aid application results</param>
            <returns>A aidApplicationResults object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationResults"/> in EEDM format</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPLICATION.RESULTS can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController.GetAidApplicationResultsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all AidApplicationResults
            </summary>
            <returns>List of AidApplicationResults <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationResults"/> objects representing all aid application results</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPLICATION.RESULTS can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController.PostAidApplicationResultsAsync(Ellucian.Colleague.Dtos.FinancialAid.AidApplicationResults)">
            <summary>
            Create (POST) aid application results
            </summary>
            <param name="aidApplicationResults">DTO of the new aidApplicationResults</param>
            <returns>An aidApplicationResults object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationResults"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController.PutAidApplicationResultsAsync(System.String,Ellucian.Colleague.Dtos.FinancialAid.AidApplicationResults)">
            <summary>
            Update (PUT) an existing aid application results
            </summary>
            <param name="id">Id of the aid application results to update</param>
            <param name="aidApplicationResults">DTO of the updated aid application results</param>
            <returns>A aidApplicationResults object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplicationResults"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationResultsController.DeleteAidApplicationResultsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing aid application results
            </summary>
            <param name="id">Id of the aid application results to update</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController">
            <summary>
            Provides access to Aid Applications data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationsService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes a new instance of the AidApplicationsController class.
            </summary>
            <param name="aidApplicationsService">Aid Applications service<see cref="T:Ellucian.Colleague.Coordination.FinancialAid.Services.IAidApplicationsService">IAidApplicationsService</see></param>
            <param name="logger">Logger<see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController.GetAidApplicationsByIdAsync(System.String)">
            <summary>
            Read (GET) a AidApplications using a Id
            </summary>
            <param name="id">Id to desired aid applications</param>
            <returns>A aidApplications object <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Entities.AidApplications"/> in EEDM format</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPLICATIONS can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController.GetAidApplicationsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all AidApplications
            </summary>
            <returns>List of AidApplications <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Entities.AidApplications"/> objects representing all aid applications</returns>
            <accessComments>
            Authenticated users with VIEW.AID.APPLICATIONS can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController.PostAidApplicationsAsync(Ellucian.Colleague.Dtos.FinancialAid.AidApplications)">
            <summary>
            Create (POST) a new aid applications record
            </summary>
            <param name="aidApplications">DTO of the new aid applications</param>
            <returns>AidApplications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController.PutAidApplicationsAsync(System.String,Ellucian.Colleague.Dtos.FinancialAid.AidApplications)">
            <summary>
            Update (PUT) an existing aid applications record
            </summary>
            <param name="id">Id of the aid applications to update</param>
            <param name="aidApplications">DTO of the updated aid applications</param>
            <returns>A AidApplications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.AidApplications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AidApplicationsController.DeleteAidApplicationsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing aid applications
            </summary>
            <param name="id">Id of the aid applications to update</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AverageAwardPackagesController">
            <summary>
            Exposes the AverageAwardPackage data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AverageAwardPackagesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IAverageAwardPackageService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the AverageAwardPackageController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="averageAwardPackageService">averageAwardPackageService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AverageAwardPackagesController.GetAverageAwardPackagesAsync(System.String)">
            <summary>
            Get the list of award package averages for the predefined award categories.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The studentId for which to get the award package data</param>
            <returns>A list of average award packages that apply to the student</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardCategoriesController">
            <summary>
            Exposes access to Financial Aid Award Categories data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardCategoriesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AwardCategoriesController constructor
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidReferenceDataRepository">FinancialAidReferenceDataRepository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardCategoriesController.GetAwardCategories">
            <summary>
            Get a list of all Financial Aid Award Categories
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of AwardCategories</returns>
            <note>AwardCategory is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardCategoriesController.GetAwardCategories2Async">
            <summary>
            Get a list of all Financial Aid Award Category2 DTOs
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of AwardCategory2 DTOs</returns>
            <note>AwardCategory is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLetterConfigurationsController">
            <summary>
            Provides access to award letter configurations data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLetterConfigurationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AwardLetterConfigurationsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="financialAidReferenceDataRepository">Financial Aid Reference Data Repository of type <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository">IFinancialAidReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLetterConfigurationsController.GetAwardLetterConfigurationsAsync">
            <summary>
            Gets a list of AwardLetterConfiguration DTOs build from Colleague award letter parameter records
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>List of AwardLetterConfiguration DTOs</returns>
            <note>AwardLetterConfiguration is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController">
            <summary>
            AwardLettersController exposes actions to interact with AwardLetter resources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IAwardLetterService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            AwardLettersController constructor
            </summary>
            <param name="adapterRegistry"></param>
            <param name="awardLetterService"></param>
            <param name="logger"></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="webHostEnvironment"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetters(System.String)">
            <summary>
            Get award letters for a student across all the years a student has
            financial aid data.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The id of the student for whom to get award letters</param>
            <returns>A list of award-letter DTO objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetters2(System.String)">
            <summary>
            Get award letters for a student across all the years a student has
            financial aid data. Award letter objects might contain no awards if none found
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The id of the student for whom to get award letters</param>
            <returns>A list of award-letter DTO objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetter(System.String,System.String)">
            <summary>
            Get a student's award letter in JSON format for a single award year.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student for whom to retrieve an award letter</param>
            <param name="awardYear">The award year of the award letter to get</param>
            <returns>An AwardLetter DTO object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetter2(System.String,System.String)">
            <summary>
            Get a student's award letter in JSON format for a single award year. Award letter is returned even if no awards are
            associated with the letter
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student for whom to retrieve an award letter</param>
            <param name="awardYear">The award year of the award letter to get</param>
            <returns>An AwardLetter DTO object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetterReport(System.String,System.String)">
            <summary>
            Get a single award letter as a byte array representation of a PDF file for a student for a particular award year.  
            Client should indicate the header value - Accept: application/pdf.
            A suggested filename for the report is located in the ContentDisposition.Filename header 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The id of the student for whom to get an award letter</param>
            <param name="awardYear">The award year for which to get award letter data</param>
            <returns>An HttpResponseMessage containing byte array representing a PDF</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetterReport2(System.String,System.String)">
            <summary>
            Get a single award letter as a byte array representation of a PDF file for a student for a particular award year.
            An award letter object that is used to create the report might come back with no awards if
            none were found for the year.
            Client should indicate the header value - Accept: application/pdf.
            A suggested filename for the report is located in the ContentDisposition.Filename header 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The id of the student for whom to get an award letter</param>
            <param name="awardYear">The award year for which to get award letter data</param>
            <returns>An HttpResponseMessage containing byte array representing a PDF</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.UpdateAwardLetter(System.String,System.String,Ellucian.Colleague.Dtos.FinancialAid.AwardLetter)">
            <summary>
            Update a student's award letter. This update permits changes to the award letter's AcceptedDate
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">Student's Colleague PERSON id. Must match awardLetter's studentId</param>
            <param name="awardYear">AwardYear of award letter to update. Must match awardLetter's awardYear</param>
            <param name="awardLetter">AwardLetter DTO containing data which which to update the database</param>
            <returns>An updated AwardLetter DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetters3Async(System.String)">
            <summary>
            Get award letters for a student across all the years a student has
            financial aid data. Award letter objects might contain no awards if none found
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The id of the student for whom to get award letters</param>
            <returns>A list of award-letter DTO objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetter3Async(System.String,System.String)">
            <summary>
            Get a student's award letter in JSON format for a single award year. Award letter is returned even if no awards are
            associated with the letter
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student for whom to retrieve an award letter</param>
            <param name="awardYear">The award year of the award letter to get</param>
            <returns>An AwardLetter DTO object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetterReport3Async(System.String,System.String)">
            <summary>
            Get a single award letter as a byte array representation of a PDF file for a student for a particular award year.
            Client should indicate the header value - Accept: application/pdf.
            A suggested filename for the report is located in the ContentDisposition.Filename header 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">student id for whom to retrieve the report</param>        
            <param name="awardLetterId">id of the award letter history record</param>
            <returns>An HttpResponseMessage containing byte array representing a PDF</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.UpdateAwardLetter2Async(System.String,System.String,Ellucian.Colleague.Dtos.FinancialAid.AwardLetter2)">
            <summary>
            Update a student's award letter. This update permits changes to the award letter's AcceptedDate
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">Student's Colleague PERSON id. Must match awardLetter's studentId</param>
            <param name="awardYear">AwardYear of award letter to update. Must match awardLetter's awardYear</param>
            <param name="awardLetter">AwardLetter DTO containing data which which to update the database</param>
            <returns>An updated AwardLetter DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetters4Async(System.String)">
            <summary>
            Get award letters for a student across all the years a student has
            financial aid data. Award letter objects might contain no awards if none found
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The id of the student for whom to get award letters</param>
            <returns>A list of award-letter DTO objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetter4Async(System.String,System.String)">
            <summary>
            Get a student's award letter in JSON format for a single award year. Award letter is returned even if no awards are
            associated with the letter
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student for whom to retrieve an award letter</param>
            <param name="awardYear">The award year of the award letter to get</param>
            <returns>An AwardLetter3 DTO object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.GetAwardLetterReport4Async(System.String,System.String)">
            <summary>
            Get a single award letter as a byte array representation of a PDF file for a student for a particular award year.
            Client should indicate the header value - Accept: application/pdf.
            A suggested filename for the report is located in the ContentDisposition.Filename header 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">student id for whom to retrieve the report</param>        
            <param name="awardLetterId">id of the award letter history record</param>
            <returns>An HttpResponseMessage containing byte array representing a PDF</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardLettersController.UpdateAwardLetter3Async(System.String,System.String,Ellucian.Colleague.Dtos.FinancialAid.AwardLetter3)">
            <summary>
            Update a student's award letter. This update permits changes to the award letter's AcceptedDate
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">Student's Colleague PERSON id. Must match awardLetter's studentId</param>
            <param name="awardYear">AwardYear of award letter to update. Must match awardLetter's awardYear</param>
            <param name="awardLetter">AwardLetter3 DTO containing data which which to update the database</param>
            <returns>An updated AwardLetter3 DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPackageChangeRequestsController">
            <summary>
            Get and Create AwardPackageChangeRequest endpoints
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPackageChangeRequestsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.FinancialAid.Services.IAwardPackageChangeRequestService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for AwardPackageChangeRequestsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="logger">Logger</param>
            <param name="awardPackageChangeRequestService">AwardPackageChangeRequestService</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPackageChangeRequestsController.GetAwardPackageChangeRequestsAsync(System.String)">
            <summary>
            Get a list of AwardPackageChangeRequests assigned to the given student 
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The Colleague PERSON id for whom the AwardPackageChangeRequests apply</param>
            <returns>A list of AwardPackageChangeRequests</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPackageChangeRequestsController.GetAwardPackageChangeRequestAsync(System.String,System.String)">
            <summary>
            Get an AwardPackageChangeRequest with the given id that's assigned to the given studentId
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The Colleague PERSON id for whom the AwardPackageChangeRequest applies</param>
            <param name="requestId">The Id of the AwardPackageChangeRequest resource. Pending Change Request Ids are found in the StudentAward DTO</param>
            <returns>The requested AwardPackageChangeRequest</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPackageChangeRequestsController.PostAwardPackageChangeRequestAsync(System.String,Ellucian.Colleague.Dtos.FinancialAid.AwardPackageChangeRequest)">
            <summary>
            Create a new award package change request based on the data in the awardPackageChangeRequest object form the body of the request. 
            All AwardPeriodChangeRequests as part of the AwardPackageChangeRequest may not be created. Clients should inspect the Status property
            of each AwardPeriodChangeRequest in the response to verify that its status is Pending. If its status is RejectedBySystem, inspect
            the StatusReason to determine why the AwardPeriodChangeRequest was rejected.
            </summary>
            <accessComments>
            Users may create their own data only
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to create a change request</param>
            <param name="awardPackageChangeRequest">The AwardPackageChangeRequest object to create</param>
            <returns>HttpResponseMessage with Content of AwardPackageChangeRequest. When a change request record is successfully created, Status Code will be 201.</returns>
            <exception cref="!:HttpResponseException">400 - Some error occurred while creating the resource. See the error message for further details </exception>
            <exception cref="!:HttpResponseException">403 - You do not have the proper permission to create AwardPackageChangeRequests</exception>
            <exception cref="!:HttpResponseException">409 - An award package change request already exists for the awardYearId, studentId and awardId specified in the input AwardPackageChangeRequest object. 
            The location header in the response indicates the URL of the existing resource.</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPeriodsController">
            <summary>
            Controller exposes Colleague Financial Aid AwardPeriods resources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPeriodsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AwardPeriodController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository">IFinancialAidReferenceDataRepository</see></param>
            <param name="logger">Transaction logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardPeriodsController.GetAwardPeriods">
            <summary>
            Get all the AwardPeriods
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A set of AwardPeriod DTOs</returns> 
            <note>AwardPeriod is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardsController">
            <summary>
            Exposes access to Financial Aid Awards data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AwardsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="financialAidReferenceDataRepository">Financial Aid Reference Data Repository of type <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository">IFinancialAidReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardsController.GetAwards">
            <summary>
            Get a list of all Financial Aid Awards from Colleague
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of Award data objects</returns>
            <note>Award is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardsController.GetAwards2">
            <summary>
            Get a list of all Financial Aid Award2 DTOs from Colleague
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of Award data objects</returns>   
            <note>Award is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardsController.GetAwards3">
            <summary>
            Get a list of all Financial Aid Award3 DTOs from Colleague
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of Award data objects</returns>   
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardStatusesController">
            <summary>
            Controller exposes read-only access to Financial Aid AwardStatus data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AwardStatuses Controller constructor
            </summary>
            <param name="adapterRegistry">Adapter Registry</param>
            <param name="financialAidReferenceDataRepository">FinancialAid Reference Data Repository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardStatusesController.GetAwardStatuses">
            <summary>
            Get a list of all Financial Aid Award Status codes from Colleague
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of AwardStatus data objects</returns>
            <note>AwardStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardTypesController">
            <summary>
            Exposes access to Financial Aid Award Types data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AwardTypesController constructor
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidReferenceDataRepository">FinancialAidReferenceDataRepository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardTypesController.GetAwardTypes">
            <summary>
            Get a list of all Financial Aid Award Types
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of AwardType data objects</returns>
            <note>AwardType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardYearsController">
            <summary>
            Exposes access to Financial Aid Award Years data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardYearsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AwardYearsController constructor
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidReferenceDataRepository">FinancialAidReferenceDataRepository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.AwardYearsController.GetAwardYears">
            <summary>
            Get a list of all Financial Aid Years from Colleague
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of AwardYear data objects</returns>
            <note>AwardYear is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FafsaController">
            <summary>
            Exposes FAFSA data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FafsaController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IFafsaService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the FafsaController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="fafsaService">fafsaService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FafsaController.QueryFafsaByPostAsync(Ellucian.Colleague.Dtos.FinancialAid.FafsaQueryCriteria)">
            <summary>
            Retrieves many FAFSA objects at once using a FafsaQueryCriteria object. This endpoint gets the federally flagged FAFSA 
            object for each student/awardYear.
            </summary>
            <param name="criteria">criteria object including a comma delimited list of IDs from request body</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.Fafsa">Objects</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FafsaController.GetStudentFafsasAsync(System.String,System.Boolean)">
            <summary>
            Get a list of all FAFSAs for the given student id
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The Colleague PERSON id for whom to retrieve FAFSAs</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of FAFSA objects assigned to the student</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidApplicationsController">
            <summary>
            Provides access to FinancialAidApplications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidApplicationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IFinancialAidApplicationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidApplicationsController class.
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>   
            <param name="financialAidApplicationService">FinancialAidApplicationService</param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidApplicationsController.GetFinancialAidApplications(System.String)">
            <summary>
            Obsolete as of API version 1.7. Deprecated. Use FAFSA and ProfileApplication endpoints instead.
            Get a list of FinancialAidApplication objects for all years the student has application data in Colleague.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="studentId">The studentId for which to get the award data</param>
            <returns>A list of FinancialAidApplication DTOs</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidBudgetComponentsController">
            <summary>
            Exposes BudgetComponents data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidBudgetComponentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            BudgetComponents constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="financialAidReferenceDataRepository">Financial Aid Reference Data Repository of type <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository">IFinancialAidReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidBudgetComponentsController.GetBudgetComponents">
            <summary>
            Get all BudgetComponent objects for all Financial Aid award years
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A List of all Budget Components</returns>
            <note>BudgetComponent is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidChecklistItemsController">
            <summary>
            Exposes ChecklistItems data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidChecklistItemsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ChecklistItems constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="financialAidReferenceDataRepository">Financial Aid Reference Data Repository of type <see cref="T:Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository">IFinancialAidReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidChecklistItemsController.GetChecklistItems">
            <summary>
            Get all ChecklistItems objects that could potentially comprise a student's Financial Aid Checklist
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A List of all Checklist Items</returns>
            <note>ChecklistItem objects are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCounselorsController">
            <summary>
            Controller class for FinancialAidCounselors
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCounselorsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IFinancialAidCounselorService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for FinancialAidCounselorsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidCounselorService">FinancialAidCounselorService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCounselorsController.GetCounselor(System.String)">
            <summary>
            Get a FinancialAidCounselor object for the given counselorId
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <param name="counselorId">Colleague PERSON id of the counselor to get</param>
            <returns>FinancialAidCounselor object</returns>
            <exception cref="!:HttpResponseException">400, Thrown if the counselor id is null or empty, or if some unknown error occurs</exception>
            <exception cref="!:HttpResponseException">403, Thrown if the access to the counselor resource is forbidden</exception>
            <exception cref="!:HttpResponseException">404, Thrown if the counselor with the given id cannot be found or is not an active staff member</exception>
            <note>Staff Entity is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCounselorsController.QueryFinancialAidCounselorsAsync(Ellucian.Colleague.Dtos.FinancialAid.FinancialAidCounselorQueryCriteria)">
            <summary>
            Get FinancialAidCounselor DTOs list for given counselor ids.
            If a specified record is not found to be a valid staff type, that does not cause an exception, instead,
            item is not returned in a list
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <param name="criteria">Query criteria</param>
            <returns>List of FinancialAidCounselor DTOs</returns>
            <note>Staff is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCreditsController">
            <summary>
            The FinancialAidCreditsController returns a student's course credits for either all or active only FA years.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCreditsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IFinancialAidCreditsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the FinancialAidCreditsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidCreditsService">FinancialAidCreditsService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidCreditsController.GetFinancialAidCreditsAsync(System.String,System.Boolean)">
            <summary>
            Get all of a student's course credits and how they apply to FA for either all or active only FA years
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The studentId for which to get the course credits</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only, defaults to true</param>
            <returns>A list of AwardYearCredits DTOs</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidExplanationsController">
            <summary>
            FinancialAidExplanationsController provides access to 
            financial aid explanations data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidExplanationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            FinancialAidExplanationsController constructor
            </summary>
            <param name="adapterRegistry">adapter registry</param>
            <param name="financialAidReferenceDataRepository">financialAidReferenceDataRepository</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidExplanationsController.GetFinancialAidExplanationsAsync">
            <summary>
            Gets all financial aid explanations
            </summary>
            <accessComments>Any authenticated user can get these resources</accessComments>
            <returns>a list of FinancialAidExplanation DTOs</returns>
            <note>FinancialAidExplanation is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidLinksController">
            <summary>
            Links Controller is used to get links for the Financial Aid Homepage
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidLinksController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IFinancialAidReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Links Controller constructor
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidReferenceDataRepository">FinancialAidReferenceDataRepository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidLinksController.GetLinks">
            <summary>
            Get a list of all Financial Aid Links from Colleague
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A collection of Links</returns>
            <note>Financial-Aid-Links are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController">
            <summary>
            Exposes FinancialAidOffice and FinancialAidConfiguration Data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IFinancialAidOfficeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for FinancialAidOfficesController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidOfficeService">FinancialAidOfficeService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController.GetFinancialAidOffices3Async">
            <summary>
            Get a list of Financial Aid Offices and their year-based configurations
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A list of FinancialAidOffice3 objects</returns>
            <note>FinancialAidOffice3 is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController.GetFinancialAidOffices2">
            <summary>
            Get a list of Financial Aid Offices and their year-based configurations
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A list of FinancialAidOffice2 objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController.GetFinancialAidOffices2Async">
            <summary>
            Get a list of Financial Aid Offices and their year-based configurations
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A list of FinancialAidOffice objects</returns>
            <note>FinancialAidOffices is cached for 24 hours</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController.GetFinancialAidOffices">
            <summary>
            Get a list of Financial Aid Offices and their year-based configurations
            </summary>
            <accessComments>
            Any authenticated user can get these resources.
            </accessComments>
            <returns>A list of FinancialAidOffice objects</returns>
            <note>FinancialAidOffices are cached for 24 hours</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidOfficesController.GetFinancialAidOfficesAsync">
            <summary>
            Get a list of Financial Aid Offices and their year-based configurations
            </summary>
            <returns>A list of FinancialAidOffice objects</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidPersonController">
            <summary>
            FinancialAidPerson controller class that contains methods to work with
            financial aid persons data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidPersonController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IFinancialAidPersonService,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="financialAidPersonService"></param>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FinancialAidPersonController.QueryFinancialAidPersonsByPostAsync(Ellucian.Colleague.Dtos.FinancialAid.FinancialAidPersonQueryCriteria)">
            <summary>
            Searches for financial aid persons based on the specified criteria
            </summary>
            <accessComments>
            Users who have VIEW.STUDENT.INFORMATION permission can request other users' data.
            </accessComments>
            <param name="criteria"></param>
            <returns>Set of found(if any) Person DTOs</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController">
            <summary>
            Provides access to Funds Roster Data data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController.#ctor(Ellucian.Colleague.Coordination.FinancialAid.Services.IFundsRosterService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes a new instance of the FundsRosterController class.
            </summary>
            <param name="FundsRosterService">Funds Roster Data service<see cref="T:Ellucian.Colleague.Coordination.FinancialAid.Services.IFundsRosterService">IFundsRosterService</see></param>
            <param name="logger">Logger<see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>_fundsRostersService
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController.GetFundsRosterByIdAsync(System.String)">
            <summary>
            Read (GET) a FundsRoster using a Id
            </summary>
            <param name="id">Id to desired Funds Roster Data</param>
            <returns>A fundsRoster object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.FundsRoster"/> in EEDM format</returns>
            <accessComments>
            Authenticated users with VIEW.FUNDS.ROSTER can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController.GetFundsRosterAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all FundsRoster
            </summary>
            <returns>List of FundsRoster <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.FundsRoster"/> objects representing all Funds Roster Data</returns>
            <accessComments>
            Authenticated users with VIEW.FUNDS.ROSTER can query.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController.PostFundsRosterAsync(Ellucian.Colleague.Dtos.FinancialAid.FundsRoster)">
            <summary>
            Create (POST) a new fund roster record
            </summary>
            <param name="fundsRoster">DTO of the new fund roster record</param>
            <returns>FundsRoster object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.FundsRoster"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController.PutFundsRosterAsync(System.String,Ellucian.Colleague.Dtos.FinancialAid.FundsRoster)">
            <summary>
            Update (PUT) an existing fund roster record
            </summary>
            <param name="id">Id of the fund roster to update</param>
            <param name="fundsRoster">DTO of the updated funds roster</param>
            <returns>A FundsRoster object <see cref="T:Ellucian.Colleague.Dtos.FinancialAid.FundsRoster"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.FundsRosterController.DeleteFundsRosterAsync(System.String)">
            <summary>
            Delete (DELETE) an existing funds roster
            </summary>
            <param name="id">Id of the fund roster to update</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.IpedsInstitutionsController">
            <summary>
            Exposes IpedsInstitution data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.IpedsInstitutionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.FinancialAid.Repositories.IIpedsInstitutionRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiates a new instance of the IpedsInstitutionsController class.
            </summary>
            <param name="adapterRegistry">Adapter Registry</param>
            <param name="ipedsInstitutionRepository">IpedsInstitutionRepository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.IpedsInstitutionsController.QueryByPostIpedsInstitutionsByOpeIdAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Query by post method used to get IpedsInstitution objects for the given OPE (Office of Postsecondary Education) Ids
            </summary>
            <accessComments>
            Any authenticated user can get these resources.
            </accessComments>
            <param name="opeIds">List of OPE Ids</param>
            <returns>The requested IpedsInstitution DTOs</returns>
            <note>IpedsInstitutions are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.LoanRequestsController">
            <summary>
            LoanRequests Controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.LoanRequestsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.ILoanRequestService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiate a new LoanRequestController object
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="loanRequestService">LoanRequestService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.LoanRequestsController.GetLoanRequestAsync(System.String)">
            <summary>
            Get a LoanRequest object with the specified Id. A LoanRequest id can be found in a StudentAwardYear DTO
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="id">The id of the loan request</param>
            <returns>A LoanRequest DTO with the specified id</returns>
            <exception cref="!:HttpResponseException">400, Thrown if no id is specified, if the server is unable to create the 
            LoanRequest object due to data corruption, or if some other unknown error occurs.</exception>
            <exception cref="!:HttpResponseException">403, Thrown if the current user does not have permission to access the requested LoanRequest resource</exception>
            <exception cref="!:HttpResponseException">404, Thrown if the requested resource cannot be found or does not exist</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.LoanRequestsController.CreateLoanRequestAsync(Ellucian.Colleague.Dtos.FinancialAid.LoanRequest)">
            <summary>
            Create a new pending LoanRequest resource based on the data in the loanRequest argument. Only one pending LoanRequest resource can exist for
            a StudentId and AwardYear.
            </summary>
            
            <accessComments>
            Users may request changes to their own data only
            </accessComments>
            <param name="loanRequest">LoanRequest object containing data with which to create a LoanRequest resource. 
            StudentId, AwardYear and TotalRequestAmount are required, and TotalRequestAmount must be greater than zero</param>
            <returns>HttpResponseMessage containing the new LoanRequest object and a header value that specifies the Location 
            of the new LoanRequest resource. HttpStatusCode is 201 - Created</returns>
            <exception cref="!:HttpResponseException">400, Thrown if the loanRequest argument is null, if the required argument properties are invalid,
            if the resource's current state prevents the LoanRequest from being created, if an data error was encountered during object creation, or
            if some unknown error occurred</exception>
            <exception cref="!:HttpResponseException">403, Thrown if the Current user does not have permission to create the LoanRequest resource</exception>
            <exception cref="!:HttpResponseException">409, Thrown if a LoanRequest resource already exists for the requested new LoanRequest, or if a
            conflicting record lock exists on the server</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.OutsideAwardsController">
            <summary>
            OutsideAwardsController 
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.OutsideAwardsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IOutsideAwardsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Instantiate a new OutsideAwardsController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="outsideAwardsService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.OutsideAwardsController.CreateOutsideAwardAsync(Ellucian.Colleague.Dtos.FinancialAid.OutsideAward)">
            <summary>
            Creates outside award record self-reported by students 
            </summary>
            <accessComments>
            Users may make changes to their own data only"
            </accessComments>
            <param name="outsideAward"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.OutsideAwardsController.GetOutsideAwardsAsync(System.String,System.String)">
            <summary>
            Gets all outside awards for the specified student id and award year code
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">student id for whom to retrieve the outside awards</param>
            <param name="year">award year code</param>
            <returns>List of OutsideAward DTOs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.OutsideAwardsController.DeleteOutsideAwardAsync(System.String,System.String)">
            <summary>
            Deletes outside award record with specified record id
            </summary>
            <accessComments>
            Users may make changes to their own data only"
            </accessComments>
            <param name="studentId">student id</param>
            <param name="id">record id</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.OutsideAwardsController.UpdateOutsideAwardAsync(Ellucian.Colleague.Dtos.FinancialAid.OutsideAward)">
            <summary>
            Updates an Outside Award from student entered information.
            An Outside Award is defined as an award not given to the student thru the Financial Aid office.
            </summary>
            <accessComments>
            Users may make changes to their own data only"
            </accessComments>
            <param name="outsideAward">Outside Award Entity</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.ProfileApplicationsController">
            <summary>
            Exposes student-specific PROFILE Application data 
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.ProfileApplicationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IProfileApplicationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for ProfileApplicationsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="profileApplicationService">ProfileApplicationService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.ProfileApplicationsController.GetProfileApplicationsAsync(System.String,System.Boolean)">
            <summary>
            Get a student's profile applications for all award years
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student for whom to get ProfileApplications</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of the given student's profile applications for all award years</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.ShoppingSheetsController">
            <summary>
            Exposes access to Student-specific Financial Aid Shopping Sheet data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.ShoppingSheetsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IShoppingSheetService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Dependency Injection constructor for ShoppingSheetsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="shoppingSheetService">ShoppingSheetService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.ShoppingSheetsController.GetShoppingSheetsAsync(System.String,System.Boolean)">
            <summary>
            Get all shopping sheet resources for the given student
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to get shopping sheets</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of all shopping sheets for the given student</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.ShoppingSheetsController.GetShoppingSheets2Async(System.String,System.Boolean)">
            <summary>
            Get all shopping sheet resources for the given student
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId"></param>
            <param name="getActiveYearsOnly"></param>
            <returns>A list of all shopping sheets for the given student</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.ShoppingSheetsController.GetShoppingSheets3Async(System.String,System.Boolean)">
            <summary>
            Get all shopping sheet resources for the given student
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId"></param>
            <param name="getActiveYearsOnly"></param>
            <returns>A list of all shopping sheets for the given student</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController">
            <summary>
            The StudentAwardsController exposes a student's award data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentAwardService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the StudentAwardsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="studentAwardService">StudentAwardService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.GetStudentAwardsAsync(System.String,System.Boolean)">
            <summary>
            Get all of a student's awards for all years the student has award data in Colleague.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The studentId for which to get the award data</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of StudentAward DTOs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.GetStudentAwardsAsync(System.String,System.String,System.Boolean)">
            <summary>
            Get all of a student's awards for the given year.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The student id for which to get award data</param>
            <param name="year">The award year for which to get award data</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of StudentAward Dtos for the given year</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.GetStudentAwardAsync(System.String,System.String,System.String)">
            <summary>
            Get a single StudentAward object based on the given student id, year and award id.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The student id for which to get award data</param>
            <param name="year">The award year for which to get award data</param>
            <param name="awardId">The award id for which to get award data</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.PutStudentAwardPackageAsync(System.String,System.String,Ellucian.Colleague.Dtos.FinancialAid.StudentAwardPackage,System.Boolean)">
            <summary>
            Update the awards contained in the StudentAwardPackage resource. The StudentAwards contained
            in the body of the request must match the resource identifiers in the URL. This performs an all or nothing update. 
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student to whom the award belongs</param>
            <param name="year">The AwardYear for which the studentAward applies</param>
            <param name="studentAwardPackage">The StudentAwardPackage containing StudentAward data to update</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A StudentAwardPackage containing the updated awards </returns>
            <exception cref="!:HttpResponseException">400 - Thrown if the update cannot complete successfully, usually because of bad or mismatched data in the request body</exception>
            <exception cref="!:HttpResponseException">403 - Thrown if the current user does not have permission to update the StudentAwardPackage resource</exception>
            <exception cref="!:HttpResponseException">404 - Thrown if any part of the StudentAwardPackage, award year, award, award period, etc. does not exist</exception>
            <exception cref="!:HttpResponseException">409 - Thrown if the any of the requested changes require review by a Financial Aid counselor or if a pending change request already exists for some or part of the package.
            Use the AwardPackageChangeRequest resource to submit change requests</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.PutStudentAwardAsync(System.String,System.String,System.String,Ellucian.Colleague.Dtos.FinancialAid.StudentAward)">
            <summary>
            Update a single student award resource. The StudentAward resource in the body of the request
            must match the resource identifiers in the URL
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">Colleague PERSON id of the student to whom the award belongs</param>
            <param name="year">The AwardYear for which the studentAward applies</param>
            <param name="awardId">The Id of the Award to which the studentAward applies</param>
            <param name="studentAward">The StudentAward containing data to update</param>
            <returns>An updated StudentAward</returns>
            <exception cref="!:HttpResponseException">400 - Thrown if the update cannot complete successfully, usually because of bad or mismatched data in the request body</exception>
            <exception cref="!:HttpResponseException">403 - Thrown if the current user does not have permission to update the StudentAward resource</exception>
            <exception cref="!:HttpResponseException">404 - Thrown if any part of the StudentAward, award year, award, award period, etc. does not exist</exception>
            <exception cref="!:HttpResponseException">409 - Thrown if the requested changes require review by a Financial Aid counselor. Use the AwardPackageChangeRequest endpoints to interact with change requests</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.PostStudentAwards(System.String,System.String,System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.FinancialAid.StudentAward})">
            <summary>
            "Obsolete as of version 1.7. Instead, use PUT students/{studentId}/awards/{year}"
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">The student id from the URI - All of the studentAward objects must match this student id</param>
            <param name="year">The award year from the URI - All of the studentAward objects must match this award year</param>
            <param name="studentAwards">The list studentAward objects for the given year to update</param>
            <returns>A list of updated studentAward objects for the given year</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.PostStudentAward(System.String,System.String,System.String,Ellucian.Colleague.Dtos.FinancialAid.StudentAward)">
            <summary>
            "Obsolete as of version 1.7. Instead, use PUT students/{studentId}/awards/{year}/{awardId}"
            </summary>
            
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">The student id - Must match the studentId in the StudentAward parameter object</param>
            <param name="year">The award year - Must match the AwardYear in the StudentAward parameter object</param>
            <param name="awardId">The award id - Must match the AwardId in the StudentAward parameter object</param>
            <param name="studentAward">The StudentAward object that will be used to update Colleague</param>
            <returns>A StudentAward object containing updated data from Colleague</returns>
            <exception cref="!:HttpResponseException">Thrown if studentAward is null</exception>
            <exception cref="!:HttpResponseException">Thrown if studentId, year or awardId args do not match the equivalent StudentAward's attributes</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardsController.QueryStudentAwardSummary(Ellucian.Colleague.Dtos.FinancialAid.StudentAwardSummaryQueryCriteria)">
            <summary>
            Query all of a student's awards for the given year.
            </summary>
            <accessComment>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComment>
            <param name="criteria">DTO containing Student Ids, Award Year, and Term. StudentId is required, and either an award year or an award term is required.</param>
            <returns>A list of StudentAward Dtos for the given year</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController">
            <summary>
            The StudentAwardYearsController exposes a student's financial aid years
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentAwardYearService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Dependency Injection constructor for StudentAwardYearsController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="studentAwardYearService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.GetStudentAwardYears(System.String)">
            <summary>
            Get all of a student's financial aid years.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have 
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The Id of the student for whom to get award years</param>
            <returns>A list of StudentAwardYear objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.GetStudentAwardYears2Async(System.String,System.Boolean)">
            <summary>
            Get all of a student's financial aid years.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have 
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">The Id of the student for whom to get award years</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of StudentAwardYear2 objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.GetStudentAwardYear(System.String,System.String)">
            <summary>
            Get the specified financial aid award year for the student
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have 
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">student id for whom to get award year data</param>
            <param name="awardYear">award year code for which to retrieve award year data</param>
            <returns>StudentAwardYear object</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId or awardYearCode argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.GetStudentAwardYear2Async(System.String,System.String,System.Boolean)">
            <summary>
            Get the specified financial aid award year for the student
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have 
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions
            can request other users' data
            </accessComments>
            <param name="studentId">student id for whom to get award year data</param>
            <param name="awardYear">award year code for which to retrieve award year data</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>StudentAwardYear2 object</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId or awardYearCode argument is null or empty</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.UpdateStudentAwardYear(System.String,Ellucian.Colleague.Dtos.FinancialAid.StudentAwardYear)">
            <summary>
            Updates the student award year. Currently only the IsPaperCopyOptionSelected property is updated
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">student id</param>
            <param name="studentAwardYear">student award year carrying the info</param>
            <returns>student award year</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentAwardYearsController.UpdateStudentAwardYear2Async(System.String,Ellucian.Colleague.Dtos.Student.StudentAwardYear2)">
            <summary>
            Updates the student award year. Currently only the IsPaperCopyOptionSelected property is updated
            </summary>
            <accessComments>
            Users may make changes to their own data only
            </accessComments>
            <param name="studentId">student id</param>
            <param name="studentAwardYear">student award year carrying the info</param>
            <returns>StudentAwardYear2 object</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentDefaultAwardPeriodController">
            <summary>
            Controller for StudentDefaultAwardPeriod
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentDefaultAwardPeriodController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentDefaultAwardPeriodService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Dependency Injection constructor for StudentDefaultAwardPeriodController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="studentDefaultAwardPeriodService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentDefaultAwardPeriodController.GetStudentDefaultAwardPeriodsAsync(System.String)">
            <summary>
            Call service to get the default award periods
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">student id for whom to retrieve default award periods</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentDocumentsController">
            <summary>
            The StudentDocumentsController exposes a student's financial aid documents
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentDocumentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentDocumentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Dependency Injection constructor for StudentDocumentsController
            </summary>
            <param name="adapterRegistry"></param>
            <param name="studentDocumentService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentDocumentsController.GetStudentDocumentsAsync(System.String)">
            <summary>
            Get all of a student's financial aid documents across all award years.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">The Id of the student for whom to get documents</param>
            <returns>A list of StudentDocument objects</returns>
            <exception cref="!:HttpResponseException">Thrown if the studentId argument is null or empty</exception> 
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidBudgetComponentsController">
            <summary>
            Exposes Financial Aid Budget Components assigned to students
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidBudgetComponentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentBudgetComponentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            StudentBudgetComponentsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentBudgetComponentService">StudentBudgetComponentService</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidBudgetComponentsController.GetStudentFinancialAidBudgetComponentsAsync(System.String,System.Boolean)">
            <summary>
            Get a student's Financial Aid Budget Components for all award years.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to get budget components</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of StudentBudgetComponent DTOs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidBudgetComponentsController.GetStudentFinancialAidBudgetComponentsForYearAsync(System.String,System.String)">
            <summary>
            Get a student's Financial Aid Budget Components for the specified award year
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to get budget components</param>
            <param name="awardYear">award year to retrieve budget components for</param>
            <returns>A list of StudentBudgetComponent DTOs</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController">
            <summary>
            Exposes Student FA Checklist Items
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentChecklistService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            StudentChecklistItemController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentChecklistService">studentChecklistService</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.CreateStudentFinancialAidChecklistAsync(System.String,System.String,System.Boolean)">
            <summary>
            Create a student's Financial Aid Checklist for the specified award year. 
            </summary>
            <accessComments>
            Users may make changes to create their own data.
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to create a checklist</param>
            <param name="year">The year for which to create a checklist</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>An HttpResponseMessage with the Location header that specifies URL of the created resource, and the Content property of the object set to the created checklist</returns>
            <exception cref="!:HttpResponseException">400: Thrown if either of the arguments are null or empty, or some other error occurred while creating the checklist</exception>
            <exception cref="!:HttpResponseException">403: Thrown if you don't have permission to create a checklist for the specified student</exception>
            <exception cref="!:HttpResponseException">409: Thrown if a Checklist already exists for this student and year. The Location header specifies the URL to get the existing resource.</exception>"
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.GetStudentFinancialAidChecklistAsync(System.String,System.String,System.Boolean)">
            <summary>
            Get a student's Financial Aid Checklist for a given year.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to get the checklist</param>
            <param name="year">The year for which to get the checklist</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A StudentFinancialAidChecklist DTO</returns>
            <exception cref="!:HttpResponseException">403: Thrown if you don't have permission to get a checklist for the specified student</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.GetAllStudentFinancialAidChecklistsAsync(System.String,System.Boolean)">
            <summary>
            Get a student's Financial Aid Checklists for all award years.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">The Colleague PERSON id of the student for whom to get checklist items</param>
            <param name="getActiveYearsOnly">flag indicating whether to get active award years data only</param>
            <returns>A list of StudentFinancialAidChecklist DTOs</returns>
            <exception cref="!:HttpResponseException">403: Thrown if you don't have permission to get checklists for the specified student</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.GetFaProfileAsync(System.String,System.String)">
            <summary>
            Gets a parent's profile for PLUS MPNs
            </summary>
            <accessComments>
            Students can only access the profile of parents specifically assigned to their account on PREL
            Proxy users can only access the profiles of parents associated to students for whom they are proxies
            FA admin users with the VIEW.FINANCIAL.AID.INFORMATION permission code are able to access parent profiles
            </accessComments>
            <param name="parentId">The Colleague PERSON id of the parent for whom to get a PROFILE dto for</param>
            <param name="studentId">The Colleague PERSON id of the student for whom the parent relates to</param>
            <returns>A PROFILE dto for the parent ID</returns>  
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.GetHousingOption(System.String,System.String)">
            <summary>
            Retrieves a student's housing option for a given year
            </summary>
            <note>
            Uses the ST-VAL table FAFSA.HOUSING.CODES09 to translate the housing code
            </note>
            <remarks>
            The housing code is stored in the CS.ACYR record in field 78 (CS.HOUSING.CODE)
            </remarks>
            <param name="studentId">The Colleague PERSON ID to retrieve a housing option for</param>
            <param name="awardYear">The Financial Aid award year to retrieve a housing option for</param>
            <returns>A HousingOption object containing the year and housing code for the student</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentFinancialAidChecklistsController.SetHousingOption(System.String,System.String,System.String,System.String)">
            <summary>
            Sets a student's housing option for a given year
            </summary>
            <note>
            Uses the ST-VAL table FAFSA.HOUSING.CODES09 to translate the housing code
            </note>
            <remarks>
            The housing code is stored in the CS.ACYR record in field 78 (CS.HOUSING.CODE)
            </remarks>
            <param name="studentId">The Colleague PERSON ID to set the housing option for</param>
            <param name="awardYear">The Financial Aid award year to set the housing option for</param>
            <param name="housingOption">The housing option to set for the specified student/year</param>
            <param name="forceOption">Either Y/N, indicates to force an update to CS.HOUSING.CODE even if it is already populated. Otherwise, the value will only be set if it is currently null</param>
            <returns>A HousingOption object containing the year and housing code for the student, either updated with the new value or the current (unmodified) one</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentLoanLimitationsController">
            <summary>
            The StudentLoanLimitationsController exposes a student's loan limits, which describe the parameters within which a student can request changes to their loans.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentLoanLimitationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentLoanLimitationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Dependency Injection Constructor for StudentLoanLimitationsController
            </summary>
            <param name="adapterRegistry">AdapterRegistry object</param>
            <param name="studentLoanLimitationService">StudentLoanLimitationService object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentLoanLimitationsController.GetStudentLoanLimitationsAsync(System.String)">
            <summary>
            Returns a list of StudentLoanLimitation objects for all the years a student has award data.
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">Student id for whom to retrieve the loan limitations</param>
            <returns>A list of StudentLoanLimitation objects for all the years a student has award data.</returns>       
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentLoanSummaryController">
            <summary>
            Provide access to the StudentLoanSummary information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentLoanSummaryController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentLoanSummaryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for StudentLoanSummary
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="studentLoanSummaryService">StudentLoanSummaryRepository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentLoanSummaryController.GetStudentLoanSummaryAsync(System.String)">
            <summary>
            Get a student's loan summary data
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">Student's Colleague PERSON id</param>
            <returns>A StudentLoanSummary object</returns>       
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentNsldsInformationController">
            <summary>
            StudentNsldsInformationController class
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentNsldsInformationController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.FinancialAid.Services.IStudentNsldsInformationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="adapterRegistry">adapter registry</param>
            <param name="studentNsldsInformationService">student nslds information service</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FinancialAid.StudentNsldsInformationController.GetStudentNsldsInformationAsync(System.String)">
            <summary>
            Gets student NSLDS related information
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have
            VIEW.FINANCIAL.AID.INFORMATION permission or proxy permissions can request
            other users' data"
            </accessComments>
            <param name="studentId">student id for whom to retrieve nslds information</param>
            <returns>StudentNsldsInformation DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HomeController">
            <summary>
            Home controller. Matches all requests for /.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HomeController.#ctor(Ellucian.Web.Http.Configuration.ISettingsRepository,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Mvc.Session.SessionCookieManager,Microsoft.AspNetCore.Antiforgery.IAntiforgery)">
            <summary>
            Initializes a new instance of the HomeController class.
            </summary>
            <param name="settingsRepository">ISettingsRepository instance</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="sessionCookieManager"></param>
            <param name="antiforgery"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HomeController.Index">
            <summary>
            /index page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HomeController.NotSupportedRoute">
            <summary>
            This is the default route for anything coming in that doesn't match other patterns
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController">
            <summary>
            Provides access to Bargaining Units data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IBargainingUnitsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BargainingUnitsController class.
            </summary>
            <param name="bargainingUnitsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IBargainingUnitsService">IBargainingUnitsService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController.GetBargainingUnitsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 7</remarks>
            <summary>
            Retrieves all bargaining units.
            </summary>
            <returns>All BargainingUnit objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController.GetBargainingUnitByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 7</remarks>
            <summary>
            Retrieves a bargaining unit by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.BargainingUnit">BargainingUnit.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController.PutBargainingUnitAsync(Ellucian.Colleague.Dtos.BargainingUnit)">
            <summary>
            Updates a BargainingUnit.
            </summary>
            <param name="bargainingUnit"><see cref="!:BargainingUnit">BargainingUnit</see> to update</param>
            <returns>Newly updated <see cref="!:BargainingUnit">BargainingUnit</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController.PostBargainingUnitAsync(Ellucian.Colleague.Dtos.BargainingUnit)">
            <summary>
            Creates a BargainingUnit.
            </summary>
            <param name="bargainingUnit"><see cref="!:BargainingUnit">BargainingUnit</see> to create</param>
            <returns>Newly created <see cref="!:BargainingUnit">BargainingUnit</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BargainingUnitsController.DeleteBargainingUnitAsync(System.String)">
            <summary>
            Delete (DELETE) an existing BargainingUnit
            </summary>
            <param name="id">Id of the BargainingUnit to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController">
            <summary>
            Provides access to BeneficiaryPreferenceTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IBeneficiaryPreferenceTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BeneficiaryPreferenceTypesController class.
            </summary>
            <param name="beneficiaryPreferenceTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IBeneficiaryPreferenceTypesService">IBeneficiaryPreferenceTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController.GetBeneficiaryPreferenceTypesAsync">
            <summary>
            Return all beneficiaryPreferenceTypes
            </summary>
            <returns>List of BeneficiaryPreferenceTypes <see cref="T:Ellucian.Colleague.Dtos.BeneficiaryPreferenceTypes"/> objects representing matching beneficiaryPreferenceTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController.GetBeneficiaryPreferenceTypesByGuidAsync(System.String)">
            <summary>BeneficiaryPreferenceTypesController
            Read (GET) a beneficiaryPreferenceTypes using a GUID
            </summary>
            <param name="guid">GUID to desired beneficiaryPreferenceTypes</param>
            <returns>A beneficiaryPreferenceTypes object <see cref="T:Ellucian.Colleague.Dtos.BeneficiaryPreferenceTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController.PostBeneficiaryPreferenceTypesAsync(Ellucian.Colleague.Dtos.BeneficiaryPreferenceTypes)">
            <summary>
            Create (POST) a new beneficiaryPreferenceTypes
            </summary>
            <param name="beneficiaryPreferenceTypes">DTO of the new beneficiaryPreferenceTypes</param>
            <returns>A beneficiaryPreferenceTypes object <see cref="T:Ellucian.Colleague.Dtos.BeneficiaryPreferenceTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController.PutBeneficiaryPreferenceTypesAsync(System.String,Ellucian.Colleague.Dtos.BeneficiaryPreferenceTypes)">
            <summary>
            Update (PUT) an existing beneficiaryPreferenceTypes
            </summary>
            <param name="guid">GUID of the beneficiaryPreferenceTypes to update</param>
            <param name="beneficiaryPreferenceTypes">DTO of the updated beneficiaryPreferenceTypes</param>
            <returns>A beneficiaryPreferenceTypes object <see cref="T:Ellucian.Colleague.Dtos.BeneficiaryPreferenceTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BeneficiaryPreferenceTypesController.DeleteBeneficiaryPreferenceTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a beneficiaryPreferenceTypes
            </summary>
            <param name="guid">GUID to desired beneficiaryPreferenceTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentConfigurationController">
            <summary>
            Provides access to benefits enrollment configuration items
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentConfigurationController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IBenefitsEnrollmentConfigurationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="benefitsEnrollmentConfigurationService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentConfigurationController.GetBenefitsEnrollmentConfigurationAsync">
            <summary>
            Gets the configurations for benefits enrollment
            </summary>
            <returns>BenefitsEnrollmentConfiguration</returns>
            <accessComments>Any authenticated user can get this resource</accessComments>
            <note>BenefitsEnrollmentConfiguration is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController">
            <summary>
             BenefitsEnrollment controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IBenefitsEnrollmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BenefitsEnrollmentController class
            </summary>
            <param name="benefitsEnrollmentService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IBenefitsEnrollmentService">IBenefitsEnrollmentService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="hostEnvironment"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.GetEmployeeBenefitsEnrollmentEligibilityAsync(System.String)">
            <summary>
            Returns benefits enrollment eligibility for an employee
            </summary>
            <param name="employeeId">Id of employee to request benefits enrollment eligibility</param>
            <returns>EmployeeBenefitsEnrollmentEligibility dto containing the enrollment period if eligible or a reson for ineligibility.<see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentEligibility"></see> </returns>
            <accessComments>
            An authenticated user can view their own benefits enrollment eligibility.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.GetEmployeeBenefitsEnrollmentPoolAsync(System.String)">
            <summary>
            Returns benefits enrollment pool items (dependent and beneficiary information) for an employee
            </summary>
            <param name="employeeId">Id of employee to request benefits enrollment pool items</param>
            <returns>List of EmployeeBenefitsEnrollmentPoolItem dtos containing the dependent and beneficiary information for employee <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem"></see></returns>
            <accessComments>
            An authenticated user can view their own benefits enrollment pool items
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.GetEmployeeBenefitsEnrollmentPackageAsync(System.String,System.String)">
            <summary>
            Gets EmployeeBenefitsEnrollmentPackage object for the specified employee id
            </summary>
            <param name="employeeId">employee id for whom to get benefits enrollment package</param>
            <param name="enrollmentPeriodId">(optional) enrollment perod id</param>
            <accessComments>
            An authenticated user can view their own benefits enrollment package
            </accessComments>
            <returns>EmployeeBenefitsEnrollmentPackage DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.AddEmployeeBenefitsEnrollmentPoolAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem)">
            <summary>
            This endpoint will adds new benefits enrollment pool information to an employee
            </summary>
            <accessComments>
            Any authenticated user can add benefits enrollment pool information.     
            The endpoint will reject the add of benefits enrollment pool information if the employee does not have a valid permission.
            </accessComments>       
            <param name="employeeId">Required parameter to add benefits enrollment pool information to an employee</param>
            <param name="employeeBenefitsEnrollmentPoolItem"><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem">EmployeeBenefitsEnrollmentPoolItem DTO</see></param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem">Newly added EmployeeBenefitsEnrollmentPoolItem DTO object</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the employeeId or employeeBenefitsEnrollmentPoolItem are not present in the request or any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the employeeBenefitsEnrollmentPoolItem is not present in the request or any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to add benefits enrollment pool information.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.UpdateEmployeeBenefitsEnrollmentPoolAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem)">
            <summary>
            This endpoint will update benefits enrollment pool information of an employee
            </summary>
            <accessComments>
            Any authenticated user can update their own benefits enrollment pool information .     
            The endpoint will reject the updated benefits enrollment pool information if the employee does not have a valid permission.
            </accessComments>       
            <param name="employeeId">Required parameter to update benefits enrollment pool information of an employee</param>
            <param name="employeeBenefitsEnrollmentPoolItem"><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem">EmployeeBenefitsEnrollmentPoolItem DTO</see></param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentPoolItem">Updated EmployeeBenefitsEnrollmentPoolItem DTO object</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the employeeId, employeeBenefitsEnrollmentPoolItem or employeeBenefitsEnrollmentPoolItem.Id are not present in the request or any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to add benefits enrollment pool information.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.UpdateEmployeeBenefitsEnrollmentInfoAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentInfo)">
            <summary>
            This endpoint will update benefits enrollment information of an employee for the given benefit types specified
            </summary>
            <accessComments>
            Any authenticated user can update their own benefits enrollment information
            The endpoint will reject the updated benefits enrollment information if the employee does not have a valid permission
            </accessComments>    
            <param name="employeeId">Required parameter to update benefits enrollment information</param>
            <param name="employeeBenefitsEnrollmentInfo"><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentInfo">EmployeeBenefitsEnrollmentInfo DTO</see></param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentInfo">Updated EmployeeBenefitsEnrollmentInfo DTO object</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.QueryEnrollmentPeriodBenefitsAsync(Ellucian.Colleague.Dtos.HumanResources.BenefitEnrollmentBenefitsQueryCriteria)">
            <summary>
            Queries enrollment period benefits based on specified criteria
            </summary>
            <param name="criteria"></param>
            <accessComments>Any authenticated user can get enrollment period benefits information
            </accessComments>
            <returns>Set of enrollment period benefits</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.QueryEmployeeBenefitsEnrollmentInfoAsync(Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentInfoQueryCriteria)">
            <summary>
            Queries benefits enrollment information based on specified criteria; if no benefit type is provided, all of the employee's elected benefit information is returned
            </summary>
            <accessComments>
            Any authenticated user can view their own benefits enrollment information
            </accessComments>    
            <param name="criteria">Required parameter used to query employee benefits enrollment information</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefitsEnrollmentInfo">EmployeeBenefitsEnrollmentInfo DTO object</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.SubmitOrReOpenBenefitElectionsAsync(Ellucian.Colleague.Dtos.HumanResources.BenefitEnrollmentCompletionCriteria)">
            <summary>
            This end-point submits/re-opens the benefits elected by an employee.
            A boolean flag present in the input criteria object indicates whether to submit or re-open the benefit elections.
            </summary>
            <accessComments>
            Any authenticated user can submit/re-open their own elected benefits.      
            </accessComments>   
            <param name="criteria">BenefitEnrollmentCompletionCriteria object</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.BenefitEnrollmentCompletionInfo">BenefitEnrollmentCompletionInfo DTO</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the required parameters in the input object has no value (or) in case of any unexpected error while processing the request.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if a user tries to submit/re-open elected benefits of others.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.GetBeneficiaryCategoriesAsync">
            <summary>
            Gets the beneficiary categories/types
            </summary>
             <accessComments>
            Any authenticated user can retrieve beneficiary category information.
            </accessComments> 
            <returns>Returns a list of Beneficiary Category DTO objects</returns>
            <note>--Domain Entity-- is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.BenefitsEnrollmentController.GetBenefitsEnrollmentAcknowledgementReportAsync(System.String)">
            <summary>
            Get benefits enrollment acknowledgement report
            </summary>
            <accessComments>
            Any authenticated user can download benefits acknowledgement report.      
            </accessComments>  
            <param name="employeeId"></param>
            <returns>The pdf report of enrolled benefits information</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController">
            <summary>
            Provides access to ContractTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IContractTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ContractTypesController class.
            </summary>
            <param name="contractTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IContractTypesService">IContractTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController.GetContractTypesAsync">
            <summary>
            Return all contractTypes
            </summary>
            <returns>List of ContractTypes <see cref="T:Ellucian.Colleague.Dtos.ContractTypes"/> objects representing matching contractTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController.GetContractTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a contractTypes using a GUID
            </summary>
            <param name="guid">GUID to desired contractTypes</param>
            <returns>A contractTypes object <see cref="T:Ellucian.Colleague.Dtos.ContractTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController.PostContractTypesAsync(Ellucian.Colleague.Dtos.ContractTypes)">
            <summary>
            Create (POST) a new contractTypes
            </summary>
            <param name="contractTypes">DTO of the new contractTypes</param>
            <returns>A contractTypes object <see cref="T:Ellucian.Colleague.Dtos.ContractTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController.PutContractTypesAsync(System.String,Ellucian.Colleague.Dtos.ContractTypes)">
            <summary>
            Update (PUT) an existing contractTypes
            </summary>
            <param name="guid">GUID of the contractTypes to update</param>
            <param name="contractTypes">DTO of the updated contractTypes</param>
            <returns>A contractTypes object <see cref="T:Ellucian.Colleague.Dtos.ContractTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContractTypesController.DeleteContractTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a contractTypes
            </summary>
            <param name="guid">GUID to desired contractTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController">
            <summary>
            Provides access to ContributionPayrollDeductions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IContributionPayrollDeductionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ContributionPayrollDeductionsController class.
            </summary>
            <param name="contributionPayrollDeductionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IContributionPayrollDeductionsService">IContributionPayrollDeductionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController.GetContributionPayrollDeductionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all contributionPayrollDeductions
            </summary>
            <returns>List of ContributionPayrollDeductions <see cref="T:Ellucian.Colleague.Dtos.ContributionPayrollDeductions"/> objects representing matching contributionPayrollDeductions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController.GetContributionPayrollDeductionsByIdAsync(System.String)">
            <summary>
            Read (GET) a contributionPayrollDeductions using a GUID
            </summary>
            <param name="id">GUID to desired contributionPayrollDeductions</param>
            <returns>A contributionPayrollDeductions object <see cref="T:Ellucian.Colleague.Dtos.ContributionPayrollDeductions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController.PostContributionPayrollDeductionsAsync(Ellucian.Colleague.Dtos.ContributionPayrollDeductions)">
            <summary>
            Create (POST) a new contributionPayrollDeductions
            </summary>
            <param name="contributionPayrollDeductions">DTO of the new contributionPayrollDeductions</param>
            <returns>A contributionPayrollDeductions object <see cref="T:Ellucian.Colleague.Dtos.ContributionPayrollDeductions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController.PutContributionPayrollDeductionsAsync(System.String,Ellucian.Colleague.Dtos.ContributionPayrollDeductions)">
            <summary>
            Update (PUT) an existing contributionPayrollDeductions
            </summary>
            <param name="id">GUID of the contributionPayrollDeductions to update</param>
            <param name="contributionPayrollDeductions">DTO of the updated contributionPayrollDeductions</param>
            <returns>A contributionPayrollDeductions object <see cref="T:Ellucian.Colleague.Dtos.ContributionPayrollDeductions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ContributionPayrollDeductionsController.DeleteContributionPayrollDeductionsAsync(System.String)">
            <summary>
            Delete (DELETE) a contributionPayrollDeductions
            </summary>
            <param name="id">GUID to desired contributionPayrollDeductions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController">
            <summary>
            Provides access to CostCalculationMethods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.ICostCalculationMethodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CostCalculationMethodsController class.
            </summary>
            <param name="costCalculationMethodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.ICostCalculationMethodsService">ICostCalculationMethodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController.GetCostCalculationMethodsAsync">
            <summary>
            Return all costCalculationMethods
            </summary>
            <returns>List of CostCalculationMethods <see cref="T:Ellucian.Colleague.Dtos.CostCalculationMethods"/> objects representing matching costCalculationMethods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController.GetCostCalculationMethodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a costCalculationMethods using a GUID
            </summary>
            <param name="guid">GUID to desired costCalculationMethods</param>
            <returns>A costCalculationMethods object <see cref="T:Ellucian.Colleague.Dtos.CostCalculationMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController.PostCostCalculationMethodsAsync(Ellucian.Colleague.Dtos.CostCalculationMethods)">
            <summary>
            Create (POST) a new costCalculationMethods
            </summary>
            <param name="costCalculationMethods">DTO of the new costCalculationMethods</param>
            <returns>A costCalculationMethods object <see cref="T:Ellucian.Colleague.Dtos.CostCalculationMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController.PutCostCalculationMethodsAsync(System.String,Ellucian.Colleague.Dtos.CostCalculationMethods)">
            <summary>
            Update (PUT) an existing costCalculationMethods
            </summary>
            <param name="guid">GUID of the costCalculationMethods to update</param>
            <param name="costCalculationMethods">DTO of the updated costCalculationMethods</param>
            <returns>A costCalculationMethods object <see cref="T:Ellucian.Colleague.Dtos.CostCalculationMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CostCalculationMethodsController.DeleteCostCalculationMethodsAsync(System.String)">
            <summary>
            Delete (DELETE) a costCalculationMethods
            </summary>
            <param name="guid">GUID to desired costCalculationMethods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.CurrentBenefitsController">
            <summary>
             Provides access to Employee Compensation API(s)
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CurrentBenefitsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.ICurrentBenefitsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CurrentBenefitsController class.
            </summary>
            <param name="currentBenefitsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.ICurrentBenefitsService">ICurrentBenefitsService</see></param>
            <param name="logger">ILogger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.CurrentBenefitsController.GetEmployeeCurrentBenefitsAsync(System.String)">
            <summary>
            This end point returns Employee's Current Benefits.
            </summary>
            <param name="effectivePersonId">Optional parameter for effective personId.</param>
            <returns>Employee Benefits DTO containing Employee's current benefits details (benefits, coverage, cost, dependants, healthproviders etc).<see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeBenefits"></see> </returns>
            <accessComments>
            Any authenticated user can view their own current benefits details.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController">
            <summary>
            Provides access to DeductionCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IDeductionCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the DeductionCategoriesController class.
            </summary>
            <param name="deductionCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IDeductionCategoriesService">IDeductionCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController.GetDeductionCategoriesAsync">
            <summary>
            Return all deductionCategories
            </summary>
            <returns>List of DeductionCategories <see cref="T:Ellucian.Colleague.Dtos.DeductionCategories"/> objects representing matching deductionCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController.GetDeductionCategoriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a deductionCategories using a GUID
            </summary>
            <param name="guid">GUID to desired deductionCategories</param>
            <returns>A deductionCategories object <see cref="T:Ellucian.Colleague.Dtos.DeductionCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController.PostDeductionCategoriesAsync(Ellucian.Colleague.Dtos.DeductionCategories)">
            <summary>
            Create (POST) a new deductionCategories
            </summary>
            <param name="deductionCategories">DTO of the new deductionCategories</param>
            <returns>A deductionCategories object <see cref="T:Ellucian.Colleague.Dtos.DeductionCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController.PutDeductionCategoriesAsync(System.String,Ellucian.Colleague.Dtos.DeductionCategories)">
            <summary>
            Update (PUT) an existing deductionCategories
            </summary>
            <param name="guid">GUID of the deductionCategories to update</param>
            <param name="deductionCategories">DTO of the updated deductionCategories</param>
            <returns>A deductionCategories object <see cref="T:Ellucian.Colleague.Dtos.DeductionCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionCategoriesController.DeleteDeductionCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a deductionCategories
            </summary>
            <param name="guid">GUID to desired deductionCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController">
            <summary>
            Exposes deduction types data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IDeductionTypesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ..ctor
            </summary>
            <param name="logger"></param>
            <param name="deductionTypesService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.GetAllDeductionTypesAsync">
            <summary>
            Returns all deduction types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.GetAllDeductionTypes2Async">
            <summary>
            Returns all deduction types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.GetDeductionTypeById2Async(System.String)">
            <summary>
            Returns a deduction type.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.GetDeductionTypeByIdAsync(System.String)">
            <summary>
            Returns a deduction type.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.PutDeductionTypeAsync(Ellucian.Colleague.Dtos.DeductionType)">
            <summary>
            PutDeductionTypeAsync
            </summary>
            <param name="deductionType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.PutDeductionType2Async(Ellucian.Colleague.Dtos.DeductionType2)">
            <summary>
            PutDeductionTypeAsync
            </summary>
            <param name="deductionType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.PostDeductionTypeAsync(Ellucian.Colleague.Dtos.DeductionType)">
            <summary>
            PostDeductionTypeAsync
            </summary>
            <param name="deductionType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.PostDeductionType2Async(Ellucian.Colleague.Dtos.DeductionType2)">
            <summary>
            PostDeductionTypeAsync
            </summary>
            <param name="deductionType"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DeductionTypesController.DeleteDeductionTypeAsync(System.String)">
            <summary>
            DeleteDeductionTypeAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.DirectDepositsController">
            <summary>
            These routes are obsolete as of API 1.16 for security reasons. Use PayrollDepositDirective routes instead
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DirectDepositsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            DirectDepositsController constructor
            </summary>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DirectDepositsController.GetDirectDepositsAsync(System.String)">
            <summary>
            This route is obsolete and moved permanantly to GetPayrollDepositDirectivesAsync for security reasons
            </summary>
            <param name="employeeId">Employee Id</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.DirectDepositsController.UpdateDirectDepositsAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.DirectDeposits)">
            <summary>
            This route is obsolete and moved permanantly to UpdatePayrollDepositDirectivesAsync for security reasons
            </summary>
            <param name="employeeId">Employee Id</param>
            <param name="updatedDirectDeposits">DirectDeposits object</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EarningsTypeGroupsController">
            <summary>
            Controller exposes actions to interact with EarningsTypeGroups
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningsTypeGroupsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.HumanResources.Repositories.IHumanResourcesReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="adapterRegistry"></param>
            <param name="referenceDataRepository"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningsTypeGroupsController.GetEarningsTypeGroupsAsync">
            <summary>
            Get all EarningsTypeGroups. This endpoint is used in SelfService
            </summary>
            <accessComments>
            Any authenticated user can view EarningsTypeGroups
            </accessComments>
            <returns>A list of all EarningsTypeGroups</returns>
            <note>EarningsTypeGroups are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController">
            <summary>
            Expose Human Resources Earnings Types data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.HumanResources.Repositories.IEarningsTypeRepository,Ellucian.Colleague.Coordination.HumanResources.Services.IEarningTypesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            EarningsTypesController constructor
            </summary>
            <param name="logger"></param>
            <param name="adapterRegistry"></param>
            <param name="earningsTypeRepository"></param>
            <param name="earningTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEarningTypesService">IEarningTypesService</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.GetEarningsTypesAsync">
            <summary>
            Gets a list of earnings types. An earnings type is an identifier for wages or leave associated with an employment position.   
            The returned list should contain all active and inactive earn types available for an institution
            </summary>
            <returns>A List of earnings type objects</returns>
            <note>EarningsTypes are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.GetEarningTypesAsync">
            <summary>
            Return all earningTypes
            </summary>
            <returns>List of EarningTypes <see cref="T:Ellucian.Colleague.Dtos.EarningTypes"/> objects representing matching earningTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.GetEarningTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a earningTypes using a GUID
            </summary>
            <param name="guid">GUID to desired earningTypes</param>
            <returns>A earningTypes object <see cref="T:Ellucian.Colleague.Dtos.EarningTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.PostEarningTypesAsync(Ellucian.Colleague.Dtos.EarningTypes)">
            <summary>
            Create (POST) a new earningTypes
            </summary>
            <param name="earningTypes">DTO of the new earningTypes</param>
            <returns>A earningTypes object <see cref="T:Ellucian.Colleague.Dtos.EarningTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.PutEarningTypesAsync(System.String,Ellucian.Colleague.Dtos.EarningTypes)">
            <summary>
            Update (PUT) an existing earningTypes
            </summary>
            <param name="guid">GUID of the earningTypes to update</param>
            <param name="earningTypes">DTO of the updated earningTypes</param>
            <returns>A earningTypes object <see cref="T:Ellucian.Colleague.Dtos.EarningTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EarningTypesController.DeleteEarningTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a earningTypes
            </summary>
            <param name="guid">GUID to desired earningTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeCompensationController">
            <summary>
             Provides access to Employee Compensation API(s)
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeCompensationController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeCompensationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmployeeCompensationController class.
            </summary>
            <param name="employeeCompensationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeCompensationService">IEmployeeCompensationService</see></param>
            <param name="logger">IEmployeeCompensationService</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeCompensationController.GetEmployeeCompensationAsync(System.String,System.Nullable{System.Decimal})">
            <summary>
            Returns Employee Compensation Details 
            </summary>
            <param name="effectivePersonId">EmployeeId of a user used for retrieving compensation details </param>
            <param name="salaryAmount">Estimated Annual Salary amount
            If this value is provided,it will be used in computing compensation details in Total Compensation Colleague Transaction.
            When not provided, the salary amount will be computed in Total Compensation Colleague Transaction
            </param>
            <returns>Employee Compensation DTO containing Compensation Details(Benefit-Deductions,Taxes and Stipends).<see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeCompensation"></see> </returns>
            <accessComments>
            Any authenticated user can
            1) view their own compensation information; 
            2) view other employee's compensation information upon having admin access (i.e. VIEW.ALL.TOTAL.COMPENSATION permission)
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController">
            <summary>
            Provides access to EmployeeLeavePlans
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeLeavePlansService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmployeeLeavePlansController class.
            </summary>
            <param name="employeeLeavePlansService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeLeavePlansService">IEmployeeLeavePlansService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.GetEmployeeLeavePlansAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all employeeLeavePlans for EEDM
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of EmployeeLeavePlans <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeavePlans"/> objects representing matching employeeLeavePlans</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.GetEmployeeLeavePlansV2Async(System.String)">
            <summary>
            Returns all EmployeeLeavePlan objects that you have permission to access. As an employeee, you will have access to only your leave plans.
            As a supervisor (or the proxy of a supervisor), you will have access to the leave plans of your (or your proxy's) direct reports.
            As a leave approver, you have access to the leave plans of the employees whose leave requests you handle.
            This is used by Self Service.
            </summary>
            <param name="effectivePersonId">Optional parameter for passing the effective person id in a proxy scenario</param>
            <accessComments>
            1. As an employee you have access to your own leave plans.
            2. As a supervisor with the APPROVE.REJECT.TIME.ENTRY permission, you have access to your own leave plans and your supervisees' leave plans.
            3. As the proxy of a supervisor, you have access to that supervisor's leave plans and that supervisor's supervisees' leave plans.
            4. As an admin, you have access to anyone's leave plans.
            5. As a leave approver with the APPROVE.REJECT.LEAVE.REQUEST permission, you have access to the leave plans of the employees whose leave requests you handle.
            </accessComments>
            <returns>A collection of EmployeeLeavePlan objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.GetEmployeeLeavePlansV3Async(System.String)">
            <summary>
            Returns all EmployeeLeavePlan objects that you have permission to access. As an employeee, you will have access to only your leave plans.
            As a supervisor (or the proxy of a supervisor), you will have access to the leave plans of your (or your proxy's) direct reports.
            As a leave approver, you have access to the leave plans of the employees whose leave requests you handle.
            This is used by Self Service.
            </summary>
            <param name="effectivePersonId">Optional parameter for passing the effective person id in a proxy scenario</param>
            <accessComments>
            1. As an employee you have access to your own leave plans.
            2. As the proxy of a supervisor, you have access to that supervisor's leave plans and that supervisor's supervisees' leave plans.
            3. As an admin, you have access to anyone's leave plans.
            4. As a leave approver with the APPROVE.REJECT.LEAVE.REQUEST permission, you have access to the leave plans of the employees whose leave requests you handle.
            </accessComments>
            <returns>A collection of EmployeeLeavePlan objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.QueryEmployeeLeavePlanAsync(Ellucian.Colleague.Dtos.HumanResources.EmployeeLeavePlanQueryCriteria)">
            <summary>
            Returns EmployeeLeavePlan objects based on criteria provided.
            
            The endpoint will not return the requested EmployeeTimeSummary if:
                1.  400 - criteria was not provided
                2.  403 - criteria contains Ids that do not have permission to get requested EmployeeLeavePlan
                3.  404 - EmployeeLeavePlan resources requested do not exist
            </summary>
            <param name="criteria">Criteria used to select EmployeeLeavePlan objects <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeLeavePlanQueryCriteria">.</see></param>
            <returns>A collection of <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeLeavePlan"> objects.</see></returns>
            <accessComments>
            When a supervisor Id is provided as part of the criteria, the authenticated user must have supervisory permissions
            or be a proxy for supervisor. If no supervisor Id is provided, only EmployeeLeavePlan objects for the authenticated user
            may be requested.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.GetEmployeeLeavePlansByGuidAsync(System.String)">
            <summary>
            Read (GET) a employeeLeavePlans using a GUID for EEDM
            </summary>
            <param name="guid">GUID to desired employeeLeavePlans</param>
            <returns>A employeeLeavePlans object <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeavePlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.PostEmployeeLeavePlansAsync(Ellucian.Colleague.Dtos.EmployeeLeavePlans)">
            <summary>
            Create (POST) a new employeeLeavePlans for EEDM
            </summary>
            <param name="employeeLeavePlans">DTO of the new employeeLeavePlans</param>
            <returns>A employeeLeavePlans object <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeavePlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.PutEmployeeLeavePlansAsync(System.String,Ellucian.Colleague.Dtos.EmployeeLeavePlans)">
            <summary>
            Update (PUT) an existing employeeLeavePlans for EEDM
            </summary>
            <param name="guid">GUID of the employeeLeavePlans to update</param>
            <param name="employeeLeavePlans">DTO of the updated employeeLeavePlans</param>
            <returns>A employeeLeavePlans object <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeavePlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeavePlansController.DeleteEmployeeLeavePlansAsync(System.String)">
            <summary>
            Delete (DELETE) a employeeLeavePlans for EEDM
            </summary>
            <param name="guid">GUID to desired employeeLeavePlans</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController">
            <summary>
            API end-points related to employee leave rquest.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeLeaveRequestService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmployeeLeaveRequestController class.
            </summary>
            <param name="employeeLeaveRequestService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.GetLeaveRequestsAsync(System.String)">
             <summary>
             Gets all leave requests for the currently authenticated API user .
             All leave requests will be returned regardless of status.
             The endpoint will not return the leave requests if:
                 1.  403 - User does not have permission to get requested leave request
            </summary>
             <accessComments>
             If the current user is an employee, all of the employee's leave requests will be returned.
             If the current user is a leave approver or a proxy of the leave approver, leave requests of all the supervisees will be returned. 
             </accessComments>
             <param name="effectivePersonId">
              Optional parameter for passing effective person Id
             </param>
             <returns>A list of Leave Requests</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.GetLeaveRequestInfoByLeaveRequestIdAsync(System.String,System.String)">
            <summary>
            Gets the LeaveRequest information corresponding to the input id.
            </summary>
            <accessComments>
            1) Any authenticated user can view their own leave request information.
            2) Leave approvers(users with the permission APPROVE.REJECT.LEAVE.REQUEST) or their proxies can view the leave request information of their supervisees. 
            </accessComments>
            <param name="id">Leave Request Id</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns>LeaveRequest DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.GetLeaveRequestsForTimeEntryAsync(System.DateTime,System.DateTime,System.String)">
            <summary>
            Gets the Approved Leave Requests for a timecard week based on the date range.
            </summary>
            <accessComments>
            1) Any authenticated user can view their own leave request information within the date range.
            2) Timecard approvers(users with the permission APPROVE.REJECT.TIME.ENTRY) or their proxies can view the leave request information of their supervisees, within the date range. 
            </accessComments>
            <param name="startDate">Start date of timecard week</param>
            <param name="endDate">End date of timecard week</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns>List of LeaveRequest DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.CreateLeaveRequestAsync(Ellucian.Colleague.Dtos.HumanResources.LeaveRequest,System.String)">
            <summary>
            Creates a single Leave Request. This POST endpoint will create a Leave Request along with its associated leave request details 
            </summary>
            <accessComments>
            Any authenticated user can create their own leave request     
            Supervisor can create leave requests on behalf of their supervisees
            The endpoint will reject the creation of a Leave Request if Employee does not have the correct permission.
            </accessComments>
            <param name="leaveRequest">Leave Request DTO</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns>Newly created Leave Request Object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.CreateLeaveRequestStatusAsync(Ellucian.Colleague.Dtos.HumanResources.LeaveRequestStatus,System.String)">
            <summary>
            Create a Leave Request Status record.
            </summary>
            <accessComments>
            1) Any authenticated user can create a leave request status record for their own leave request.
            2) Leave approvers(users with the permission APPROVE.REJECT.LEAVE.REQUEST) or their proxies can create a leave request status record for the leave requests of their supervisees. 
            </accessComments>
            <param name="status">Leave Request Status DTO</param>
            <param name="effectivePersonId">Optional parameter - Current user or proxy user person id.</param>
            <returns>Newly created Leave Request Status</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.GetSupervisorsByPositionIdAsync(System.String,System.String)">
            <summary>
            Gets the HumanResourceDemographics information of supervisors for the given position of a supervisee.
            </summary>
            <accessComments>
            Any authenticated user can access the HumanResourceDemographics information of their own supervisors.
            </accessComments>
            <param name="id">Position Id</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id.</param>
            <returns>List of HumanResourceDemographics DTOs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.GetSuperviseesByPrimaryPositionForSupervisorAsync(System.String)">
            <summary>
            This end point returns all the supervisees for the currently authenticated leave approver.       
            The endpoint will not return the supervisees if:
                1.  403 - User does not have permission to get supervisee information
            </summary>
            <accessComments>
             Current user must be Leave Approver(users with the permission APPROVE.REJECT.LEAVE.REQUEST) or their proxy to fetch all of their supervisees
            </accessComments>
            <param name="effectivePersonId">
             Optional parameter for passing effective person Id
            </param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.HumanResourceDemographics">List of HumanResourceDemographics DTOs</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to fetch supervisees.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.UpdateLeaveRequestAsync(Ellucian.Colleague.Dtos.HumanResources.LeaveRequest,System.String)">
            <summary>
            This endpoint will update an existing Leave Request along with its Leave Request Details. 
            </summary>
            <accessComments>
            Any authenticated user can update their own leave request.    
            Supervisor can update leave requests created by their supervisees 
            The endpoint will reject the update of a Leave Request if the employee does not have a valid permission.
            </accessComments>       
            <param name="leaveRequest"><see cref="T:Ellucian.Colleague.Dtos.HumanResources.LeaveRequest">Leave Request DTO</see></param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.LeaveRequest">Newly updated Leave Request object</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the leaveRequest DTO is not present in the request or any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to update the leave request.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if the leave request record to be edited doesn't exist in the DB.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if the leave request record to be edited is locked or if a duplicate leave request record already exists in the DB.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.CreateLeaveRequestCommentsAsync(Ellucian.Colleague.Dtos.HumanResources.LeaveRequestComment,System.String)">
            <summary>
            This endpoint will create a new leave request comment associated with a leave request. 
            </summary>
            <accessComments>
            1) Any authenticated user can create a comment associated with their own leave request.     
            2) Leave approvers(users with the permission APPROVE.REJECT.LEAVE.REQUEST) or their proxies can create a comment for the leave requests of their supervisees.  
            </accessComments>     
            <param name="leaveRequestComment">Leave Request Comment DTO</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.HumanResources.LeaveRequestComment">Leave Request Comment DTO</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to create the leave request comment.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveRequestController.GetLeaveTypesForLeaveRequestAsync(System.String)">
            <summary>
            This ethos pro-code api end-point will return the following necessary information needed to perform leave request from the experience.
            1. Leave Types for Leave requests.
            This API also performs a few of the data validations.
            The requested information must be owned by the employee.
            </summary>
            <param name="employeeId">Optional parameter: employeeId for whom the leave request being shown.</param>      
            <returns>PositionPayPeriodsTimecards DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController">
            <summary>
            Provides access to EmployeeLeaveTransactions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeLeaveTransactionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmployeeLeaveTransactionsController class.
            </summary>
            <param name="employeeLeaveTransactionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeLeaveTransactionsService">IEmployeeLeaveTransactionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController.GetEmployeeLeaveTransactionsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all employeeLeaveTransactions
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of EmployeeLeaveTransactions <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeaveTransactions"/> objects representing matching employeeLeaveTransactions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController.GetEmployeeLeaveTransactionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a employeeLeaveTransactions using a GUID
            </summary>
            <param name="guid">GUID to desired employeeLeaveTransactions</param>
            <returns>A employeeLeaveTransactions object <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeaveTransactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController.PostEmployeeLeaveTransactionsAsync(Ellucian.Colleague.Dtos.EmployeeLeaveTransactions)">
            <summary>
            Create (POST) a new employeeLeaveTransactions
            </summary>
            <param name="employeeLeaveTransactions">DTO of the new employeeLeaveTransactions</param>
            <returns>A employeeLeaveTransactions object <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeaveTransactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController.PutEmployeeLeaveTransactionsAsync(System.String,Ellucian.Colleague.Dtos.EmployeeLeaveTransactions)">
            <summary>
            Update (PUT) an existing employeeLeaveTransactions
            </summary>
            <param name="guid">GUID of the employeeLeaveTransactions to update</param>
            <param name="employeeLeaveTransactions">DTO of the updated employeeLeaveTransactions</param>
            <returns>A employeeLeaveTransactions object <see cref="T:Ellucian.Colleague.Dtos.EmployeeLeaveTransactions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeLeaveTransactionsController.DeleteEmployeeLeaveTransactionsAsync(System.String)">
            <summary>
            Delete (DELETE) a employeeLeaveTransactions
            </summary>
            <param name="guid">GUID to desired employeeLeaveTransactions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController">
            <summary>
            Exposes Employee data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="employeeService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.GetEmployeeByIdAsync(System.String)">
            <summary>
            Get a single employee using a guid.
            </summary>
            <param name="id">Guid of the employee to retrieve</param>
            <returns>Returns a single Employee object. <see cref="T:Ellucian.Colleague.Dtos.Employee"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.GetEmployee2ByIdAsync(System.String)">
            <summary>
            Get a single employee using a guid.
            </summary>
            <param name="id">Guid of the employee to retrieve</param>
            <returns>Returns a single Employee object. <see cref="T:Ellucian.Colleague.Dtos.Employee2"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.GetEmployee3ByIdAsync(System.String)">
            <summary>
            Get a single employee using a guid.
            </summary>
            <param name="id">Guid of the employee to retrieve</param>
            <returns>Returns a single Employee object. <see cref="T:Ellucian.Colleague.Dtos.Employee2"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.GetEmployeesAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get all employees using paging and including filters if necessary.
            </summary>
            <param name="page">Paging offset and limit.</param>
            <param name="person">Person id filter.</param>
            <param name="campus">Primary campus or location filter.</param>
            <param name="status">Status ("active", "terminated", or "leave") filter.</param>
            <param name="startOn">Start on a specific date filter.</param>
            <param name="endOn">End on a specific date filter.</param>
            <param name="rehireableStatusEligibility">Rehireable status ("eligible" or "ineligible") filter.</param>
            <param name="rehireableStatusType">Rehireable code filter.</param>
            <returns>Returns a list of Employee objects using paging.  <see cref="T:Ellucian.Colleague.Dtos.Employee"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.GetEmployees2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Get all employees for V11 using paging and including filters if necessary.
            </summary>
            <param name="page">Paging offset and limit.</param>
            <param name="criteria">Filter Criteria, includes person, campus, status, startOn, endOn, rehireableStatus.eligibility, and rehireableStatus.type.</param>
            <returns>Returns a list of Employee objects using paging.  <see cref="T:Ellucian.Colleague.Dtos.Employee2"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.GetEmployees3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Get all employees for V12 using paging and including filters if necessary.
            </summary>
            <param name="page">Paging offset and limit.</param>
            <param name="criteria">Filter Criteria, includes person, campus, status, startOn, endOn, rehireableStatus.eligibility, and rehireableStatus.type.</param>
            <returns>Returns a list of Employee objects using paging.  <see cref="T:Ellucian.Colleague.Dtos.Employee2"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.PutEmployeeAsync(System.String,Ellucian.Colleague.Dtos.Employee)">
            <summary>
            Update an existing employee
            </summary>
            <param name="id">Employee GUID for update.</param>
            <param name="employeeDto">Employee DTO request for update</param>
            <returns>Currently not implemented.  Returns default not supported API error message.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.PostEmployeeAsync(Ellucian.Colleague.Dtos.Employee)">
            <summary>
            Create a new employee record
            </summary>
            <param name="employeeDto">Employee DTO request for update</param>
            <returns>Currently not implemented.  Returns default not supported API error message.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.PostEmployee3Async(Ellucian.Colleague.Dtos.Employee2)">
            <summary>
            Create a new employee record v12
            </summary>
            <param name="employeeDto">Employee DTO request for update</param>
            <returns>Currently not implemented.  Returns default not supported API error message.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.PutEmployee3Async(System.String,Ellucian.Colleague.Dtos.Employee2)">
            <summary>
            Update an existing employee v12
            </summary>
            <param name="id">Employee GUID for update.</param>
            <param name="employeeDto">Employee DTO request for update</param>
            <returns>A employeeDto object <see cref="T:Ellucian.Colleague.Dtos.Employee2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.DeleteEmployeeAsync(System.String)">
            <summary>
            Delete an existing employee
            </summary>
            <param name="id">Employee GUID for update.</param>
            <returns>Currently not implemented.  Returns default not supported API error message.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeesController.QueryEmployeeNamesByPostAsync(Ellucian.Colleague.Dtos.Base.EmployeeNameQueryCriteria)">
            <summary>
            Gets a list of employees matching the given criteria
            </summary>
            <param name="criteria">An object that specifies search criteria</param>
            <returns>The response value is a list of Person DTOs for the matching set of employees.</returns>
            <exception cref="!:HttpResponseException">Http Response Exception</exception>
            <accessComments>
            Users with the following permission codes can query employee names:
            VIEW.ALL.EARNINGS.STATEMENTS
            VIEW.EMPLOYEE.DATA
            APPROVE.REJECT.TIME.ENTRY
            VIEW.EMPLOYEE.W2
            VIEW.EMPLOYEE.1095C
            VIEW.ALL.TIME.HISTORY
            VIEW.ALL.TOTAL.COMPENSATION
            APPROVE.REJECT.LEAVE.REQUEST
            ADD.ALL.HR.PROXY
            </accessComments>
            <note>PersonBase is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeSummaryController">
            <summary>
            Exposes access to employee summary information 
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeSummaryController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IEmployeeSummaryService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="employeeSummaryService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmployeeSummaryController.QueryEmployeeSummaryAsync(Ellucian.Colleague.Dtos.HumanResources.EmployeeSummaryQueryCriteria)">
            <summary>
            Gets a summary of employee information based on criteria provided.
            
            The endpoint will not return the requested EmployeeSummary if:
                1.  400 - criteria was not provided
                2.  403 - criteria contains Ids that do not have permission to get requested EmployeeSummary
                3.  404 - EmployeeSummary resources requested do not exist
            </summary>
            <param name="criteria">Criteria used to select EmployeeSummary objects <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeSummaryQueryCriteria">.</see></param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeSummary"> objects.</see></returns>
            <accessComments>
            When a supervisor Id is provided as part of the criteria, the authenticated user must have supervisory permissions
            or be a proxy for supervisor. If no supervisor Id is provided, only EmployeeSummary objects for the authenticated user
            may be requested
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController">
            <summary>
            Provides access to Employee Classifications data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentClassificationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmployeeClassificationsController class.
            </summary>
            <param name="employmentClassificationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentClassificationService">IEmploymentClassificationsService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController.GetEmploymentClassificationsAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 7</remarks>
            <summary>
            Retrieves all employment classifications.
            </summary>
            <returns>All EmploymentClassification objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController.GetEmploymentClassificationByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 7</remarks>
            <summary>
            Retrieves a employment classification by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.EmploymentClassification">EmploymentClassification.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController.PutEmploymentClassificationAsync(Ellucian.Colleague.Dtos.EmploymentClassification)">
            <summary>
            Updates a EmploymentClassification.
            </summary>
            <param name="employmentClassification"><see cref="T:Ellucian.Colleague.Dtos.EmploymentClassification">EmploymentClassification</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.EmploymentClassification">EmploymentClassification</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController.PostEmploymentClassificationAsync(Ellucian.Colleague.Dtos.EmploymentClassification)">
            <summary>
            Creates a EmploymentClassification.
            </summary>
            <param name="employmentClassification"><see cref="T:Ellucian.Colleague.Dtos.EmploymentClassification">EmploymentClassification</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.EmploymentClassification">EmploymentClassification</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentClassificationsController.DeleteEmploymentClassificationAsync(System.String)">
            <summary>
            Delete (DELETE) an existing EmploymentClassification
            </summary>
            <param name="id">Id of the EmploymentClassification to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController">
            <summary>
            Provides access to EmploymentDepartments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentDepartmentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentDepartmentsController class.
            </summary>
            <param name="employmentDepartmentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentDepartmentsService">IEmploymentDepartmentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController.GetEmploymentDepartmentsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all employmentDepartments
            </summary>
            <returns>List of EmploymentDepartments <see cref="T:Ellucian.Colleague.Dtos.EmploymentDepartments"/> objects representing matching employmentDepartments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController.GetEmploymentDepartmentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a employmentDepartments using a GUID
            </summary>
            <param name="guid">GUID to desired employmentDepartments</param>
            <returns>A employmentDepartments object <see cref="T:Ellucian.Colleague.Dtos.EmploymentDepartments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController.PostEmploymentDepartmentsAsync(Ellucian.Colleague.Dtos.EmploymentDepartments)">
            <summary>
            Create (POST) a new employmentDepartments
            </summary>
            <param name="employmentDepartments">DTO of the new employmentDepartments</param>
            <returns>A employmentDepartments object <see cref="T:Ellucian.Colleague.Dtos.EmploymentDepartments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController.PutEmploymentDepartmentsAsync(System.String,Ellucian.Colleague.Dtos.EmploymentDepartments)">
            <summary>
            Update (PUT) an existing employmentDepartments
            </summary>
            <param name="guid">GUID of the employmentDepartments to update</param>
            <param name="employmentDepartments">DTO of the updated employmentDepartments</param>
            <returns>A employmentDepartments object <see cref="T:Ellucian.Colleague.Dtos.EmploymentDepartments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentDepartmentsController.DeleteEmploymentDepartmentsAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentDepartments
            </summary>
            <param name="guid">GUID to desired employmentDepartments</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController">
            <summary>
            Provides access to EmploymentFrequencies
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentFrequenciesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentFrequenciesController class.
            </summary>
            <param name="employmentFrequenciesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentFrequenciesService">IEmploymentFrequenciesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController.GetEmploymentFrequenciesAsync">
            <summary>
            Return all employmentFrequencies
            </summary>
            <returns>List of EmploymentFrequencies <see cref="T:Ellucian.Colleague.Dtos.EmploymentFrequencies"/> objects representing matching employmentFrequencies</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController.GetEmploymentFrequenciesByGuidAsync(System.String)">
            <summary>
            Read (GET) a employmentFrequencies using a GUID
            </summary>
            <param name="guid">GUID to desired employmentFrequencies</param>
            <returns>A employmentFrequencies object <see cref="T:Ellucian.Colleague.Dtos.EmploymentFrequencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController.PostEmploymentFrequenciesAsync(Ellucian.Colleague.Dtos.EmploymentFrequencies)">
            <summary>
            Create (POST) a new employmentFrequencies
            </summary>
            <param name="employmentFrequencies">DTO of the new employmentFrequencies</param>
            <returns>A employmentFrequencies object <see cref="T:Ellucian.Colleague.Dtos.EmploymentFrequencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController.PutEmploymentFrequenciesAsync(System.String,Ellucian.Colleague.Dtos.EmploymentFrequencies)">
            <summary>
            Update (PUT) an existing employmentFrequencies
            </summary>
            <param name="guid">GUID of the employmentFrequencies to update</param>
            <param name="employmentFrequencies">DTO of the updated employmentFrequencies</param>
            <returns>A employmentFrequencies object <see cref="T:Ellucian.Colleague.Dtos.EmploymentFrequencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentFrequenciesController.DeleteEmploymentFrequenciesAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentFrequencies
            </summary>
            <param name="guid">GUID to desired employmentFrequencies</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController">
            <summary>
            Exposes Employment Leave of Absence Reasons data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentStatusEndingReasonService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ..ctor
            </summary>
            <param name="logger"></param>
            <param name="employmentStatusEndingReasonService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController.GetAllEmploymentLeaveOfAbsenceReasonsAsync">
            <summary>
            Returns all employment leave of absence reasons
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController.GetEmploymentLeaveOfAbsenceReasonByIdAsync(System.String)">
            <summary>
            Returns an employment leave of absence reason.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController.PutEmploymentLeaveOfAbsenceReasonAsync(Ellucian.Colleague.Dtos.EmploymentStatusEndingReason)">
            <summary>
            PutEmploymentLeaveOfAbsenceReasonAsync.
            </summary>
            <param name="employmentStatusEndingReason"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController.PostEmploymentLeaveOfAbsenceReasonAsync(Ellucian.Colleague.Dtos.EmploymentStatusEndingReason)">
            <summary>
            PostEmploymentLeaveOfAbsenceReasonAsync.
            </summary>
            <param name="employmentStatusEndingReason"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentLeaveOfAbsenceReasonsController.DeleteEmploymentLeaveOfAbsenceReasonAsync(System.String)">
            <summary>
            DeleteEmploymentLeaveOfAbsenceReasonAsync.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController">
            <summary>
            Provides access to EmploymentOrganizations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentOrganizationsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController.GetEmploymentOrganizationsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all employment-organizations
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.EmploymentOrganizations">EmploymentOrganizations</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController.GetEmploymentOrganizationsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing employment-organizations
            </summary>
            <param name="guid">GUID of the employment-organizations to get</param>
            <returns>A employmentOrganizations object <see cref="T:Ellucian.Colleague.Dtos.EmploymentOrganizations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController.PostEmploymentOrganizationsAsync(Ellucian.Colleague.Dtos.EmploymentOrganizations)">
            <summary>
            Create (POST) a new employmentOrganizations
            </summary>
            <param name="employmentOrganizations">DTO of the new employmentOrganizations</param>
            <returns>A employmentOrganizations object <see cref="T:Ellucian.Colleague.Dtos.EmploymentOrganizations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController.PutEmploymentOrganizationsAsync(System.String,Ellucian.Colleague.Dtos.EmploymentOrganizations)">
            <summary>
            Update (PUT) an existing employmentOrganizations
            </summary>
            <param name="guid">GUID of the employmentOrganizations to update</param>
            <param name="employmentOrganizations">DTO of the updated employmentOrganizations</param>
            <returns>A employmentOrganizations object <see cref="T:Ellucian.Colleague.Dtos.EmploymentOrganizations"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentOrganizationsController.DeleteEmploymentOrganizationsAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentOrganizations
            </summary>
            <param name="guid">GUID to desired employmentOrganizations</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController">
            <summary>
            Provides access to EmploymentPerformanceReviewRatings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentPerformanceReviewRatingsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentPerformanceReviewRatingsController class.
            </summary>
            <param name="employmentPerformanceReviewRatingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentPerformanceReviewRatingsService">IEmploymentPerformanceReviewRatingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController.GetEmploymentPerformanceReviewRatingsAsync">
            <summary>
            Return all employmentPerformanceReviewRatings
            </summary>
            <returns>List of EmploymentPerformanceReviewRatings <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewRatings"/> objects representing matching employmentPerformanceReviewRatings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController.GetEmploymentPerformanceReviewRatingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a employmentPerformanceReviewRatings using a GUID
            </summary>
            <param name="guid">GUID to desired employmentPerformanceReviewRatings</param>
            <returns>A employmentPerformanceReviewRatings object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewRatings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController.PostEmploymentPerformanceReviewRatingsAsync(Ellucian.Colleague.Dtos.EmploymentPerformanceReviewRatings)">
            <summary>
            Create (POST) a new employmentPerformanceReviewRatings
            </summary>
            <param name="employmentPerformanceReviewRatings">DTO of the new employmentPerformanceReviewRatings</param>
            <returns>A employmentPerformanceReviewRatings object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewRatings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController.PutEmploymentPerformanceReviewRatingsAsync(System.String,Ellucian.Colleague.Dtos.EmploymentPerformanceReviewRatings)">
            <summary>
            Update (PUT) an existing employmentPerformanceReviewRatings
            </summary>
            <param name="guid">GUID of the employmentPerformanceReviewRatings to update</param>
            <param name="employmentPerformanceReviewRatings">DTO of the updated employmentPerformanceReviewRatings</param>
            <returns>A employmentPerformanceReviewRatings object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewRatings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewRatingsController.DeleteEmploymentPerformanceReviewRatingsAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentPerformanceReviewRatings
            </summary>
            <param name="guid">GUID to desired employmentPerformanceReviewRatings</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController">
            <summary>
            Provides access to EmploymentPerformanceReviews
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentPerformanceReviewsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentPerformanceReviewsController class.
            </summary>
            <param name="employmentPerformanceReviewsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentPerformanceReviewsService">IEmploymentPerformanceReviewsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.GetEmploymentPerformanceReviewsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all employmentPerformanceReviews
            </summary>
            <param name="page">Page of items for Paging</param>
            <returns>List of EmploymentPerformanceReviews <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviews"/> objects representing matching employmentPerformanceReviews</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.GetEmploymentPerformanceReviewsByGuidAsync(System.String)">
            <summary>
            Read (GET) a employmentPerformanceReviews using a GUID
            </summary>
            <param name="guid">GUID to desired employmentPerformanceReviews</param>
            <returns>A employmentPerformanceReviews object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviews"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.PostEmploymentPerformanceReviewsAsync(Ellucian.Colleague.Dtos.EmploymentPerformanceReviews)">
            <summary>
            Create (POST) a new employmentPerformanceReviews
            </summary>
            <param name="employmentPerformanceReviews">DTO of the new employmentPerformanceReviews</param>
            <returns>An EmploymentPerformanceReviews DTO object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviews"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.PutEmploymentPerformanceReviewsAsync(System.String,Ellucian.Colleague.Dtos.EmploymentPerformanceReviews)">
            <summary>
            Update (PUT) an existing employmentPerformanceReviews
            </summary>
            <param name="guid">GUID of the employmentPerformanceReviews to update</param>
            <param name="employmentPerformanceReviews">DTO of the updated employmentPerformanceReviews</param>
            <returns>An EmploymentPerformanceReviews DTO object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviews"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.DeleteEmploymentPerformanceReviewsAsync(System.String)">
            <summary>
            Deletes employment performance review based on id
            </summary>
            <param name="guid">id</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewsController.ValidateEmploymentPerformanceReviews(Ellucian.Colleague.Dtos.EmploymentPerformanceReviews)">
            <summary>
            Helper method to validate employment-performance-reviews PUT/POST.
            </summary>
            <param name="employmentPerformanceReviews"><see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviews"/>EmploymentPerformanceReviews DTO object of type</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController">
            <summary>
            Provides access to EmploymentPerformanceReviewTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentPerformanceReviewTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentPerformanceReviewTypesController class.
            </summary>
            <param name="employmentPerformanceReviewTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentPerformanceReviewTypesService">IEmploymentPerformanceReviewTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController.GetEmploymentPerformanceReviewTypesAsync">
            <summary>
            Return all employmentPerformanceReviewTypes
            </summary>
            <returns>List of EmploymentPerformanceReviewTypes <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewTypes"/> objects representing matching employmentPerformanceReviewTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController.GetEmploymentPerformanceReviewTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a employmentPerformanceReviewTypes using a GUID
            </summary>
            <param name="guid">GUID to desired employmentPerformanceReviewTypes</param>
            <returns>A employmentPerformanceReviewTypes object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController.PostEmploymentPerformanceReviewTypesAsync(Ellucian.Colleague.Dtos.EmploymentPerformanceReviewTypes)">
            <summary>
            Create (POST) a new employmentPerformanceReviewTypes
            </summary>
            <param name="employmentPerformanceReviewTypes">DTO of the new employmentPerformanceReviewTypes</param>
            <returns>A employmentPerformanceReviewTypes object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController.PutEmploymentPerformanceReviewTypesAsync(System.String,Ellucian.Colleague.Dtos.EmploymentPerformanceReviewTypes)">
            <summary>
            Update (PUT) an existing employmentPerformanceReviewTypes
            </summary>
            <param name="guid">GUID of the employmentPerformanceReviewTypes to update</param>
            <param name="employmentPerformanceReviewTypes">DTO of the updated employmentPerformanceReviewTypes</param>
            <returns>A employmentPerformanceReviewTypes object <see cref="T:Ellucian.Colleague.Dtos.EmploymentPerformanceReviewTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentPerformanceReviewTypesController.DeleteEmploymentPerformanceReviewTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentPerformanceReviewTypes
            </summary>
            <param name="guid">GUID to desired employmentPerformanceReviewTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController">
            <summary>
            Provides access to Employee Proficiencies data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentProficiencyService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmployeeProficienciesController class.
            </summary>
            <param name="employmentProficienciesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentProficiencyService">IEmploymentProficienciesService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController.GetEmploymentProficienciesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 10</remarks>
            <summary>
            Retrieves all employment proficiencies.
            </summary>
            <returns>All EmploymentProficiency objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController.GetEmploymentProficiencyByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 10</remarks>
            <summary>
            Retrieves a employment proficiency by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.EmploymentProficiency">EmploymentProficiency.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController.PutEmploymentProficiencyAsync(Ellucian.Colleague.Dtos.EmploymentProficiency)">
            <summary>
            Updates a EmploymentProficiency.
            </summary>
            <param name="employmentProficiency"><see cref="T:Ellucian.Colleague.Dtos.EmploymentProficiency">EmploymentProficiency</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.EmploymentProficiency">EmploymentProficiency</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController.PostEmploymentProficiencyAsync(Ellucian.Colleague.Dtos.EmploymentProficiency)">
            <summary>
            Creates a EmploymentProficiency.
            </summary>
            <param name="employmentProficiency"><see cref="T:Ellucian.Colleague.Dtos.EmploymentProficiency">EmploymentProficiency</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.EmploymentProficiency">EmploymentProficiency</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficienciesController.DeleteEmploymentProficiencyAsync(System.String)">
            <summary>
            Delete (DELETE) an existing EmploymentProficiency
            </summary>
            <param name="id">Id of the EmploymentProficiency to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController">
            <summary>
            Provides access to EmploymentProficiencyLevels
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EmploymentProficiencyLevelsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController.GetEmploymentProficiencyLevelsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all employment-proficiency-levels
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmploymentProficiencyLevel">EmploymentProficiencyLevels</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController.GetEmploymentProficiencyLevelByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing employment-proficiency-level
            </summary>
            <param name="guid">GUID of the employment-proficiency-levels to get</param>
            <returns>A employmentProficiencyLevels object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmploymentProficiencyLevel"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController.PostEmploymentProficiencyLevelAsync(Ellucian.Colleague.Dtos.HumanResources.EmploymentProficiencyLevel)">
            <summary>
            Create (POST) a new employmentProficiencyLevel
            </summary>
            <param name="employmentProficiencyLevel">DTO of the new employmentProficiencyLevel</param>
            <returns>A employmentProficiencyLevels object <see cref="!:EmploymentProficiencyLevels"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController.PutEmploymentProficiencyLevelAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.EmploymentProficiencyLevel)">
            <summary>
            Update (PUT) an existing employmentProficiencyLevels
            </summary>
            <param name="guid">GUID of the employmentProficiencyLevels to update</param>
            <param name="employmentProficiencyLevel">DTO of the updated employmentProficiencyLevels</param>
            <returns>A employmentProficiencyLevel object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmploymentProficiencyLevel"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentProficiencyLevelsController.DeleteEmploymentProficiencyLevelAsync(System.String)">
            <summary>
            Delete (DELETE) a employmentProficiencyLevels
            </summary>
            <param name="guid">GUID to desired employmentProficiencyLevel</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController">
            <summary>
            Provides access to employee termination reason data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IEmploymentStatusEndingReasonService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ..ctor
            </summary>
            <param name="employmentStatusEndingReasonService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController.GetEmploymentTerminationReasonsAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 7</remarks>
            <summary>
            Retrieves all employment termination reasons.
            </summary>
            <returns>All employmentT termination reason objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController.GetEmploymentTerminationReasonByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM VERSION 7</remarks>
            <summary>
            Retrieves a employment termination reason by Id.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.EmploymentStatusEndingReason">EmploymentStatusEndingReason.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController.PutEmploymentTerminationReasonAsync(Ellucian.Colleague.Dtos.EmploymentStatusEndingReason)">
            <summary>
            Updates (PUT) an employment termination reason.
            </summary>
            <param name="employmentStatusEndingReason"><see cref="!:EmploymentStatusEndingReason">EmploymentStatusEndingReason</see> to update</param>
            <returns>Newly updated <see cref="!:EmploymentStatusEndingReason">EmploymentStatusEndingReason</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController.PostEmploymentTerminationReasonAsync(Ellucian.Colleague.Dtos.EmploymentStatusEndingReason)">
            <summary>
            Creates (POST) an employment termination reason.
            </summary>
            <param name="employmentStatusEndingReason"><see cref="!:EmploymentStatusEndingReason">EmploymentStatusEndingReason</see> to create</param>
            <returns>Newly created <see cref="!:EmploymentStatusEndingReason">EmploymentStatusEndingReason</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.EmploymentTerminationReasonsController.DeleteEmploymentTerminationReasonAsync(System.String)">
            <summary>
            Delete (DELETE) an existing employment termination reason.
            </summary>
            <param name="id">Id of the employment termination reason to delete.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.FacultyContractsController">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.FacultyContractsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IFacultyContractService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FacultyContractcontroller class.
            </summary>
            <param name="facultyContractService">Service of type<see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IFacultyContractService">IFacultyContractService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.FacultyContractsController.GetFacultyContractsAsync(System.String)">
            <summary>
            Query Faculty Contracts
            </summary>
            <param name="facultyId">Id of the faculty member</param>
            <returns></returns>
            <accessComments>
            Only the current user can get their own faculty contracts. 
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController">
            <summary>
            Expose Human Resources Employment Positions data and user permissions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.HumanResources.Services.IHumanResourceDemographicsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            HumanResourcesController constructor
            </summary>
            <param name="logger"></param>
            <param name="adapterRegistry"></param>
            <param name="humanResourceDemographicsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController.GetHumanResourceDemographicsAsync(System.String)">
             <summary>
             Gets a list filled with all of the HumanResourceDemographics the current user/user with proxy is able to access
             </summary>
             <param name="effectivePersonId">Optional parameter for effective person Id</param>
             <returns></returns>
            <accessComments>
             1. Any user can get a human-resources resource that represents their self.
             2. Any non-supervisor user can access HumanResourceDemographics data of all their supervisors along with that of their own.
             3. Any user with ViewAllEarningsStatements permission can acces HumanResourceDemographics data of all the employees along with that of their own.
             4. Users who have the permission - ACCEPT.REJECT.TIME.ENTRY - are considered supervisors and can access the HumanResourceDemographics data
             of the following:
                 a. Self
                 b. All their supervisors
                 c. All their subordinates
                 d. All the supervisors of their subordinates
             5. Users who are proxying for a supervisor (a user with the aforementioned permission) have the same authorization as the
             supervisor. When this is the case, set the effectivePersonId argument in the route url to the id of the supervisor.
             </accessComments>         
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController.GetHumanResourceDemographics2Async(System.String,System.Nullable{System.DateTime})">
             <summary>
             Gets a list filled with all of the HumanResourceDemographics the current user/user with proxy is able to access
             </summary>
             <param name="effectivePersonId">Optional parameter for effective person Id</param>
             <param name="lookupStartDate">Optional lookback date to limit returned results</param>
             <returns></returns>
            <accessComments>
             1. Any user can get a human-resources resource that represents their self.
             2. Users who have the permission - ACCEPT.REJECT.TIME.ENTRY - are considered supervisors and can get resources owned by their
             supervisees. If a supervisor user attempts to get a resource owned by a non-supervisee, this endpoint will throw a 403.
             3. Users who are proxying for a supervisor (a user with the afore mentioned permission) have the same authorization as the
             supervisor. When this is the case, set the effectivePersonId argument in the route url to the id of the supervisor.
             4. Admin can access human-resources resource of anyone. 
             </accessComments>         
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController.GetSpecificHumanResourceDemographicsAsync(System.String,System.String)">
            <summary>
            Gets a HumanResourceDemographics object for the person id in the route.
            </summary>
            <param name="id">Id of the peron whose HumanResourceDemographics information requested</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns>HumanResourceDemographics informaion of the requested person.</returns>
             <accessComments>
            1. Any user can get a human-resources resource that represents their self.
            2. Users who have the permission - ACCEPT.REJECT.TIME.ENTRY - are considered supervisors. These supervisors and their proxies can 
            get resources owned by their supervisees. If a supervisor attempts to get a resource owned by a non-supervisee, this endpoint will throw a 403.
            3. Users who have the permission - APPROVE.REJECT.LEAVE.REQUEST - are considered leave approvers. These leave approvers and their proxies can
            get resources owned by their supervisees. If a leave approver attempts to get a resource owned by a non-supervisee, this endpoint will throw a 403.
            </accessComments> 
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController.QueryHumanResourceDemographicsAsync(Ellucian.Colleague.Dtos.Base.HumanResourceDemographicsQueryCriteria,System.String)">
            <summary>
            Gets a collection of HumanResourceDemographics using a collectiong of Ids
            </summary>
            <param name="criteria">An object that specifies search criteria</param>
            <param name="effectivePersonId">(Optional) ID of a grantor if the current user is acting as their proxy - must be their proxy</param>
            <returns>The response value is a list of Person DTOs for the matching set of employees.</returns>
            <accessComments>
            Users may only access
            1. Their own information
            2. Their supervisees information if they have the APPROVE.REJECT.TIME.ENTRY permission
            3. Their grantor's supervisees information when acting as a proxy for the grantor
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesController.GetUserPermissionsAsync">
            <summary>
            Gets whether the logged in user has permission to view the leave requests in the experience.
            </summary>
            <accessComments>
            Any authenticated colleague user can access this end point
            </accessComments>
            <returns>UserPermission object</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController">
            <summary>
            This is the controller for tax form pdf.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IHumanResourcesTaxFormPdfService,Ellucian.Colleague.Coordination.Base.Services.ITaxFormConsentService,Ellucian.Colleague.Coordination.Base.Services.IConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the Tax Form pdf controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.GetW2TaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the W-2 tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the W-2.</param>
            <param name="recordId">The record ID where the W-2 pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.W2 for the employee.
            Requires permission VIEW.W2 for someone who currently has permission to proxy for the employee requested.
            Requires permission VIEW.EMPLOYEE.W2 for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>          
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.GetW2cTaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the W-2c tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the W-2c.</param>
            <param name="recordId">The record ID where the W-2c pdf data is stored</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.Get1095cTaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1095-C tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1095-C.</param>
            <param name="recordId">ID of the record where the 1095-C pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.1095C for the employee.
            Requires permission VIEW.1095C for someone who currently has permission to proxy for the employee requested.
            Requires permission VIEW.EMPLOYEE.1095C for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>         
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.GetT4TaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the T4 tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the T4.</param>
            <param name="recordId">ID of the record where the T4 pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.T4.
            Requires permission VIEW.T4 for someone who currently has permission to proxy for the employee requested.
            Requires permission VIEW.EMPLOYEE.T4 for admin view.       
            The tax form record requested must belong to the person ID requested.  
            Updated in 2023 to use FastReport (.frx) instead of Microsoft RDLC Report Designer (.rdlc) and 
            keep only tax years up to 2016.
            </accessComments>         
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.GetW2TaxFormPdf(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the W-2 tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the W-2.</param>
            <param name="recordId">The record ID where the W-2 pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.W2 for the employee.
            Requires permission VIEW.W2 for someone who currently has permission to proxy for the employee requested.
            Requires permission VIEW.EMPLOYEE.W2 for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>          
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.GetW2cTaxFormPdf(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the W-2c tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the W-2c.</param>
            <param name="recordId">The record ID where the W-2c pdf data is stored</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.Get1095cTaxFormPdf(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1095-C tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1095-C.</param>
            <param name="recordId">ID of the record where the 1095-C pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.1095C for the employee.
            Requires permission VIEW.1095C for someone who currently has permission to proxy for the employee requested.
            Requires permission VIEW.EMPLOYEE.1095C for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>         
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormPdfsController.GetT4TaxFormPdf(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the T4 tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the T4.</param>
            <param name="recordId">ID of the record where the T4 pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.T4.
            Requires permission VIEW.T4 for someone who currently has permission to proxy for the employee requested.
            Requires permission VIEW.EMPLOYEE.T4 for admin view.       
            The tax form record requested must belong to the person ID requested.       
            </accessComments>         
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController">
            <summary>
            This is the controller for the type of Tax Form Statements.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IHumanResourcesTaxFormStatementService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the Tax Form Statement controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.GetW22Async(System.String)">
            <summary>
            Returns W-2 tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of W-2 tax form statements</returns>
            <accessComments>
            In order to access W-2 statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewEmployeeW2
            2. Have the ViewW2 permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.Get1095c2Async(System.String)">
            <summary>
            Returns 1095-C tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1095-C tax form statements</returns>
            <accessComments>
            In order to access 1095-C statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewEmployee1095C
            2. Have the View1095C permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.GetT42Async(System.String)">
            <summary>
            Returns T4 tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of T4 tax form statements</returns>
            <accessComments>
            In order to access T4 statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewEmployeeT4
            2. Have the ViewT4 permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.GetW2Async(System.String)">
            <summary>
            Returns W-2 tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of W-2 tax form statements</returns>
            <accessComments>
            In order to access W-2 statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewEmployeeW2
            2. Have the ViewW2 permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.Get1095cAsync(System.String)">
            <summary>
            Returns 1095-C tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1095-C tax form statements</returns>
            <accessComments>
            In order to access 1095-C statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewEmployee1095C
            2. Have the View1095C permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.HumanResourcesTaxFormStatementsController.GetT4Async(System.String)">
            <summary>
            Returns T4 tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of T4 tax form statements</returns>
            <accessComments>
            In order to access T4 statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewEmployeeT4
            2. Have the ViewT4 permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController">
            <summary>
            Provides access to InstitutionEmployers
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionEmployersService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstitutionEmployersController class.
            </summary>
            <param name="institutionEmployersService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionEmployersService">IInstitutionEmployersService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController.GetInstitutionEmployersAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all InstitutionEmployers
            </summary>
            <returns>Returns list of InstitutionEmployers <see cref="T:Ellucian.Colleague.Dtos.InstitutionEmployers"/> objects representing matching institutionEmployers</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController.GetInstitutionEmployersByGuidAsync(System.String)">
            <summary>
            Read (GET) an InstitutionEmployers using a GUID
            </summary>
            <param name="guid">GUID to desired institutionEmployers</param>
            <returns>An InstitutionEmployers DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionEmployers"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController.PostInstitutionEmployersAsync(Ellucian.Colleague.Dtos.InstitutionEmployers)">
            <summary>
            Create (POST) a new institutionEmployers
            </summary>
            <param name="institutionEmployers">DTO of the new institutionEmployers</param>
            <returns>An InstitutionEmployers DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionEmployers"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController.PutInstitutionEmployersAsync(System.String,Ellucian.Colleague.Dtos.InstitutionEmployers)">
            <summary>
            Update (PUT) an existing institutionEmployers
            </summary>
            <param name="guid">GUID of the institutionEmployers to update</param>
            <param name="institutionEmployers">DTO of the updated institutionEmployers</param>
            <returns>An InstitutionEmployers DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionEmployers"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionEmployersController.DeleteInstitutionEmployersAsync(System.String)">
            <summary>
            Delete (DELETE) a institutionEmployers
            </summary>
            <param name="guid">GUID to desired institutionEmployers</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController">
            <summary>
            Provides access to InstitutionJobs
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionJobsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstitutionJobsController class.
            </summary>
            <param name="institutionJobsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionJobsService">IInstitutionJobsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.GetInstitutionJobsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all InstitutionJobs
            </summary>
            <returns>List of InstitutionJobs <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs"/> objects representing matching institutionJobs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.GetInstitutionJobs2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all InstitutionJobs
            </summary>
            <returns>List of InstitutionJobs <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs2"/> objects representing matching institutionJobs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.GetInstitutionJobs3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all InstitutionJobs
            </summary>
            <returns>List of InstitutionJobs <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs3"/> objects representing matching institutionJobs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.GetInstitutionJobsByGuidAsync(System.String)">
            <summary>
            Read (GET) an InstitutionJobs using a GUID
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
            <returns>An InstitutionJobs DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.GetInstitutionJobsByGuid2Async(System.String)">
            <summary>
            Read (GET) an InstitutionJobs using a GUID
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
            <returns>An InstitutionJobs DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.GetInstitutionJobsByGuid3Async(System.String)">
            <summary>
            Read (GET) an InstitutionJobs using a GUID
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
            <returns>An InstitutionJobs DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs3"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.PostInstitutionJobsAsync(Ellucian.Colleague.Dtos.InstitutionJobs)">
            <summary>
            Create (POST) a new institutionJobs
            </summary>
            <param name="institutionJobs">DTO of the new institutionJobs</param>
            <returns> V8 and V11 of institution jobs is not supported, Returns an error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.PostInstitutionJobs2Async(Ellucian.Colleague.Dtos.InstitutionJobs2)">
            <summary>
            Create (POST) a new institutionJobs
            </summary>
            <param name="institutionJobs">DTO of the new institutionJobs</param>
            <returns> V8 and V11 of institution jobs is not supported, Returns an error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.PostInstitutionJobs3Async(Ellucian.Colleague.Dtos.InstitutionJobs3)">
            <summary>
            Create (POST) a new institutionJobs v12
            </summary>
            <param name="institutionJobs">DTO of the new institutionJobs</param>
            <returns>An InstitutionJobs DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs3"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.PutInstitutionJobsAsync(System.String,Ellucian.Colleague.Dtos.InstitutionJobs)">
            <summary>
            Update (PUT) an existing institutionJobs
            </summary>
            <param name="guid">GUID of the institutionJobs to update</param>
            <param name="institutionJobs">DTO of the updated institutionJobs</param>
            <returns>V8 and V11 of institution jobs is not supported, Returns an error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.PutInstitutionJobs2Async(System.String,Ellucian.Colleague.Dtos.InstitutionJobs2)">
            <summary>
            Update (PUT) an existing institutionJobs
            </summary>
            <param name="guid">GUID of the institutionJobs to update</param>
            <param name="institutionJobs">DTO of the updated institutionJobs</param>
            <returns>V8 and V11 of institution jobs is not supported, Returns an error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.PutInstitutionJobs3Async(System.String,Ellucian.Colleague.Dtos.InstitutionJobs3)">
            <summary>
            Update (PUT) an existing institutionJobs
            </summary>
            <param name="guid">GUID of the institutionJobs to update</param>
            <param name="institutionJobs">DTO of the updated institutionJobs</param>
            <returns>An InstitutionJobs DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs3"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.DeleteInstitutionJobsAsync(System.String)">
            <summary>
            Delete (DELETE) a institutionJobs
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.ValidateInstitutionJobs(Ellucian.Colleague.Dtos.InstitutionJobs)">
            <summary>
            Helper method to validate Institution-Jobs PUT/POST.
            </summary>
            <param name="institutionJobs"><see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs"/>InstitutionJobs DTO object of type</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobsController.ValidateInstitutionJobs2(Ellucian.Colleague.Dtos.InstitutionJobs3)">
            <summary>
            Helper method to validate Institution-Jobs PUT/POST.
            </summary>
            <param name="institutionJobs"><see cref="T:Ellucian.Colleague.Dtos.InstitutionJobs3"/>InstitutionJobs DTO object of type</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController">
            <summary>
            Provides access to InstitutionJobSupervisors
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionJobSupervisorsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstitutionJobSupervisorsController class.
            </summary>
            <param name="institutionJobSupervisorsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionJobSupervisorsService">IInstitutionJobSupervisorsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.GetInstitutionJobSupervisorsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all InstitutionJobSupervisors
            </summary>
            <returns>List of InstitutionJobSupervisors <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobSupervisors"/> objects representing matching institutionJobs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.GetInstitutionJobSupervisorsByGuidAsync(System.String)">
            <summary>
            Read (GET) an InstitutionJobSupervisors using a GUID
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
            <returns>An InstitutionJobSupervisors DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobSupervisors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.GetInstitutionJobSupervisors2Async(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all InstitutionJobSupervisors
            </summary>
            <returns>List of InstitutionJobSupervisors <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobSupervisors"/> objects representing matching institutionJobs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.GetInstitutionJobSupervisorsByGuid2Async(System.String)">
            <summary>
            Read (GET) an InstitutionJobSupervisors using a GUID
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
            <returns>An InstitutionJobSupervisors DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobSupervisors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.PostInstitutionJobSupervisorsAsync(Ellucian.Colleague.Dtos.InstitutionJobSupervisors)">
            <summary>
            Create (POST) a new institutionJobs
            </summary>
            <param name="institutionJobs">DTO of the new institutionJobs</param>
            <returns>An InstitutionJobSupervisors DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobSupervisors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.PutInstitutionJobSupervisorsAsync(System.String,Ellucian.Colleague.Dtos.InstitutionJobSupervisors)">
            <summary>
            Update (PUT) an existing institutionJobs
            </summary>
            <param name="guid">GUID of the institutionJobs to update</param>
            <param name="institutionJobs">DTO of the updated institutionJobs</param>
            <returns>An InstitutionJobSupervisors DTO object <see cref="T:Ellucian.Colleague.Dtos.InstitutionJobSupervisors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionJobSupervisorsController.DeleteInstitutionJobSupervisorsAsync(System.String)">
            <summary>
            Delete (DELETE) a institutionJobs
            </summary>
            <param name="guid">GUID to desired institutionJobs</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController">
            <summary>
            Expose Human Resources Institution Positions data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IInstitutionPositionService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            InstitutionPositionsController constructor
            </summary>
            <param name="logger"></param>
            <param name="institutionPositionService"></param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.GetInstitutionPositionsByGuidAsync(System.String)">
            <summary>
            Retrieves an Institution Positions by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.GetInstitutionPositionsByGuid2Async(System.String)">
            <summary>
            Retrieves an Institution Positions by ID. (v11)
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.GetInstitutionPositionsByGuid3Async(System.String)">
            <summary>
            Retrieves an Institution Positions by ID. (v12)
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.GetInstitutionPositionsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of InstitutionPosition objects based on selection criteria.
            </summary>
            <param name="page">page</param>
            <param name="campus">The physical location of the institution position</param>
            <param name="status">The status of the position (e.g. active, frozen, cancelled, inactive)</param>
            <param name="bargainingUnit">The group or union associated with the position</param>
            <param name="reportsToPosition">The position to which this position reports</param>
            <param name="exemptionType">An indicator if the position is exempt or non-exempt</param>
            <param name="compensationType">The type of compensation awarded (e.g. salary, wages, etc.)</param>
            <param name="startOn">The date when the position is first available</param>
            <param name="endOn">The date when the position is last available</param>
            <returns>List of InstitutionPositions <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition"/> objects representing matching Institution Positions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.GetInstitutionPositions2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of InstitutionPositions objects based on selection criteria.
            </summary>
            <param name="page"> - InstitutionPosition page Contains ...page...</param>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <returns>List of InstitutionPosition <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition"/> objects representing matching institution positions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.GetInstitutionPositions3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of InstitutionPositions objects based on selection criteria.
            </summary>
            <param name="page"> - InstitutionPosition page Contains ...page...</param>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <returns>List of InstitutionPosition <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition"/> objects representing matching institution positions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.CreateInstitutionPositionsAsync(Ellucian.Colleague.Dtos.InstitutionPosition)">
            <summary>
            Creates a Institution Position.
            </summary>
            <param name="institutionPosition"><see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.UpdateInstitutionPositionsAsync(System.String,Ellucian.Colleague.Dtos.InstitutionPosition)">
            <summary>
            Updates an Institution Position.
            </summary>
            <param name="guid">Guid of the Institution Position to update</param>
            <param name="institutionPosition"><see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.InstitutionPosition">InstitutionPosition</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstitutionPositionsController.DefaultDeleteInstitutionPositions(System.String)">
            <summary>
            Deletes an Institution Positions.
            </summary>
            <param name="guid">Guid of the Institution Position to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController">
            <summary>
            Provides access to InstructorTenureTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IInstructorTenureTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructorTenureTypesController class.
            </summary>
            <param name="instructorTenureTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IInstructorTenureTypesService">IInstructorTenureTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController.GetInstructorTenureTypesAsync">
            <summary>
            Return all instructorTenureTypes
            </summary>
            <returns>List of InstructorTenureTypes <see cref="T:Ellucian.Colleague.Dtos.InstructorTenureTypes"/> objects representing matching instructorTenureTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController.GetInstructorTenureTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a instructorTenureTypes using a GUID
            </summary>
            <param name="guid">GUID to desired instructorTenureTypes</param>
            <returns>A instructorTenureTypes object <see cref="T:Ellucian.Colleague.Dtos.InstructorTenureTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController.PostInstructorTenureTypesAsync(Ellucian.Colleague.Dtos.InstructorTenureTypes)">
            <summary>
            Create (POST) a new instructorTenureTypes
            </summary>
            <param name="instructorTenureTypes">DTO of the new instructorTenureTypes</param>
            <returns>A instructorTenureTypes object <see cref="T:Ellucian.Colleague.Dtos.InstructorTenureTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController.PutInstructorTenureTypesAsync(System.String,Ellucian.Colleague.Dtos.InstructorTenureTypes)">
            <summary>
            Update (PUT) an existing instructorTenureTypes
            </summary>
            <param name="guid">GUID of the instructorTenureTypes to update</param>
            <param name="instructorTenureTypes">DTO of the updated instructorTenureTypes</param>
            <returns>A instructorTenureTypes object <see cref="T:Ellucian.Colleague.Dtos.InstructorTenureTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.InstructorTenureTypesController.DeleteInstructorTenureTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a instructorTenureTypes
            </summary>
            <param name="guid">GUID to desired instructorTenureTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController">
            <summary>
            Provides access to JobApplications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IJobApplicationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the JobApplicationsController class.
            </summary>
            <param name="jobApplicationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IJobApplicationsService">IJobApplicationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController.GetJobApplicationsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all jobApplications
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of JobApplications <see cref="T:Ellucian.Colleague.Dtos.JobApplications"/> objects representing matching jobApplications</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController.GetJobApplicationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a jobApplications using a GUID
            </summary>
            <param name="guid">GUID to desired jobApplications</param>
            <returns>A jobApplications object <see cref="T:Ellucian.Colleague.Dtos.JobApplications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController.PostJobApplicationsAsync(Ellucian.Colleague.Dtos.JobApplications)">
            <summary>
            Create (POST) a new jobApplications
            </summary>
            <param name="jobApplications">DTO of the new jobApplications</param>
            <returns>A jobApplications object <see cref="T:Ellucian.Colleague.Dtos.JobApplications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController.PutJobApplicationsAsync(System.String,Ellucian.Colleague.Dtos.JobApplications)">
            <summary>
            Update (PUT) an existing jobApplications
            </summary>
            <param name="guid">GUID of the jobApplications to update</param>
            <param name="jobApplications">DTO of the updated jobApplications</param>
            <returns>A jobApplications object <see cref="T:Ellucian.Colleague.Dtos.JobApplications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationsController.DeleteJobApplicationsAsync(System.String)">
            <summary>
            Delete (DELETE) a jobApplications
            </summary>
            <param name="guid">GUID to desired jobApplications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController">
            <summary>
            Provides access to JobApplicationSources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the JobApplicationSourcesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController.GetJobApplicationSourcesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all job-application-sources
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.JobApplicationSources">JobApplicationSources</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController.GetJobApplicationSourcesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing job-application-sources
            </summary>
            <param name="guid">GUID of the job-application-sources to get</param>
            <returns>A jobApplicationSources object <see cref="T:Ellucian.Colleague.Dtos.JobApplicationSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController.PostJobApplicationSourcesAsync(Ellucian.Colleague.Dtos.JobApplicationSources)">
            <summary>
            Create (POST) a new jobApplicationSources
            </summary>
            <param name="jobApplicationSources">DTO of the new jobApplicationSources</param>
            <returns>A jobApplicationSources object <see cref="T:Ellucian.Colleague.Dtos.JobApplicationSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController.PutJobApplicationSourcesAsync(System.String,Ellucian.Colleague.Dtos.JobApplicationSources)">
            <summary>
            Update (PUT) an existing jobApplicationSources
            </summary>
            <param name="guid">GUID of the jobApplicationSources to update</param>
            <param name="jobApplicationSources">DTO of the updated jobApplicationSources</param>
            <returns>A jobApplicationSources object <see cref="T:Ellucian.Colleague.Dtos.JobApplicationSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationSourcesController.DeleteJobApplicationSourcesAsync(System.String)">
            <summary>
            Delete (DELETE) a jobApplicationSources
            </summary>
            <param name="guid">GUID to desired jobApplicationSources</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController">
            <summary>
            Provides access to JobApplicationStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the JobApplicationStatusesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController.GetJobApplicationStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all job-application-statuses
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.JobApplicationStatuses">JobApplicationStatuses</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController.GetJobApplicationStatusesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing job-application-statuses
            </summary>
            <param name="guid">GUID of the job-application-statuses to get</param>
            <returns>A jobApplicationStatuses object <see cref="T:Ellucian.Colleague.Dtos.JobApplicationStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController.PostJobApplicationStatusesAsync(Ellucian.Colleague.Dtos.JobApplicationStatuses)">
            <summary>
            Create (POST) a new jobApplicationStatuses
            </summary>
            <param name="jobApplicationStatuses">DTO of the new jobApplicationStatuses</param>
            <returns>A jobApplicationStatuses object <see cref="T:Ellucian.Colleague.Dtos.JobApplicationStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController.PutJobApplicationStatusesAsync(System.String,Ellucian.Colleague.Dtos.JobApplicationStatuses)">
            <summary>
            Update (PUT) an existing jobApplicationStatuses
            </summary>
            <param name="guid">GUID of the jobApplicationStatuses to update</param>
            <param name="jobApplicationStatuses">DTO of the updated jobApplicationStatuses</param>
            <returns>A jobApplicationStatuses object <see cref="T:Ellucian.Colleague.Dtos.JobApplicationStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobApplicationStatusesController.DeleteJobApplicationStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a jobApplicationStatuses
            </summary>
            <param name="guid">GUID to desired jobApplicationStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController">
            <summary>
            Provides access to Job Change Reasons data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IJobChangeReasonService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the JobChangeReasonsController class.
            </summary>
            <param name="jobChangeReasonService">Service of type <see cref="!:IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController.GetJobChangeReasonsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 7</remarks>
            <summary>
            Retrieves all rehire types.
            </summary>
            <returns>All JobChangeReason objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController.GetJobChangeReasonByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 7</remarks>
            <summary>
            Retrieves a rehire type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.JobChangeReason">JobChangeReason.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController.PutJobChangeReasonAsync(Ellucian.Colleague.Dtos.JobChangeReason)">
            <summary>
            Updates a JobChangeReason.
            </summary>
            <param name="jobChangeReason"><see cref="!:JobChangeReason">JobChangeReason</see> to update</param>
            <returns>Newly updated <see cref="!:JobChangeReason">JobChangeReason</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController.PostJobChangeReasonAsync(Ellucian.Colleague.Dtos.JobChangeReason)">
            <summary>
            Creates a JobChangeReason.
            </summary>
            <param name="jobChangeReason"><see cref="!:JobChangeReason">JobChangeReason</see> to create</param>
            <returns>Newly created <see cref="!:JobChangeReason">JobChangeReason</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.JobChangeReasonsController.DeleteJobChangeReasonAsync(System.String)">
            <summary>
            Delete (DELETE) an existing JobChangeReason
            </summary>
            <param name="id">Id of the JobChangeReason to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveBalanceConfigurationController">
            <summary>
            Provides access to Leave balance configuration items
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveBalanceConfigurationController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.ILeaveBalanceConfigurationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="leaveBalanceConfigurationService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveBalanceConfigurationController.GetLeaveBalanceConfigurationAsync">
            <summary>
            Gets the configurations for leave balance
            </summary>
            <returns>LeaveBalanceConfiguration</returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController">
            <summary>
            Provides access to LeaveCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LeaveCategoriesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController.GetLeaveCategoriesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all leave-categories
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.LeaveCategories">LeaveCategories</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController.GetLeaveCategoriesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing leave-categories
            </summary>
            <param name="guid">GUID of the leave-categories to get</param>
            <returns>A leaveCategories object <see cref="T:Ellucian.Colleague.Dtos.LeaveCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController.PostLeaveCategoriesAsync(Ellucian.Colleague.Dtos.LeaveCategories)">
            <summary>
            Create (POST) a new leaveCategories
            </summary>
            <param name="leaveCategories">DTO of the new leaveCategories</param>
            <returns>A leaveCategories object <see cref="T:Ellucian.Colleague.Dtos.LeaveCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController.PutLeaveCategoriesAsync(System.String,Ellucian.Colleague.Dtos.LeaveCategories)">
            <summary>
            Update (PUT) an existing leaveCategories
            </summary>
            <param name="guid">GUID of the leaveCategories to update</param>
            <param name="leaveCategories">DTO of the updated leaveCategories</param>
            <returns>A leaveCategories object <see cref="T:Ellucian.Colleague.Dtos.LeaveCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveCategoriesController.DeleteLeaveCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a leaveCategories
            </summary>
            <param name="guid">GUID to desired leaveCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController">
            <summary>
            Provides access to LeavePlans
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.ILeavePlansService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LeavePlansController class.
            </summary>
            <param name="leavePlansService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.ILeavePlansService">ILeavePlansService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController.GetLeavePlansAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all leavePlans
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of LeavePlans <see cref="T:Ellucian.Colleague.Dtos.LeavePlans"/> objects representing matching leavePlans</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController.GetLeavePlansByGuidAsync(System.String)">
            <summary>
            Read (GET) a leavePlans using a GUID
            </summary>
            <param name="guid">GUID to desired leavePlans</param>
            <returns>A leavePlans object <see cref="T:Ellucian.Colleague.Dtos.LeavePlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController.PostLeavePlansAsync(Ellucian.Colleague.Dtos.LeavePlans)">
            <summary>
            Create (POST) a new leavePlans
            </summary>
            <param name="leavePlans">DTO of the new leavePlans</param>
            <returns>A leavePlans object <see cref="T:Ellucian.Colleague.Dtos.LeavePlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController.PutLeavePlansAsync(System.String,Ellucian.Colleague.Dtos.LeavePlans)">
            <summary>
            Update (PUT) an existing leavePlans
            </summary>
            <param name="guid">GUID of the leavePlans to update</param>
            <param name="leavePlans">DTO of the updated leavePlans</param>
            <returns>A leavePlans object <see cref="T:Ellucian.Colleague.Dtos.LeavePlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeavePlansController.DeleteLeavePlansAsync(System.String)">
            <summary>
            Delete (DELETE) a leavePlans
            </summary>
            <param name="guid">GUID to desired leavePlans</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController">
            <summary>
            Provides access to LeaveTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.ILeaveTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LeaveTypesController class.
            </summary>
            <param name="leaveTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.ILeaveTypesService">ILeaveTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController.GetLeaveTypesAsync">
            <summary>
            Return all leaveTypes
            </summary>
            <returns>List of LeaveTypes <see cref="T:Ellucian.Colleague.Dtos.LeaveTypes"/> objects representing matching leaveTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController.GetLeaveTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a leaveTypes using a GUID
            </summary>
            <param name="guid">GUID to desired leaveTypes</param>
            <returns>A leaveTypes object <see cref="T:Ellucian.Colleague.Dtos.LeaveTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController.PostLeaveTypesAsync(Ellucian.Colleague.Dtos.LeaveTypes)">
            <summary>
            Create (POST) a new leaveTypes
            </summary>
            <param name="leaveTypes">DTO of the new leaveTypes</param>
            <returns>A leaveTypes object <see cref="T:Ellucian.Colleague.Dtos.LeaveTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController.PutLeaveTypesAsync(System.String,Ellucian.Colleague.Dtos.LeaveTypes)">
            <summary>
            Update (PUT) an existing leaveTypes
            </summary>
            <param name="guid">GUID of the leaveTypes to update</param>
            <param name="leaveTypes">DTO of the updated leaveTypes</param>
            <returns>A leaveTypes object <see cref="T:Ellucian.Colleague.Dtos.LeaveTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LeaveTypesController.DeleteLeaveTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a leaveTypes
            </summary>
            <param name="guid">GUID to desired leaveTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.LoadPeriodsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LoadPeriodsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.ILoadPeriodService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LoadPeriodsController class.
            </summary>
            <param name="loadPeriodService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.ILoadPeriodService">ILoadPeriodService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.LoadPeriodsController.QueryLoadPeriodsAsync(Ellucian.Colleague.Dtos.Base.LoadPeriodQueryCriteria)">
            <summary>
            Query Load Periods
            </summary>
            <param name="loadPeriodQueryCriteria">Load Period Query Criteria</param>
            <returns>Load periods</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.OrganizationalChartController">
            <summary>
            Exposes Organizational Chart data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.OrganizationalChartController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IOrganizationalChartService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="organizationalChartService"></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.OrganizationalChartController.GetOrganizationalChartAsync(System.String)">
            <summary>
            Gets a list of employees for the organizational chart.
            </summary>
            <param name="rootEmployeeId">The employee id of the root employee to build the org chat off of</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.HumanResources.OrgChartEmployee"> objects.</see></returns>
            <accessComments>
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.OrganizationalChartController.GetOrganizationalChartEmployeeAsync(System.String)">
            <summary>
            Gets a single employee for the org chart.
            </summary>
            <param name="rootEmployeeId">The employee id of the root employee to build the org chat off of</param>
            <returns>A single <see cref="T:Ellucian.Colleague.Dtos.HumanResources.OrgChartEmployee"> object.</see></returns>
            <accessComments>
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.OrganizationalChartController.QueryEmployeesByPostAsync(Ellucian.Colleague.Dtos.Base.EmployeeNameQueryCriteria)">
            <summary>
            Gets a list of employees matching the given search criteria.
            </summary>
            <param name="criteria">An object that specifies search criteria.</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.HumanResources.EmployeeSearchResult"> objects.</see></returns>
            <accessComments>
            Only the users with VIEW.ORG.CHART permission can query employee names.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController">
            <summary>
            Provides access to PayClasses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPayClassesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PayClassesController class.
            </summary>
            <param name="payClassesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPayClassesService">IPayClassesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.GetPayClassesAsync">
            <summary>
            Return all payClasses
            </summary>
            <returns>List of PayClasses <see cref="T:Ellucian.Colleague.Dtos.PayClasses"/> objects representing matching payClasses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.GetPayClassesByGuidAsync(System.String)">
            <summary>
            Read (GET) a payClasses using a GUID
            </summary>
            <param name="guid">GUID to desired payClasses</param>
            <returns>A payClasses object <see cref="T:Ellucian.Colleague.Dtos.PayClasses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.GetPayClasses2Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all payClasses
            </summary>
            <returns>List of PayClasses <see cref="T:Ellucian.Colleague.Dtos.PayClasses"/> objects representing matching payClasses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.GetPayClassesByGuid2Async(System.String)">
            <summary>
            Read (GET) a payClasses using a GUID
            </summary>
            <param name="guid">GUID to desired payClasses</param>
            <returns>A payClasses object <see cref="T:Ellucian.Colleague.Dtos.PayClasses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.PostPayClassesAsync(Ellucian.Colleague.Dtos.PayClasses)">
            <summary>
            Create (POST) a new payClasses
            </summary>
            <param name="payClasses">DTO of the new payClasses</param>
            <returns>A payClasses object <see cref="T:Ellucian.Colleague.Dtos.PayClasses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.PutPayClassesAsync(System.String,Ellucian.Colleague.Dtos.PayClasses)">
            <summary>
            Update (PUT) an existing payClasses
            </summary>
            <param name="guid">GUID of the payClasses to update</param>
            <param name="payClasses">DTO of the updated payClasses</param>
            <returns>A payClasses object <see cref="T:Ellucian.Colleague.Dtos.PayClasses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassesController.DeletePayClassesAsync(System.String)">
            <summary>
            Delete (DELETE) a payClasses
            </summary>
            <param name="guid">GUID to desired payClasses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController">
            <summary>
            Provides access to PayClassifications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPayClassificationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PayClassificationsController class.
            </summary>
            <param name="payClassificationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPayClassificationsService">IPayClassificationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.GetPayClassificationsAsync">
            <summary>
            Return all payClassifications
            </summary>
            <returns>List of PayClassifications <see cref="T:Ellucian.Colleague.Dtos.PayClassifications"/> objects representing matching payClassifications</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.GetPayClassificationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a payClassifications using a GUID
            </summary>
            <param name="guid">GUID to desired payClassifications</param>
            <returns>A payClassifications object <see cref="T:Ellucian.Colleague.Dtos.PayClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.GetPayClassifications2Async">
            <summary>
            Return all payClassifications
            </summary>
            <returns>List of PayClassifications <see cref="T:Ellucian.Colleague.Dtos.PayClassifications2"/> objects representing matching payClassifications</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.GetPayClassificationsByGuid2Async(System.String)">
            <summary>
            Read (GET) a payClassifications using a GUID
            </summary>
            <param name="guid">GUID to desired payClassifications</param>
            <returns>A payClassifications object <see cref="T:Ellucian.Colleague.Dtos.PayClassifications2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.PostPayClassificationsAsync(Ellucian.Colleague.Dtos.PayClassifications)">
            <summary>
            Create (POST) a new payClassifications
            </summary>
            <param name="payClassifications">DTO of the new payClassifications</param>
            <returns>A payClassifications object <see cref="T:Ellucian.Colleague.Dtos.PayClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.PutPayClassificationsAsync(System.String,Ellucian.Colleague.Dtos.PayClassifications)">
            <summary>
            Update (PUT) an existing payClassifications
            </summary>
            <param name="guid">GUID of the payClassifications to update</param>
            <param name="payClassifications">DTO of the updated payClassifications</param>
            <returns>A payClassifications object <see cref="T:Ellucian.Colleague.Dtos.PayClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayClassificationsController.DeletePayClassificationsAsync(System.String)">
            <summary>
            Delete (DELETE) a payClassifications
            </summary>
            <param name="guid">GUID to desired payClassifications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController">
            <summary>
            Expose Human Resources Pay Cycles data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.HumanResources.Services.IPayCycleService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PayCyclesController constructor
            </summary>
            <param name="logger"></param>
            <param name="adapterRegistry"></param>
            <param name="payCycleService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.GetPayCyclesAsync(System.Nullable{System.DateTime})">
            <summary>
            Gets all the pay cycles available for an institution.
            A pay cycle describes a date interval to which employee time worked is applied and processed
            Results can be limited by passing in a lookback date. Pay Periods with end dates before the specified lookback date will be omitted.
            </summary>
            <accessComments>Any authenticated user can get these resources</accessComments>
            <param name="lookbackDate">A optional date which is used to filter previous pay periods with end dates prior to this date.</param>
            <returns>A List of pay cycle dtos</returns>
            <note>PayCycle is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.GetPayCycles2Async">
            <summary>
            Return all payCycles
            </summary>
            <returns>List of PayCycles <see cref="T:Ellucian.Colleague.Dtos.PayCycles"/> objects representing matching payCycles</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.GetPayCyclesByGuidAsync(System.String)">
            <summary>
            Read (GET) a payCycles using a GUID
            </summary>
            <param name="guid">GUID to desired payCycles</param>
            <returns>A payCycles object <see cref="T:Ellucian.Colleague.Dtos.PayCycles"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.PostPayCyclesAsync(Ellucian.Colleague.Dtos.PayCycles)">
            <summary>
            Create (POST) a new payCycles
            </summary>
            <param name="payCycles">DTO of the new payCycles</param>
            <returns>A payCycles object <see cref="T:Ellucian.Colleague.Dtos.PayCycles"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.PutPayCyclesAsync(System.String,Ellucian.Colleague.Dtos.PayCycles)">
            <summary>
            Update (PUT) an existing payCycles
            </summary>
            <param name="guid">GUID of the payCycles to update</param>
            <param name="payCycles">DTO of the updated payCycles</param>
            <returns>A payCycles object <see cref="T:Ellucian.Colleague.Dtos.PayCycles"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayCyclesController.DeletePayCyclesAsync(System.String)">
            <summary>
            Delete (DELETE) a payCycles
            </summary>
            <param name="guid">GUID to desired payCycles</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController">
            <summary>
            Provides access to PayPeriods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPayPeriodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PayPeriodsController class.
            </summary>
            <param name="payPeriodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPayPeriodsService">IPayPeriodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController.GetPayPeriodsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all payPeriods
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">API criteria info to filter on.</param>
            <returns>List of PayPeriods <see cref="T:Ellucian.Colleague.Dtos.PayPeriods"/> objects representing matching payPeriods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController.GetPayPeriodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a payPeriods using a GUID
            </summary>
            <param name="guid">GUID to desired payPeriods</param>
            <returns>A payPeriods object <see cref="T:Ellucian.Colleague.Dtos.PayPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController.PostPayPeriodsAsync(Ellucian.Colleague.Dtos.PayPeriods)">
            <summary>
            Create (POST) a new payPeriods
            </summary>
            <param name="payPeriods">DTO of the new payPeriods</param>
            <returns>A payPeriods object <see cref="T:Ellucian.Colleague.Dtos.PayPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController.PutPayPeriodsAsync(System.String,Ellucian.Colleague.Dtos.PayPeriods)">
            <summary>
            Update (PUT) an existing payPeriods
            </summary>
            <param name="guid">GUID of the payPeriods to update</param>
            <param name="payPeriods">DTO of the updated payPeriods</param>
            <returns>A payPeriods object <see cref="T:Ellucian.Colleague.Dtos.PayPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayPeriodsController.DeletePayPeriodsAsync(System.String)">
            <summary>
            Delete (DELETE) a payPeriods
            </summary>
            <param name="guid">GUID to desired payPeriods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController">
            <summary>
            Exposes payroll deduction arrangement change reasons data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPayrollDeductionArrangementChangeReasonsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ..ctor
            </summary>
            <param name="logger"></param>
            <param name="payrollDeductionArrangementChangeReasonsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController.GetAllPayrollDeductionArrangementChangeReasonsAsync">
            <summary>
            Returns all payroll deduction arrangement change reasons.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController.GetPayrollDeductionArrangementChangeReasonByIdAsync(System.String)">
            <summary>
            Returns a payroll deduction arrangement change reason.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController.PutPayrollDeductionArrangementChangeReasonAsync(Ellucian.Colleague.Dtos.PayrollDeductionArrangementChangeReason)">
            <summary>
            PutPayrollDeductionArrangementChangeReasonAsync
            </summary>
            <param name="payrollDeductionArrangementChangeReason"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController.PostPayrollDeductionArrangementChangeReasonAsync(Ellucian.Colleague.Dtos.PayrollDeductionArrangementChangeReason)">
            <summary>
            PostPayrollDeductionArrangementChangeReasonAsync
            </summary>
            <param name="payrollDeductionArrangementChangeReason"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementChangeReasonsController.DeletePayrollDeductionArrangementChangeReasonAsync(System.String)">
            <summary>
            DeletePayrollDeductionArrangementChangeReasonAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController">
            <summary>
            Exposes payroll deduction arrangement change data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPayrollDeductionArrangementService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ..ctor
            </summary>
            <param name="logger"></param>
            <param name="payrollDeductionArrangementsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController.GetPayrollDeductionArrangementsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String)">
            <summary>
            Accept requests from external systems for new employee deductions in the authoritative HR system.
            </summary>
            <param name="page">Page of items for Paging</param>
            <param name="person">Person GUID filter</param>
            <param name="contribution">Contribution ID filter</param>
            <param name="deductionType">Deposit Type filter</param>
            <param name="status">Status Type filter</param>
            <returns>HTTP action results object containing <see cref="T:Ellucian.Colleague.Dtos.PayrollDeductionArrangements"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController.GetPayrollDeductionArrangementByIdAsync(System.String)">
            <summary>
            Returns a payroll deduction arrangement.
            </summary>
            <param name="id">Global Identifier for PayrollDeductionArrangement</param>
            <returns>Object of type <see cref="T:Ellucian.Colleague.Dtos.PayrollDeductionArrangements"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController.PutPayrollDeductionArrangementAsync(System.String,Ellucian.Colleague.Dtos.PayrollDeductionArrangements)">
            <summary>
            PutPayrollDeductionArrangementAsync
            </summary>
            <param name="id">Id for the PayrollDeduction Arrangement</param>
            <param name="payrollDeductionArrangement">The full request to update payroll deduction arrangement</param>
            <returns>Object of type <see cref="T:Ellucian.Colleague.Dtos.PayrollDeductionArrangements"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController.PostPayrollDeductionArrangementAsync(Ellucian.Colleague.Dtos.PayrollDeductionArrangements)">
            <summary>
            PostPayrollDeductionArrangementAsync
            </summary>
            <param name="payrollDeductionArrangement">The full request to create a new payroll deduction arrangement</param>
            <returns>Object of type <see cref="T:Ellucian.Colleague.Dtos.PayrollDeductionArrangements"/></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDeductionArrangementsController.DeletePayrollDeductionArrangementAsync(System.String)">
            <summary>
            DeletePayrollDeductionArrangementAsync
            </summary>
            <param name="id"></param>
            <returns>Unsupported Default message of type <see cref="P:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.DefaultNotSupportedApiErrorMessage"/></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController">
            <summary>
            Provides access to Payroll Deposit Directives
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPayrollDepositDirectiveService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PayrollDepositDirectives Controller constructor
            </summary>
            <param name="logger"></param>
            <param name="payrollDepositDirectiveService"></param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.GetPayrollDepositDirectivesAsync">
            <summary>
            Gets a list of PayrollDepositDirectives for the Current User
            </summary>
            <returns>The Current User's PayrollDepositDirectives</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.GetPayrollDepositDirectiveAsync(System.String)">
            <summary>
            Gets a single PayrollDepositDirective from its record identifier. Requested resource must be owned by the current user.
            </summary>
            <param name="id">The Id of the payroll deposit directive</param>
            <returns>The requested payroll deposit directive</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.UpdatePayrollDepositDirectivesAsync(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Base.PayrollDepositDirective})">
            <summary>
            Updates a list of payroll deposit directives. Use this endpoint to batch update directives all at once. You must obtain an authentication token from the URI.
            Accept: application/vnd.ellucian-step-up-authentication.v1+json
            POST payroll-deposit-directives endpoint 
                    
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header 
            if account authentication is enabled.
            
            </summary>
            <param name="payrollDepositDirectives">A list of PayrollDepositDirectives containing the updates.</param>
            <returns>The list of PayrollDepositDirectives with the successfully updated properties</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.UpdatePayrollDepositDirectiveAsync(System.String,Ellucian.Colleague.Dtos.Base.PayrollDepositDirective)">
            <summary>
            Updates a single PayrollDepositDirective. You must obtain an authentication token from the URI.
            Accept: application/vnd.ellucian-step-up-authentication.v1+json
            POST payroll-deposit-directives endpoint 
                    
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            </summary>
            <param name="id">The id of the directive being updated</param>
            <param name="payrollDepositDirective">The PayrollDepositDirective to update</param>
            <returns>The updated PayrollDepositDirective</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.CreatePayrollDepositDirectiveAsync(Ellucian.Colleague.Dtos.Base.PayrollDepositDirective)">
            <summary>
            Create a payroll deposit directive. You must obtain an authentication token from the URI.
            Accept: application/vnd.ellucian-step-up-authentication.v1+json
            POST payroll-deposit-directives endpoint 
                    
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            </summary>
            <param name="payrollDepositDirective">The PayrollDepositDirective to create</param>
            <returns>The created PayrollDepositDirective. Response Status will be 201 - Created </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.DeletePayrollDepositDirectiveAsync(System.String)">
            <summary>
            Deletes a single PayrollDepositDirective using its record identifier. You must obtain an authentication token from the URI.
            Accept: application/vnd.ellucian-step-up-authentication.v1+json
            POST payroll-deposit-directives endpoint 
                    
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            </summary>
            <param name="id">The Id of the directive to delete</param>
            <returns>HTTP Status 204 - No Content</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.DeletePayrollDepositDirectivesAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes one or more PayrollDepositDirective a list of record identifiers. You must obtain an authentication token from the URI. Each id must
            be provided in the request:
            
            Example:
                1. to delete a single PayrollDepositDirective use /payroll-deposit-directives?id=123
                2. to delete multiple PayrollDepositDirectives use /payroll-deposit-directives?id=123&amp;id=456
            
            Accept: application/vnd.ellucian-step-up-authentication.v1+json
            POST payroll-deposit-directives endpoint 
            
            The endpoint will not delete the requested PayrollDepositDirective(s) if:
                1.  400 - no ids are provided in the uri
                2.  403 - User does not have permission to delete requested record ids
                3.  403 - no BankingAuthenticationToken is povided
                4.  404 - requested id(s) do not exist
                
            The BankingAuthenticationToken.Token property is 
            required in the X-Step-Up-Authentication header
            if account authentication is enabled.
            
            </summary>
            <param name="id">The Id(s) of the directives to delete</param>
            <returns>HTTP Status 204 - No Content</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.PostPayrollDepositDirectiveAuthenticationAsync(System.String,System.String)">
            <summary>
            Post a request for authentication to create or update a PayrollDepositDirective.
            To create a directive, post authentication for the remainder directive. 
            </summary>
            <param name="id">id of the deposit directive to authenticate against</param>
            <param name="value">the authentication value, which should be the account id of the deposit directive specified by the id in the URI</param>
            <returns>A BankingAuthenticationToken object. Tokens expire after ten (10) minutes.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.PostPayrollDepositDirectivesAuthenticationAsync">
            <summary>
            Post a request for authentication to create a PayrollDepositDirective when an employee has no existing directives
            </summary>
            <returns>A BankingAuthenticationToken object. Tokens expire after ten (10) minutes.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayrollDepositDirectivesController.GetStepUpAuthenticationHeaderValue">
            <summary>
            Gets the value of the token used for Step-Up Authentication
            </summary>
            <returns>The first X-Step-Up-Authentication header value, if present. Otherwise null.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController">
            <summary>
            Provides access to PayScales
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPayScalesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PayScalesController class.
            </summary>
            <param name="payScalesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPayScalesService">IPayScalesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController.GetPayScalesAsync">
            <summary>
            Return all payScales
            </summary>
            <returns>List of PayScales <see cref="T:Ellucian.Colleague.Dtos.PayScales"/> objects representing matching payScales</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController.GetPayScalesByGuidAsync(System.String)">
            <summary>
            Read (GET) a payScales using a GUID
            </summary>
            <param name="guid">GUID to desired payScales</param>
            <returns>A payScales object <see cref="T:Ellucian.Colleague.Dtos.PayScales"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController.PostPayScalesAsync(Ellucian.Colleague.Dtos.PayScales)">
            <summary>
            Create (POST) a new payScales
            </summary>
            <param name="payScales">DTO of the new payScales</param>
            <returns>A payScales object <see cref="T:Ellucian.Colleague.Dtos.PayScales"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController.PutPayScalesAsync(System.String,Ellucian.Colleague.Dtos.PayScales)">
            <summary>
            Update (PUT) an existing payScales
            </summary>
            <param name="guid">GUID of the payScales to update</param>
            <param name="payScales">DTO of the updated payScales</param>
            <returns>A payScales object <see cref="T:Ellucian.Colleague.Dtos.PayScales"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayScalesController.DeletePayScalesAsync(System.String)">
            <summary>
            Delete (DELETE) a payScales
            </summary>
            <param name="guid">GUID to desired payScales</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementConfigurationController">
            <summary>
            Pay Statement Configuration Controller routes requests for configurations for pay statements
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementConfigurationController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPayStatementConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="payStatementConfigurationService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementConfigurationController.GetPayStatementConfigurationAsync">
            <summary>
            Get the pay statement configuration for the environment.
            
            A successful request will return a status code of 200 and a pay statement configuration object
            An unsuccessful request will return a status code of 400
            </summary>
            <returns>A PayStatementConfiguration object that can be used to govern Employee Self Service Earnings Statements</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController">
            <summary>
            Pay Statements Controller routes requests for interacting with pay statements
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPayStatementService,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="logger">logger</param>
            <param name="payStatementService">pay statement service</param>
            <param name="apiSettings">api settings</param>
            <param name="actionContextAccessor"></param>
            <param name="webHostEnvironment"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController.GetPayStatementSummariesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets a list of summaries of all pay statements for the current user, or, if you have the proper permissions, for any
            employee.
            A summary object corresponds to a pay statement record. You can use the id of the PayStatement in a request for a
            Pay Statement Report.
            Use the filter start and end dates to filter out 
            A successful request will return a status code 200 response and a list of pay statement summary object.    
            </summary>
            <param name="employeeId">optional: the employee identifier</param>
            <param name="hasOnlineConsent">optional: whether the employee has consented to viewing statements online</param>
            <param name="payCycleId">optional: the pay cycle in which the employee was paid that generated this statement</param>
            <param name="payDate">optional: the date the employee was paid</param>
            <param name="startDate">optional: start date to filter pay statements by</param>
            <param name="endDate">optional: end date to filter pay statements by</param>
            <returns>An array of PayStatementSummary objects for the requested parameters</returns>
            <note>Pay Statements are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController.QueryPayStatementPdfs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Query multiple Pay Statement PDFs for the given ids
            </summary>
            <param name="ids">a list of Pay Statement ids to generate into a single PDF</param>
            <returns>a single PDF containing the pay statements specified in the list of ids</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController.GetPayStatementPdf(System.String)">
            <summary>
            Get Pay Statement PDF for the given id. The requested statement must 
            be owned by the authenticated user, or the user must have the proper permissions.
            </summary>
            <param name="id">The id of the requested Pay Statement</param>
            <returns>An HttpResponseMessage with the Content property containing a byte[] of the PDF</returns>
            <note>PayStatementSummary is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController.GetPayStatementInformationAsync(System.String)">
            <summary>
            This ethos end-point will return the pay statement information for a given id.
            The requested pay statement must be owned by the authenticated user.
            </summary>
            <param name="id">The id of the requested pay statement.</param>      
            <returns>The requested PayStatementInformation DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PayStatementsController.GetAllPayStatementInformationAsync">
            <summary>        
            Get all PayStatementInformation
            </summary>
            <returns>PayStatementInformation objects</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController">
            <summary>
            Provides access to PersonAchievements
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonAchievementsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController.GetPersonAchievementsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all person-achievements
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonAchievement">PersonAchievements</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController.GetPersonAchievementByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing person-achievements
            </summary>
            <param name="guid">GUID of the person-achievements to get</param>
            <returns>A personAchievements object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonAchievement"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController.PostPersonAchievementAsync(Ellucian.Colleague.Dtos.HumanResources.PersonAchievement)">
            <summary>
            Create (POST) a new personAchievements
            </summary>
            <param name="personAchievement">DTO of the new personAchievements</param>
            <returns>A personAchievement object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonAchievement"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController.PutPersonAchievementAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.PersonAchievement)">
            <summary>
            Update (PUT) an existing personAchievements
            </summary>
            <param name="guid">GUID of the personAchievements to update</param>
            <param name="personAchievement">DTO of the updated personAchievement</param>
            <returns>A personAchievement object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonAchievement"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonAchievementsController.DeletePersonAchievementAsync(System.String)">
            <summary>
            Delete (DELETE) a personAchievements
            </summary>
            <param name="guid">GUID to desired personAchievement</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController">
            <summary>
            Provides access to PersonBeneficiaries
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPersonBeneficiariesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonBeneficiariesController class.
            </summary>
            <param name="personBeneficiariesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPersonBeneficiariesService">IPersonBeneficiariesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController.GetPersonBeneficiariesAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all personBeneficiaries
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of PersonBeneficiaries <see cref="T:Ellucian.Colleague.Dtos.PersonBeneficiaries"/> objects representing matching personBeneficiaries</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController.GetPersonBeneficiariesByGuidAsync(System.String)">
            <summary>
            Read (GET) a personBeneficiaries using a GUID
            </summary>
            <param name="guid">GUID to desired personBeneficiaries</param>
            <returns>A personBeneficiaries object <see cref="T:Ellucian.Colleague.Dtos.PersonBeneficiaries"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController.PostPersonBeneficiariesAsync(Ellucian.Colleague.Dtos.PersonBeneficiaries)">
            <summary>
            Create (POST) a new personBeneficiaries
            </summary>
            <param name="personBeneficiaries">DTO of the new personBeneficiaries</param>
            <returns>A personBeneficiaries object <see cref="T:Ellucian.Colleague.Dtos.PersonBeneficiaries"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController.PutPersonBeneficiariesAsync(System.String,Ellucian.Colleague.Dtos.PersonBeneficiaries)">
            <summary>
            Update (PUT) an existing personBeneficiaries
            </summary>
            <param name="guid">GUID of the personBeneficiaries to update</param>
            <param name="personBeneficiaries">DTO of the updated personBeneficiaries</param>
            <returns>A personBeneficiaries object <see cref="T:Ellucian.Colleague.Dtos.PersonBeneficiaries"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBeneficiariesController.DeletePersonBeneficiariesAsync(System.String)">
            <summary>
            Delete (DELETE) a personBeneficiaries
            </summary>
            <param name="guid">GUID to desired personBeneficiaries</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController">
            <summary>
            Provides access to PersonBenefitDependents
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPersonBenefitDependentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonBenefitDependentsController class.
            </summary>
            <param name="personBenefitDependentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPersonBenefitDependentsService">IPersonBenefitDependentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController.GetPersonBenefitDependentsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all personBenefitDependents
            </summary>
            <returns>List of PersonBenefitDependents <see cref="T:Ellucian.Colleague.Dtos.PersonBenefitDependents"/> objects representing matching personBenefitDependents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController.GetPersonBenefitDependentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a personBenefitDependents using a GUID
            </summary>
            <param name="guid">GUID to desired personBenefitDependents</param>
            <returns>A personBenefitDependents object <see cref="T:Ellucian.Colleague.Dtos.PersonBenefitDependents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController.PostPersonBenefitDependentsAsync(Ellucian.Colleague.Dtos.PersonBenefitDependents)">
            <summary>
            Create (POST) a new personBenefitDependents
            </summary>
            <param name="personBenefitDependents">DTO of the new personBenefitDependents</param>
            <returns>A personBenefitDependents object <see cref="T:Ellucian.Colleague.Dtos.PersonBenefitDependents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController.PutPersonBenefitDependentsAsync(System.String,Ellucian.Colleague.Dtos.PersonBenefitDependents)">
            <summary>
            Update (PUT) an existing personBenefitDependents
            </summary>
            <param name="guid">GUID of the personBenefitDependents to update</param>
            <param name="personBenefitDependents">DTO of the updated personBenefitDependents</param>
            <returns>A personBenefitDependents object <see cref="T:Ellucian.Colleague.Dtos.PersonBenefitDependents"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonBenefitDependentsController.DeletePersonBenefitDependentsAsync(System.String)">
            <summary>
            Delete (DELETE) a personBenefitDependents
            </summary>
            <param name="guid">GUID to desired personBenefitDependents</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController">
            <summary>
            Provides access to PersonEmploymentProficiencies
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPersonEmploymentProficienciesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonEmploymentProficienciesController class.
            </summary>
            <param name="personEmploymentProficienciesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPersonEmploymentProficienciesService">IPersonEmploymentProficienciesService</see></param>
            <param name="actionContextAccessor"></param>
            <param name="logger">Interface to logger</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController.GetPersonEmploymentProficienciesAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all personEmploymentProficiencies
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of PersonEmploymentProficiencies <see cref="T:Ellucian.Colleague.Dtos.PersonEmploymentProficiencies"/> objects representing matching personEmploymentProficiencies</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController.GetPersonEmploymentProficienciesByGuidAsync(System.String)">
            <summary>
            Read (GET) a personEmploymentProficiencies using a GUID
            </summary>
            <param name="guid">GUID to desired personEmploymentProficiencies</param>
            <returns>A personEmploymentProficiencies object <see cref="T:Ellucian.Colleague.Dtos.PersonEmploymentProficiencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController.PostPersonEmploymentProficienciesAsync(Ellucian.Colleague.Dtos.PersonEmploymentProficiencies)">
            <summary>
            Create (POST) a new personEmploymentProficiencies
            </summary>
            <param name="personEmploymentProficiencies">DTO of the new personEmploymentProficiencies</param>
            <returns>A personEmploymentProficiencies object <see cref="T:Ellucian.Colleague.Dtos.PersonEmploymentProficiencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController.PutPersonEmploymentProficienciesAsync(System.String,Ellucian.Colleague.Dtos.PersonEmploymentProficiencies)">
            <summary>
            Update (PUT) an existing personEmploymentProficiencies
            </summary>
            <param name="guid">GUID of the personEmploymentProficiencies to update</param>
            <param name="personEmploymentProficiencies">DTO of the updated personEmploymentProficiencies</param>
            <returns>A personEmploymentProficiencies object <see cref="T:Ellucian.Colleague.Dtos.PersonEmploymentProficiencies"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentProficienciesController.DeletePersonEmploymentProficienciesAsync(System.String)">
            <summary>
            Delete (DELETE) a personEmploymentProficiencies
            </summary>
            <param name="guid">GUID to desired personEmploymentProficiencies</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController">
            <summary>
            Provides access to PersonEmploymentReferences
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonEmploymentReferencesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController.GetPersonEmploymentReferencesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all person-employment-references
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonEmploymentReference">PersonEmploymentReferences</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController.GetPersonEmploymentReferencesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing person-employment-references
            </summary>
            <param name="guid">GUID of the person-employment-references to get</param>
            <returns>A personEmploymentReference object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonEmploymentReference"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController.PostPersonEmploymentReferenceAsync(Ellucian.Colleague.Dtos.HumanResources.PersonEmploymentReference)">
            <summary>
            Create (POST) a new personEmploymentReference
            </summary>
            <param name="personEmploymentReference">DTO of the new personEmploymentReference</param>
            <returns>A personEmploymentReference object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonEmploymentReference"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController.PutPersonEmploymentReferenceAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.PersonEmploymentReference)">
            <summary>
            Update (PUT) an existing personEmploymentReference
            </summary>
            <param name="guid">GUID of the personEmploymentReference to update</param>
            <param name="personEmploymentReference">DTO of the updated personEmploymentReference</param>
            <returns>A personEmploymentReference object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.PersonEmploymentReference"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentReferencesController.DeletePersonEmploymentReferenceAsync(System.String)">
            <summary>
            Delete (DELETE) a personEmploymentReference
            </summary>
            <param name="guid">GUID to desired personEmploymentReference</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentStatusesController">
            <summary>
            Exposes personemploymentstatus data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentStatusesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPersonEmploymentStatusService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="personEmploymentStatusService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonEmploymentStatusesController.GetPersonEmploymentStatusesAsync(System.String,System.Nullable{System.DateTime})">
             <summary>
             Get personEmploymentStatus objects. This endpoint returns objects based on the current
             user's/user with proxy's permissions.
             </summary>
             <accessComments>
             Example: If the current user is an admin, this endpoint returns the personEmploymentStatuses for the effectivePersonId
             Example: If the current user/user with proxy is an employee, this endpoint returns that employee's/proxied employee's personEmploymentStatuses
             Example: If the current user/user with proxy is a manager, this endpoint returns all the personEmploymentStatuses of the employees reporting to the manager
             Example: If the current user is a leave approver with the APPROVE.REJECT.LEAVE.REQUEST permission, this end point returns the leave approver's PersonEmploymentStatus
             and personEmploymentStatuses of all the employees whose leave requests are handled by this leave approver.
            </accessComments>
             <param name="effectivePersonId">Optional parameter for effective person Id</param>
             <param name="lookupStartDate">lookup start date, all records with end date before this date will not be retrieved</param>
             <returns>A list of PersonEmploymentStatus objects</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPositionsController">
            <summary>
            Exposes PersonPosition data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPositionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPersonPositionService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="personPositionService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPositionsController.GetPersonPositionsAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get PersonPosition objects. This endpoint returns objects based on the current
            user's permissions.
            Example: If the current user/user who has proxy is an employee, this endpoint returns that employee's/proxy's PersonPositions
            Example: If the current user/user who has proxy is a manager, this endpoint returns all the PersonPositions of the employees reporting to the manager
            Example: If the current user is an admin, this endpoint returns the PersonPositions for the effectivePersonId
            </summary>
            <param name="effectivePersonId">Optional parameter for effective personId</param>
            <param name="lookupStartDate">lookup start date, all records with end date before this date will not be retrieved</param>
            <returns>A list of PersonPosition objects</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPositionWagesController">
            <summary>
            PersonPositionWages Controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPositionWagesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPersonPositionWageService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="personPositionWageService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPositionWagesController.GetPersonPositionWagesAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets PersonPositionWage objects based on the authenticated user's permissions. 
            </summary> 
            <accessComments>
            This endpoint returns PersonPositionWage objects based on the current authenticated user's permissions.
            Example: If the current user is an admin, this endpoint returns the PersonPositionWages for the effectivePersonId.
            Example: If the current user/user who has proxy is an employee, this endpoint returns that employee's/proxy user's PersonPositionWages.
            Example: If the current user/user who has proxy is a supervisor with the permission ACCEPT.REJECT.TIME.ENTRY, this endpoint returns the supervisor's PersonPositionWages 
            and PersonPositionWages of all the employees reporting to this supervisor.
            Example: If the current user is a leave approver with the APPROVE.REJECT.LEAVE.REQUEST permission, this end point returns the leave approver's PersonPositionWages
            and PersonPositionWages of all the employees whose leave requests are handled by this leave approver.
            </accessComments>
            <param name="effectivePersonId">Optional parameter for effective personId, which should be used when proxying on behalf of another user.</param>
            <param name="lookupStartDate">lookup start date, all records with end date before this date will not be retrieved</param>
            <returns>A collection of PersonPositionWage objects</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController">
            <summary>
            Provides access to PersonPublications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PersonPublicationsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController.GetPersonPublicationsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all person-publications
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PersonPublications">PersonPublications</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController.GetPersonPublicationsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing person-publications
            </summary>
            <param name="guid">GUID of the person-publications to get</param>
            <returns>A personPublications object <see cref="T:Ellucian.Colleague.Dtos.PersonPublications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController.PostPersonPublicationsAsync(Ellucian.Colleague.Dtos.PersonPublications)">
            <summary>
            Create (POST) a new personPublications
            </summary>
            <param name="personPublications">DTO of the new personPublications</param>
            <returns>A personPublications object <see cref="T:Ellucian.Colleague.Dtos.PersonPublications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController.PutPersonPublicationsAsync(System.String,Ellucian.Colleague.Dtos.PersonPublications)">
            <summary>
            Update (PUT) an existing personPublications
            </summary>
            <param name="guid">GUID of the personPublications to update</param>
            <param name="personPublications">DTO of the updated personPublications</param>
            <returns>A personPublications object <see cref="T:Ellucian.Colleague.Dtos.PersonPublications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonPublicationsController.DeletePersonPublicationsAsync(System.String)">
            <summary>
            Delete (DELETE) a personPublications
            </summary>
            <param name="guid">GUID to desired personPublications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PersonStipendController">
            <summary>
            PersonStipend Controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonStipendController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.IPersonStipendService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="personStipendService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PersonStipendController.GetPersonStipendAsync(System.String)">
            <summary>
            Get PersonStipend objects. 
            </summary> 
            <accessComments>
            This endpoint returns PersonStipend objects based on the current user's permissions.
            Example: If the current user is an admin with the permission VIEW.ALL.TIME.HISTORY, this endpoint returns the PersonStipend objects for the effectivePersonId
            Example: If the current user/user who has proxy is an employee, this endpoint returns that employee's/proxy user's PersonStipend objects
            Example: If the current user/user who has proxy is a supervisor with the permission ACCEPT.REJECT.TIME.ENTRY, 
            this endpoint returns the supervisor's PersonStipend objects and all the PersonStipend objects of the supervisees (employees reporting to the supervisor)
            </accessComments>
            <param name="effectivePersonId">Optional parameter for effective personId, which should be used when proxying on behalf of another user.</param>
            <returns>PersonStipend objects</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController">
            <summary>
            Provides access to PositionClassifications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IPositionClassificationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PositionClassificationsController class.
            </summary>
            <param name="positionClassificationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.HumanResources.Services.IPositionClassificationsService">IPositionClassificationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController.GetPositionClassificationsAsync">
            <summary>
            Return all positionClassifications
            </summary>
            <returns>List of PositionClassifications <see cref="T:Ellucian.Colleague.Dtos.PositionClassification"/> objects representing matching positionClassifications</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController.GetPositionClassificationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a positionClassifications using a GUID
            </summary>
            <param name="guid">GUID to desired positionClassifications</param>
            <returns>A positionClassifications object <see cref="T:Ellucian.Colleague.Dtos.PositionClassification"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController.PostPositionClassificationsAsync(Ellucian.Colleague.Dtos.PositionClassification)">
            <summary>
            Create (POST) a new positionClassifications
            </summary>
            <param name="positionClassifications">DTO of the new positionClassifications</param>
            <returns>A positionClassifications object <see cref="T:Ellucian.Colleague.Dtos.PositionClassification"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController.PutPositionClassificationsAsync(System.String,Ellucian.Colleague.Dtos.PositionClassification)">
            <summary>
            Update (PUT) an existing positionClassifications
            </summary>
            <param name="guid">GUID of the positionClassifications to update</param>
            <param name="positionClassifications">DTO of the updated positionClassifications</param>
            <returns>A positionClassifications object <see cref="T:Ellucian.Colleague.Dtos.PositionClassification"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionClassificationsController.DeletePositionClassificationsAsync(System.String)">
            <summary>
            Delete (DELETE) a positionClassifications
            </summary>
            <param name="guid">GUID to desired positionClassifications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PositionsController">
            <summary>
            Expose Human Resources Employment Positions data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.HumanResources.Repositories.IPositionRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PositionsController constructor
            </summary>
            <param name="logger"></param>
            <param name="adapterRegistry"></param>
            <param name="positionRepository"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PositionsController.GetPositionsAsync">
            <summary>
            Gets a list of employee positions for an institution
            The list is unfiltered and will return all active and inactive positions
            </summary>
            <returns>A List of Position objects</returns>
            <note>Positions are cached for  24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController">
            <summary>
            Provides access to ProficiencyLicensingAuthorities
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ProficiencyLicensingAuthoritiesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController.GetProficiencyLicensingAuthoritiesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all proficiency-licensing-authorities
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.HumanResources.ProficiencyLicensingAuthority">ProficiencyLicensingAuthorities</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController.GetProficiencyLicensingAuthorityByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing proficiency-licensing-authorities
            </summary>
            <param name="guid">GUID of the proficiency-licensing-authority to get</param>
            <returns>A proficiencyLicensingAuthority object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.ProficiencyLicensingAuthority"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController.PostProficiencyLicensingAuthorityAsync(Ellucian.Colleague.Dtos.HumanResources.ProficiencyLicensingAuthority)">
            <summary>
            Create (POST) a new proficiencyLicensingAuthority
            </summary>
            <param name="proficiencyLicensingAuthority">DTO of the new proficiencyLicensingAuthority</param>
            <returns>A proficiencyLicensingAuthority object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.ProficiencyLicensingAuthority"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController.PutProficiencyLicensingAuthorityAsync(System.String,Ellucian.Colleague.Dtos.HumanResources.ProficiencyLicensingAuthority)">
            <summary>
            Update (PUT) an existing proficiencyLicensingAuthority
            </summary>
            <param name="guid">GUID of the proficiencyLicensingAuthorities to update</param>
            <param name="proficiencyLicensingAuthority">DTO of the updated proficiencyLicensingAuthority</param>
            <returns>A proficiencyLicensingAuthority object <see cref="T:Ellucian.Colleague.Dtos.HumanResources.ProficiencyLicensingAuthority"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.ProficiencyLicensingAuthoritiesController.DeleteProficiencyLicensingAuthorityAsync(System.String)">
            <summary>
            Delete (DELETE) a proficiencyLicensingAuthorities
            </summary>
            <param name="guid">GUID to desired proficiencyLicensingAuthority</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController">
            <summary>
            Provides access to PublicationTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PublicationTypesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController.GetPublicationTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all publication-types
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.PublicationTypes">PublicationTypes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController.GetPublicationTypesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing publication-types
            </summary>
            <param name="guid">GUID of the publication-types to get</param>
            <returns>A publicationTypes object <see cref="T:Ellucian.Colleague.Dtos.PublicationTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController.PostPublicationTypesAsync(Ellucian.Colleague.Dtos.PublicationTypes)">
            <summary>
            Create (POST) a new publicationTypes
            </summary>
            <param name="publicationTypes">DTO of the new publicationTypes</param>
            <returns>A publicationTypes object <see cref="T:Ellucian.Colleague.Dtos.PublicationTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController.PutPublicationTypesAsync(System.String,Ellucian.Colleague.Dtos.PublicationTypes)">
            <summary>
            Update (PUT) an existing publicationTypes
            </summary>
            <param name="guid">GUID of the publicationTypes to update</param>
            <param name="publicationTypes">DTO of the updated publicationTypes</param>
            <returns>A publicationTypes object <see cref="T:Ellucian.Colleague.Dtos.PublicationTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.PublicationTypesController.DeletePublicationTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a publicationTypes
            </summary>
            <param name="guid">GUID to desired publicationTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController">
            <summary>
            Provides access to Rehire Types data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController.#ctor(Ellucian.Colleague.Coordination.HumanResources.Services.IRehireTypeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RehireTypesController class.
            </summary>
            <param name="rehireTypeService">Service of type <see cref="!:IDemographicService">IDemographicService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController.GetRehireTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 7</remarks>
            <summary>
            Retrieves all rehire types.
            </summary>
            <returns>All RehireType objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController.GetRehireTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM VERSION 7</remarks>
            <summary>
            Retrieves a rehire type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.RehireType">RehireType.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController.PutRehireTypeAsync(Ellucian.Colleague.Dtos.RehireType)">
            <summary>
            Updates a RehireType.
            </summary>
            <param name="rehireType"><see cref="!:RehireType">RehireType</see> to update</param>
            <returns>Newly updated <see cref="!:RehireType">RehireType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController.PostRehireTypeAsync(Ellucian.Colleague.Dtos.RehireType)">
            <summary>
            Creates a RehireType.
            </summary>
            <param name="rehireType"><see cref="!:RehireType">RehireType</see> to create</param>
            <returns>Newly created <see cref="!:RehireType">RehireType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.RehireTypesController.DeleteRehireTypeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing RehireType
            </summary>
            <param name="id">Id of the RehireType to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.HumanResources.TaxFormStatementsController">
            <summary>
            This is the controller for the type of Tax Form Statements.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.TaxFormStatementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.HumanResources.Services.ITaxFormStatementService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the Tax Form Statement controller.
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="taxFormStatementService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.HumanResources.TaxFormStatementsController.GetAsync(System.String,Ellucian.Colleague.Dtos.Base.TaxForms)">
            <summary>
            Returns a set of tax form statements for the specified person and tax form ID (W-2, 1095-C, etc.).
            </summary>
            <param name="personId">Person ID</param>
            <param name="taxFormId">Tax Form ID</param>
            <returns>Set of tax form statements</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Planning.AdviseesController">
            <summary>
            AdviseesController
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.AdviseesController.#ctor(Ellucian.Colleague.Coordination.Planning.Services.IAdvisorService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdvisorsController constructor
            </summary>
            <param name="advisorService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Planning.Services.IAdvisorService">IAdvisorService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.AdviseesController.QueryAdviseesByPost2Async(Ellucian.Colleague.Dtos.Planning.AdviseeSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Search advisees by their name or ID, or by their assigned advisor's name or ID. This returns a set of advisees.
            These searches can only be done by advisors or staff with permissions to view an appropriate group of advisees.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Planning.AdviseeSearchCriteria">Advisee search criteria</see></param>
            <param name="pageIndex">Index of page to return</param>
            <param name="pageSize">Number of records per page</param>
            <returns>All Advisees that matched the search criteria. Advisee privacy is enforced by this 
            response. If any advisee has an assigned privacy code that the advisor is not authorized to access, the Advisee response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. In this situation, 
            all details except the advisee name are cleared from the specific advisee object.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this advisor's data. No special role is needed to get this basic information.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes may query their own list of assigned advisees using the search criteria 
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may search for any student using the search criteria 
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Advisee privacy is enforced by this response. If any advisee has an assigned privacy code that the advisor is not authorized to access, 
            the Advisee response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. 
            In this situation, all details except the advisee name are cleared from the specific advisee object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.AdviseesController.QueryAdviseesForExactMatchByPostAsync(Ellucian.Colleague.Dtos.Planning.AdviseeSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Search advisees by their name or ID, or by their assigned advisor's name or ID. This returns a set of advisees.
            These searches can only be done by advisors or staff with permissions to view an appropriate group of advisees.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Planning.AdviseeSearchCriteria">Advisee search criteria</see></param>
            <param name="pageIndex">Index of page to return</param>
            <param name="pageSize">Number of records per page</param>
            <returns>All Advisees that matched the search criteria. Advisee privacy is enforced by this 
            response. If any advisee has an assigned privacy code that the advisor is not authorized to access, the Advisee response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. In this situation, 
            all details except the advisee name are cleared from the specific advisee object.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this advisor's data. No special role is needed to get this basic information.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes may query their own list of assigned advisees using the search criteria 
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may search for any student using the search criteria 
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Advisee privacy is enforced by this response. If any advisee has an assigned privacy code that the advisor is not authorized to access, 
            the Advisee response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. 
            In this situation, all details except the advisee name are cleared from the specific advisee object.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Planning.AdvisementsCompleteController">
            <summary>
            AdvisementsCompleteController
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.AdvisementsCompleteController.#ctor(Ellucian.Colleague.Coordination.Planning.Services.IAdvisorService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdvisementsCompleteController constructor
            </summary>
            <param name="advisorService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Planning.Services.IAdvisorService">IAdvisorService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.AdvisementsCompleteController.PostCompletedAdvisementAsync(System.String,Ellucian.Colleague.Dtos.Student.CompletedAdvisement)">
            <summary>
            Posts a <see cref="T:Ellucian.Colleague.Dtos.Student.CompletedAdvisement">completed advisement</see>
            </summary>
            <param name="studentId">ID of the student whose advisement is being marked complete</param>
            <param name="completeAdvisement">A <see cref="T:Ellucian.Colleague.Dtos.Student.CompletedAdvisement">completed advisement</see></param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Planning.Advisee">advisee</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Planning.DegreePlanReviewRequestsController">
            <summary>
            Provides access to degree plan review requests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.DegreePlanReviewRequestsController.#ctor(Ellucian.Colleague.Coordination.Planning.Services.IDegreePlanService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            DegreePlanReviewRequestsController class constructor
            </summary>
            <param name="degreePlanService"></param>
            <param name="logger"></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.DegreePlanReviewRequestsController.QueryDegreePlanReviewRequests(Ellucian.Colleague.Dtos.Planning.DegreePlansSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Retrieves a student's degree plan submitted for review
            </summary>
            <param name="criteria"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <accessComments>
            Degree plan review request can be accessed by any of the following permissions:
            ALL.ACCESS.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            VIEW.ANY.ADVISEE
            UPDATE.ADVISOR.ASSIGNMENTS
            </accessComments>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Planning.DegreePlanReviewRequest">DegreePlanReviewRequest</see> Dto</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.DegreePlanReviewRequestsController.QueryDegreePlanReviewRequestsForExactMatchAsync(Ellucian.Colleague.Dtos.Planning.DegreePlansSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Retrieves a student's degree plan submitted for review
            </summary>
            <param name="criteria"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <accessComments>
            Degree plan review request can be accessed by any of the following permissions:
            ALL.ACCESS.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            VIEW.ANY.ADVISEE
            UPDATE.ADVISOR.ASSIGNMENTS
            </accessComments>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Planning.DegreePlanReviewRequest">DegreePlanReviewRequest</see> Dto</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.DegreePlanReviewRequestsController.PostAsync(Ellucian.Colleague.Dtos.Planning.DegreePlanReviewRequest)">
            <summary>
            Post Degree plan review request assignment details
            </summary>
            <param name="degreePlanReviewRequest"></param>
            <accessComments>
            Degree plan review assignment can be created any of the following permissions:
            UPDATE.ADVISOR.ASSIGNMENTS
            </accessComments>
            <returns>HttpResponseMessage with Content of <see cref="T:Ellucian.Colleague.Dtos.Planning.DegreePlanReviewRequest">DegreePlanReviewRequest</see></returns>
            <exception cref="!:HttpResponseException">403 - You do not have the proper permission to create DegreePlanReviewRequest</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController">
            <summary>
            This functionality is for Applicants that is only available from within the planning module namespace.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Planning.Services.IProgramEvaluationService,Ellucian.Colleague.Coordination.Student.Services.IAcademicHistoryService,Ellucian.Colleague.Coordination.Student.Services.IStudentProgramService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PlanningApplicantsController constructor
            </summary>
            <param name="adapterRegistry">Adapter of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="programEvaluationService">Program Evaluation Service of type <see cref="T:Ellucian.Colleague.Coordination.Planning.Services.IProgramEvaluationService">IProgramEvaluationService</see></param>
            <param name="academicHistoryService">Academic History Service</param>
            <param name="studentProgramService">Student Program Service</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.GetApplicantProgramEvaluationAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the program evaluation results of the given applicant against a program.
            </summary>
            <param name="id">The applicant's ID</param>
            <param name="program">The program to evaluate</param>
            <param name="catalogYear">Catalog year</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation4">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. An applicant is accessing its own data
            2. A user is an applicant
            3. A user should have a permission of EVALUATE.WHAT.IF 
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.GetApplicantProgramEvaluation2Async(System.String,System.String,System.String)">
            <summary>
            Retrieves the program evaluation results of the given applicant against a program.
            </summary>
            <param name="id">The applicant's ID</param>
            <param name="program">The program to evaluate</param>
            <param name="catalogYear">Catalog year</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation5">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. An applicant is accessing its own data
            2. A user is an applicant
            3. A user should have a permission of EVALUATE.WHAT.IF 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.QueryApplicantEvaluationsAsync(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given applicant against a list of programs.
            </summary>
            <param name="id">The applicant's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation4">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. An applicant is accessing its own data
            2. A user is an applicant
            3. A user should have permission of EVALUATE.WHAT.IF 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.QueryApplicantEvaluations2Async(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given applicant against a list of programs.
            </summary>
            <param name="id">The applicant's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation5">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. An applicant is accessing its own data
            2. A user is an applicant
            3. A user should have permission of EVALUATE.WHAT.IF 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.GetApplicantAcademicCreditsAsync(System.String,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the academic history for the applciant. 
            This retrieves all the raw academic credits which includes:
            Academic credits that were imported without aplicant being registered as student.
            Academic credits that were transfer or non-course credits.
            Academic Credits that were for the applicant when it was a student but later again became an applicant.
            </summary>
            <param name="applicantId">Id of the applicant</param>
            <param name="filterCredits">(Optional) used to filter to credits with status of Add, New, Preliminary, Non-Course, Transferm Withdrawn, dropped only.</param>
            <param name="includeDrops">(Optional) if filter is true and include dropped is also true then dropped academic credits will also be returned</param>
            <returns>The list of <see cref="T:Ellucian.Colleague.Dtos.Student.ApplicantAcademicCredit">Academic Credits</see> for the applicant.</returns>
            <accessComments>
            Applicant academic history can be retrieved by:
            1. An Applicant is accessing its own data
            2. A user must be an applicant.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningApplicantsController.GetApplicantProgramsAsync(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets information the programs in which the specified applicant has applied for.
             Inactive programs are student programs with the status of Graduated, Withdrawn or InActive.
            includeInactivePrograms flag works in conjunction with currentOnly flag such as:
            When includeInactivePrograms is set to true and currentOnly flag is true then only those inactive programs that are not yet ended will be included whereas if currentOnly flag is false then all inactive programs will be included.
            When includeInactivePrograms is set to false but currentOnly is true then it means only those inactive programs that were ended in past, will be included.
            </summary>
            <param name="applicantId">Applicant's ID</param>
            <param name="includeInactivePrograms">Should inactive student programs be included (programs with status of Inactive/ withdrawn or STPR.END.DATE is in past)</param>
            <param name="currentOnly">Boolean to indicate whether this request is for active student programs, or ended/past programs as well </param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.ApplicantStudentProgram">Programs</see> in which the specified applicant filled the application for.</returns>
            <accessComments>
            Applicant programs information can be retrieved only if:
            1. An applicant is accessing its own data.
            2. A user is an applicant.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Planning.PlanningConfigurationController">
            <summary>
            Provides access to retrieve Student Planning configuration data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningConfigurationController.#ctor(Ellucian.Colleague.Domain.Planning.Repositories.IPlanningConfigurationRepository,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdvisorsController constructor
            </summary>
            <param name="planningConfigurationRepository">Interface to the planning configuration repository</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="adapterRegistry">Adapter registry</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningConfigurationController.GetPlanningConfigurationAsync">
            <summary>
            Retrieves the configuration information for Student Planning.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.PlanningConfiguration">Student Planning configuration</see> data</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the required setup is not complete</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController">
            <summary>
            Supplements the Students controller in the student module namespace
            with functionality that is only available from within the planning module namespace.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Planning.Services.IProgramEvaluationService,Ellucian.Colleague.Coordination.Planning.Services.IPlanningStudentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PlanningStudentsController constructor
            </summary>
            <param name="adapterRegistry">Adapter of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="programEvaluationService">Program Evaluation Service of type <see cref="T:Ellucian.Colleague.Coordination.Planning.Services.IProgramEvaluationService">IProgramEvaluationService</see></param>
            <param name="planningStudentService">Planning Student Service</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.GetEvaluationAsync(System.String,System.String)">
            <summary>
            Retrieves the program evaluation results for the student's specified program.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="program">The student's program code</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.QueryEvaluationsAsync(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given student against a list of programs.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a program evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) may retrieve any proram evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.GetEvaluationNoticesAsync(System.String,System.String)">
            <summary>
            Retrieves the notice for the specified student and program. Student does not have to be currently enrolled in the program.
            </summary>
            <param name="studentId">The student's ID</param>
            <param name="programCode">The program code</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.EvaluationNotice">Evaluation Notices</see></returns>
            <accessComments>
            Evaluation Notices can only be retrieved if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve any Evaluation Notices from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Evaluation Notices if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. User with VIEW.STUDENT.INFORMATION permission
            4. User is a proxy user
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.QueryPlanningStudentsAsync(Ellucian.Colleague.Dtos.Planning.PlanningStudentCriteria)">
            <summary>
            Retrieves a planning student Dtos containing fewer properties than student Dtos for the specified list of student ids
            </summary>
            <param name="criteria">Planning Student Criteria</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.PlanningStudent">Planning Students</see></returns>
            <accessComments>
            Student information can be retrieved only if:
            1. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            2. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            3. A user with permissions of VIEW.PERSON.INFORMATION and VIEW.STUDENT.INFORMATION is accessing the student's data.
            
            Student privacy is enforced by this response. If any student has an assigned privacy code that the requestor is not authorized to access, 
            the response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of students. 
            In this situation, all details except the student name are cleared from the specific student object.        
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.GetEvaluation2Async(System.String,System.String)">
            <summary>
            Retrieves the program evaluation results for the student's specified program.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="program">The student's program code</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation2">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.QueryEvaluations2Async(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given student against a list of programs.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation2">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.GetEvaluation3Async(System.String,System.String,System.String)">
            <summary>
            Retrieves the program evaluation results for the student's specified program.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="program">The student's program code</param>
            <param name="catalogYear">The catalogYear code for the program</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation3">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.GetEvaluation4Async(System.String,System.String,System.String)">
            <summary>
            Retrieves the program evaluation results for the student's specified program.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="program">The student's program code</param>
            <param name="catalogYear">The catalogYear code for the program</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation3">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.GetEvaluation5Async(System.String,System.String,System.String)">
            <summary>
            Retrieves the program evaluation results for the student's specified program.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="program">The student's program code</param>
            <param name="catalogYear">The catalogYear code for the program</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation3">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.QueryEvaluations3Async(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given student against a list of programs.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation3">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.QueryEvaluations4Async(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given student against a list of programs.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation4">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Planning.PlanningStudentsController.QueryEvaluations5Async(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the program evaluation results of the given student against a list of programs.
            </summary>
            <remarks>
            Routing is used to expose this action under the /Students path.
            </remarks>
            <param name="id">The student's ID</param>
            <param name="programCodes">The list of programs to evaluate</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.ProgramEvaluation4">Program Evaluation</see> result</returns>
            <accessComments>
            Program Evaluation can be retrieved only if:
            1. A student is accessing their own data
            2. An authenticated user (advisor) may retrieve a Program Evaluation from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) may retrieve any Program Evaluation if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AdvisorsController">
            <summary>
            AdvisorsController
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.#ctor(Ellucian.Colleague.Coordination.Planning.Services.IAdvisorService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdvisorsController constructor
            </summary>
            <param name="advisorService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Planning.Services.IAdvisorService">IAdvisorService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.GetAdvisorAsync(System.String)">
            <summary>
            Retrieves basic advisor information, such as advisor name. 
            This is intended to retrieve merely reference information for a person who may have currently or previously performed the functions of an advisor. 
            Use for name identification only. Does not confirm authorization to perform as an advisor.
            </summary>
            <param name="id">Id of the advisor to retrieve</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Planning.Advisor">Advisor</see> object containing advisor name</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this advisor's data. No special role is needed to get this basic information.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>Any authenticated user can retrieve advisor name and professional email information.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.QueryAdvisorsByPostAsync(Ellucian.Colleague.Dtos.Planning.AdvisorQueryCriteria)">
            <summary>
            Retrieves basic advisor information for a the given Advisor query criteria (list of advisor ids). 
            Use for name identification only. Does not confirm authorization to perform as an advisor.
            This is intended to retrieve reference information (name and professional email) for any person who may have currently 
            or previously performed the functions of an advisor. If a specified ID not found to be a potential advisor,
            does not cause an exception, item is simply not returned in the list.
            NOTE: The AdvisorQueryCriteria object has a property indicating whether to retrieve OnlyActiveAdvisees,
            however, since the Advisor DTO is name/email info only this property has no effect on the results.
            </summary>
            <param name="advisorQueryCriteria">Criteria of the advisors to retrieve</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Planning.Advisor">Advisors</see> object containing advisor name</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this endpoint. Advisor permissions required.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>Any authenticated user can query advisor name information.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.QueryAdvisorsByPost2Async(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves basic advisor information for a the given Advisor query criteria (list of advisor ids). 
            Use for name identification only. Does not confirm authorization to perform as an advisor.
            This is intended to retrieve merely reference information (name and professional email) for any person who may have currently 
            or previously performed the functions of an advisor. If a specified ID not found to be a potential advisor,
            does not cause an exception, item is simply not returned in the list.
            </summary>
            <param name="advisorIds">Advisor IDs for whom data will be retrieved</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Planning.Advisor">Advisors</see> object containing advisor name</returns>
            <accessComments>Any authenticated user can query advisor name information.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.GetAdviseesPreferredEmailsAsync(System.String)">
            <summary>
            Retrieves a list of preferred email addresses for all of an advisor's current student advisees.
            </summary>
            <param name="advisorId">id of advisor</param>
            <returns>A list of email addresses</returns>
            <exception>HttpResponseException with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this advisee data.</exception>
            <exception>HttpResponseException with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Unauthorized exception returned if user's Colleague Session has expired.</exception>
            <exception>HttpResponseException with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes may retrieve their own list of assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Advisee privacy is enforced by this response. If any advisee has an assigned privacy code that the advisor is not authorized to access, 
            the Advisee response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. 
            In this situation, the advisee's email address is not included in the list of email addresses returned.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.GetAdvisees2Async(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Retrieves an advisor's list of assigned advisees.
            </summary>
            <param name="advisorId">id of advisor</param>
            <param name="pageIndex">Index of page to return</param>
            <param name="pageSize">Number of records per page</param>
            <param name="activeAdviseesOnly">If true, only current advisees are returns - this excludes former advisees and future advisees.</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Planning.Advisee">Advisees</see> including associated program and approval request status for each advisee. Advisee privacy is enforced 
             by this response. If any advisee has an assigned privacy code that the advisor is not authorized to access, the Advisee response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. In this situation, 
            all details except the advisee name are cleared from the specific advisee object.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this advisee data.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes may retrieve their own list of assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Advisee privacy is enforced by this response. If any advisee has an assigned privacy code that the advisor is not authorized to access, 
            the Advisee response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. 
            In this situation, all details except the advisee name are cleared from the specific advisee object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.GetAdvisee2Async(System.String,System.String)">
            <summary>
            Retrieves an advisee for this advisor if advisor has required permission.
            </summary>
            <param name="advisorId">id of advisor</param>
            <param name="adviseeId">id of the advisee requested</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Planning.Advisee">Advisee</see> including associated program and approval request status. Advisee privacy is enforced by this 
            response. If an advisee has an assigned privacy code that the advisor is not authorized to access, the Advisee response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned. In this situation, all details except 
            the advisee name are cleared from the response object.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have role and permission to access this advisee data.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <accessComments>
            An authenticated user (advisor) may retrieve an advisee from their own list of assigned advisees if they have one of the following 4 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) may retrieve any advisee if they have one of the following 4 permissions:
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Advisee privacy is enforced by this response. If the advisee has an assigned privacy code that the advisor is not authorized to access, 
            the Advisee response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of advisees. 
            In this situation, all details except the advisee name are cleared from the specific advisee object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.GetPermissionsAsync">
            <summary>
            Retrieves permissions for the current user to determine which functions the user is allowed, such as ability to advise all students or only their own advisees, or whether advisor can just view or may also update a advisee's plan.
            </summary>
            <returns>List of strings representing the permissions of this user</returns>
            <accessComments>Users may retrieve their own advising permissions</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorsController.GetAdvisingPermissions2Async">
            <summary>
            Returns the advising permissions for the authenticated user.
            </summary>
            <returns>Advising permissions for the authenticated user.</returns>
            <accessComments>Users may retrieve their own advising permissions</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DegreePlansController">
            <summary>
            Provides access to get and update Degree Plans.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.#ctor(Ellucian.Colleague.Coordination.Planning.Services.IDegreePlanService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            DegreePlansController class constructor
            </summary>
            <param name="degreePlanService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Planning.Services.IDegreePlanService">IDegreePlanService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"><see cref="T:Ellucian.Web.Http.Configuration.ApiSettings"/>instance</param>
            <param name="actionContextAccessor"></param>
            <param name="webHostEnvironment"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.QueryCurriculumTracksForStudentByProgramAsync(Ellucian.Colleague.Dtos.Planning.CurriculumTrackQueryCriteria)">
            <summary>
            Retrieve all curriculum track codes available for a student for a given academic program code.
            </summary>
            <param name="criteria">A <see cref="T:Ellucian.Colleague.Dtos.Planning.CurriculumTrackQueryCriteria">curriculum tracks</see> used to retrieve Curriculum Tracks.</param>
            <returns>A collection of <see cref="T:Ellucian.Colleague.Dtos.Planning.CurriculumTrack">curriculum tracks</see> for student and a given program code.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a curriculum track is not found, either for the specified student and program</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the student id or program code is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view available curriculum tracks for their catalog.
            
            An authenticated user (advisor) with any of the following permission codes may view program curriculum tracks for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view program curriculum tracks for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.PutApplySampleAsync(Ellucian.Colleague.Dtos.Planning.LoadDegreePlanRequest)">
            <summary>
            Applies a sample degree plan to the degree plan and updates it in the database.
            </summary>
            <param name="request">The <see cref="T:Ellucian.Colleague.Dtos.Planning.LoadDegreePlanRequest">Load DegreePlan request</see> specifying which sample plan to load into the degree plan</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">degree plan</see></returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A user may apply a sample degree plan to their own plan.
            An authenticated user (advisor) with either UPDATE.ASSIGNED.ADVISEES or ALL.ACCESS.ASSIGNED.ADVISEES permission may apply a sample plan to any of their assigned advisees.
            An authenticated user (advisor) with either UPDATE.ANY.ADVISEE or ALL.ACCESS.ANY.ADVISEE permission may apply a sample plan to any of their assigned advisees.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreviewAsync(System.Int32,System.String)">
            <summary>
            Returns a student degree plan preview given a sample degree plan for the supplied program. The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="programCode">The program from which the sample plan should be derived.</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview2Async(System.Int32,System.String,System.String)">
            <summary>
            Returns a student degree plan preview given a sample degree plan for the supplied program. The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="programCode">The program from which the sample plan should be derived.</param>
            <param name="firstTermCode">Code for the term at which to start the sample plan</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview3Async(System.Int32,System.String,System.String)">
            <summary>
            Returns a student degree plan preview given a sample degree plan for the supplied program. The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="programCode">The program from which the sample plan should be derived.</param>
            <param name="firstTermCode">Code for the term at which to start the sample plan</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview4Async(System.Int32,System.String,System.String)">
            <summary>
            Returns a student degree plan preview given a sample degree plan for the supplied program. The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="programCode">The program from which the sample plan should be derived.</param>
            <param name="firstTermCode">Code for the term at which to start the sample plan</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview5Async(System.Int32,System.String,System.String)">
            <summary>
            Returns a student degree plan preview given a sample degree plan for the supplied program. The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="programCode">The program from which the sample plan should be derived.</param>
            <param name="firstTermCode">Code for the term at which to start the sample plan</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview6Async(System.Int32,System.String,System.String)">
            <summary>
            Returns a student degree plan preview given a sample degree plan for the supplied program. The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="programCode">The program from which the sample plan should be derived.</param>
            <param name="firstTermCode">Code for the term at which to start the sample plan</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview7Async(System.Int32,System.String,System.String)">
            <summary>
            Retrieve a sample degree plan (curriculum track) for the given curriculum track code, using the provided term code as the first term.
            The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="curriculumTrackCode">The code of the curriculum Track from which the sample plan will be derived.</param>
            <param name="firstTermCode">The code for the term at which to start the sample plan</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">DegreePlan</see> now including the overlaid sample degree plan.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetSamplePlanPreview8Async(System.Int32,System.String,System.String,System.String)">
            <summary>
            Retrieve a sample degree plan (curriculum track) for the given curriculum track code, using the provided term code as the first term.
            The student's plan is unchanged in the database.
            </summary>
            <param name="degreePlanId">The degree plan id of the plan to use as the basis for the plan preview.</param>
            <param name="curriculumTrackCode">The code of the curriculum Track from which the sample plan will be derived.</param>
            <param name="firstTermCode">The code for the term at which to start the sample plan</param>
            <param name="programCode">Academic program to evaluate when considering the student's academic history</param>
            <returns>A degree plan preview which contains both a limited preview of courses suggested along with a version of the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">DegreePlan</see> now including the overlaid sample degree plan.
            Header X-Content-Restricted with a value of "partial" will be returned if the caller is a student working with their own plan. It indicates that any RestrictedNotes are removed from the 
            return object.</returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if a sample degree plan is not found, either for the specified program or a default sample</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the degree plan id or programCode is not provided.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to view the degree plan</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            A student may view their own sample plan preview.
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may view a sample plan preview for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            When the caller is a student working with their own plan, header X-Content-Restricted with a value of "partial" will be returned 
            to indicate that any RestrictedNotes are removed from the return object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.PostArchiveAsync(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan2)">
            <summary>
            Create an archive (snap-shot) of the degree plan
            </summary>
            <param name="degreePlan">The degree plan to be archived</param>
            <returns>The updated degree plan</returns>
            <accessComments>
            A person may archive their own degree plan.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES, UPDATE.ASSIGNED.ADVISEES or ALL.ACCESS.ASSIGNED.ADVISEES permission may archive 
            the degree plan for one of their assigned advisees.
            
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE, UPDATE.ANY.ADVISEE, or ALL.ACCESS.ANY.ADVISEE permission may may archive 
            the degree plan forany advisee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.PostArchive2Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3)">
            <summary>
            Create an archive (snap-shot) of the degree plan
            </summary>
            <param name="degreePlan">The degree plan to be archived</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.DegreePlanArchive2">degree plan archive</see></returns>
            <accessComments>
            A person may archive their own degree plan.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES, UPDATE.ASSIGNED.ADVISEES or ALL.ACCESS.ASSIGNED.ADVISEES permission may archive 
            the degree plan for one of their assigned advisees.
            
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE, UPDATE.ANY.ADVISEE, or ALL.ACCESS.ANY.ADVISEE permission may may archive 
            the degree plan forany advisee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.PostArchive3Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4)">
            <summary>
            Create an archive (snap-shot) of the degree plan
            </summary>
            <param name="degreePlan">The degree plan to be archived</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Planning.DegreePlanArchive2">degree plan archive</see></returns>
            <accessComments>
            A person may archive their own degree plan.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES, UPDATE.ASSIGNED.ADVISEES or ALL.ACCESS.ASSIGNED.ADVISEES permission may archive 
            the degree plan for one of their assigned advisees.
            
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE, UPDATE.ANY.ADVISEE, or ALL.ACCESS.ANY.ADVISEE permission may may archive 
            the degree plan forany advisee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetDegreePlanArchivesAsync(System.Int32)">
            <summary>
            Retrieves a list of all archives for a particular degree plan.
            </summary>
            <param name="degreePlanId">The degree plan for which the archives are requested.</param>
            <returns>All degree plan archives that have been created for the specified degree plan. The list may not contain any items.</returns>
            <accessComments>
            A person may retrieve their own degree plan archives.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan archives for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan archives for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetDegreePlanArchives2Async(System.Int32)">
            <summary>
            Retrieves a list of all archives for a particular degree plan.
            </summary>
            <param name="degreePlanId">The degree plan for which the archives are requested.</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Planning.DegreePlanArchive2">degree plan archives</see> that have been created for the specified degree plan. An empty list may be returned.</returns>
            <accessComments>
            A person may retrieve their own degree plan archives.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan archives for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan archives for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreePlansController.GetPlanArchiveAsync(System.Int32)">
            <summary>
            Given a plan archive ID, return the pdf report for that archive.
            </summary>
            <param name="id">The system id for the plan archive object being requested</param>
            <returns>The pdf report based on the requested archive.</returns>
            <accessComments>
            A person may retrieve their own degree plan archive.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan archive for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan archive for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectItemCodesController">
            <summary>
            Provides access to Item Code information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectItemCodesController.#ctor(Ellucian.Colleague.Coordination.ProjectsAccounting.Services.IProjectItemCodeService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor to initialize ProjectItemCodesController object.
            </summary>
            <param name="projectItemCodeService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectItemCodesController.GetProjectItemCodesAsync">
            <summary>
            Get all of the item codes.
            </summary>
            <returns></returns>
            <note>ProjectItemCode is cached for 5 minutes.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectsController">
            <summary>
            This is the controller for projects accounting.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectsController.#ctor(Ellucian.Colleague.Coordination.ProjectsAccounting.Services.IProjectService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the ProjectsController object.
            </summary>
            <param name="projectService">Project service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor">injected</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectsController.GetAsync(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Base.UrlFilter},System.Boolean)">
            <summary>
            Retrieves all projects assigned to the user.
            </summary>
            <param name="filter">Filter criteria used to reduce the number of projects returned.</param>
            <param name="summaryOnly">Specify whether or not detailed information will be returned with the project.</param>
            <returns>List of project DTOs.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectsController.QueryProjectsAsync(Ellucian.Colleague.Dtos.ColleagueFinance.ProjectQueryCriteria)">
            <summary>
            Retrieves all projects for given criteria
            </summary>
            <param name="criteria"> Criteria object contains parameters for which projects are queried.</param>
            <accessComments>
            User requires access for atleast one of the general ledger numbers on the criteria.
            </accessComments>
            <returns>List of project DTOs.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectsController.GetProjectAsync(System.String,System.Boolean,System.String)">
            <summary>
            Retrieves the project the user selected
            </summary>
            <param name="projectId">ID of the project requested.</param>
            <param name="summaryOnly">Specify whether or not detailed information will be returned with the project.</param>
            <param name="sequenceNumber">Specify a sequence number to return project totals for a single budget period.</param>
            <returns>Project DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectTypesController">
            <summary>
            Provides access to Project Types information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectTypesController.#ctor(Ellucian.Colleague.Coordination.ProjectsAccounting.Services.IProjectTypeService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the ProjectsController object.
            </summary>
            <param name="projectTypeService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProjectsAccounting.ProjectTypesController.GetProjectTypesAsync">
            <summary>
            Get list of all project types.
            </summary>
            <returns></returns>
            <note>ProjectType is cached for 5 minutes.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResidenceLife.HousingAssignmentsController">
            <summary>
            APIs related to housing assignments.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.HousingAssignmentsController.#ctor(Ellucian.Colleague.Coordination.ResidenceLife.Services.IHousingAssignmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the HousingAssignment Controller
            </summary>
            <param name="housingAssignmentService"></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.HousingAssignmentsController.PostHousingAssignmentAsync(Ellucian.Colleague.Dtos.ResidenceLife.HousingAssignment,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Create a new housing assignment in the target system.
            </summary>
            <param name="housingAssignment">The housing assignment to create</param>
            <param name="boxNumberAlreadyFormatted">Set to true if the box number supplied in the AddressBoxNumber attribute is already formatted. Otherwise set to false or do not include the parameter. If true, Colleague will not apply its own formatting to the supplied value, such as adding the word box as a prefix.</param>
            <param name="removeBoxNumber">If true, Colleague will not automatically create a box number if configured to do so. There will be no box number for the created housing assignment. If passed as false or not included, this parameter has no effect. This cannot be set to true if a value is supplied in the AddressBoxNumber attribute. This cannot be set to true unless Colleague is configured to maintain addresses with housing assignments.</param>
            <returns>The resulting housing assignment</returns>
            <accessComments>
            Requires permission CREATE.UPDATE.HOUSING.ASSIGNMENTS. The user will be able to create housing assignments for all people.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.HousingAssignmentsController.PutHousingAssignmentAsync(Ellucian.Colleague.Dtos.ResidenceLife.HousingAssignment,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Update an existing housing assignment in the target system.
            The existing housing assignment must be specified by Id and/or External Id.
            All attributes of the existing housing assignment will be overwritten with the attributes
            supplied to this API. An attribute that is supported, but is not supplied to
            the API, will be treated as a blank value and overwrite the corresponding
            attribute in the existing record with a blank, with the exception of Box Number.
            A blank Box Number is ignored, and separate "Remove Box Number" flag is available.
            </summary>
            <param name="housingAssignment">The new housing assignment data</param>
            <param name="boxNumberAlreadyFormatted">Set to true if the box number supplied in the AddressBoxNumber attribute is already formatted. Otherwise set to false or do not include the parameter. If true, Colleague will not apply its own formatting to the supplied value, such as adding the word box as a prefix.</param>
            <param name="removeBoxNumber">Set to true to remove the existing box number on the housing assignment. Otherwise set to false or do not include the parameter. This cannot be set to true if a value is supplied in the AddressBoxNumber attribute. This cannot be set to true unless Colleague is configured to maintain addresses with housing assignments.</param>
            <returns>The resulting housing assignment</returns>
            <accessComments>
            Requires permission CREATE.UPDATE.HOUSING.ASSIGNMENTS. The user will be able to update housing assignments for all people.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.HousingAssignmentsController.GetHousingAssignmentAsync(System.String)">
            <summary>
            Get a housing assignment by the system id
            </summary>
            <param name="id">The system id of the housing assignment</param>
            <returns>The resulting housing assignment</returns>
            <accessComments>
            Requires permission VIEW.HOUSING.ASSIGNMENTS. The user will be able to view housing assignments for all people.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResidenceLife.MealPlanAssignmentsController">
            <summary>
            APIs related to meal plan assignments.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.MealPlanAssignmentsController.#ctor(Ellucian.Colleague.Coordination.ResidenceLife.Services.IMealPlanAssignmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the MealPlanAssignment Controller
            </summary>
            <param name="mealPlanAssignmentService"></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.MealPlanAssignmentsController.GetMealPlanAssignment(System.String)">
            <summary>
            Get a meal plan assignment by the system id
            </summary>
            <param name="id">The system id of the meal plan assignment</param>
            <returns>The resulting meal plan assignment</returns>
            <accessComments>
            Requires permission VIEW.MEAL.PLAN.ASSIGNMENTS. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.MealPlanAssignmentsController.PostMealPlanAssignment(Ellucian.Colleague.Dtos.ResidenceLife.MealPlanAssignment)">
            <summary>
            Create a new meal plan assignment in the target system.
            </summary>
            <param name="mealPlanAssignment">The meal plan assignment to create</param>
            <returns>The resulting meal plan assignment</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.MealPlanAssignmentsController.PutMealPlanAssignment(Ellucian.Colleague.Dtos.ResidenceLife.MealPlanAssignment)">
            <summary>
            Update an existing meal plan assignment in the target system.
            The existing meal plan assignment must be specified by Id and/or External Id.
            All attributes of the existing meal plan assignment will be overwritten with the attributes
            supplied to this API. An attribute that is supported, but is not supplied to
            the API, will be treated as a blank value and overwrite the corresponding
            attribute in the existing record with a blank.
            </summary>
            <param name="mealPlanAssignment">The new housing assignment data</param>
            <returns>The resulting housing assignment</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResidenceLife.ResidenceLifeDepositsController">
            <summary>
            APIs related to deposits in the context of residence life
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.ResidenceLifeDepositsController.#ctor(Ellucian.Colleague.Coordination.ResidenceLife.Services.IResidenceLifeAccountsReceivableService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the ResidenceLifeDepositsController
            </summary>
            <param name="residenceLifeAccountsReceivableService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ResidenceLife.Services.IResidenceLifeAccountsReceivableService">IResidenceLifeAccountsReceivableService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.ResidenceLifeDepositsController.PostDeposit(Ellucian.Colleague.Dtos.ResidenceLife.Deposit)">
            <summary>
            Create a new deposit in the context of residence life
            </summary>
            <param name="deposit">The deposit to create</param>
            <returns>The resulting deposit</returns>
            <accessComments>
            API endpoint is secured with CREATE.RL.DEPOSITS permission code
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResidenceLife.ResidenceLifeReceivableInvoicesController">
            <summary>
            APIs related to receivable invoices in the context of residence life
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.ResidenceLifeReceivableInvoicesController.#ctor(Ellucian.Colleague.Coordination.ResidenceLife.Services.IResidenceLifeAccountsReceivableService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for the ResidenceLifeReceivableInvoicesController
            </summary>
            <param name="residenceLifeAccountsReceivableService">Service of type <see cref="T:Ellucian.Colleague.Coordination.ResidenceLife.Services.IResidenceLifeAccountsReceivableService">IResidenceLifeAccountsReceivableService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidenceLife.ResidenceLifeReceivableInvoicesController.PostReceivableInvoice(Ellucian.Colleague.Dtos.ResidenceLife.ReceivableInvoice)">
            <summary>
            Create a new receivable invoice in the context of residence life
            </summary>
            <param name="receivableInvoice">The receivable invoice to create</param>
            <returns>The resulting receivable invoice</returns>
            <accessComments>
            API endpoint is secured with CREATE.RL.INVOICES permission code
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController">
            <summary>
            Controller to modify resource files and save the history of modifications done to the res files.
            </summary>
            <seealso cref="T:Ellucian.Web.Mvc.Controller.BaseCompressedController" />
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.#ctor(Ellucian.Web.Resource.IResourceRepository,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Mvc.Session.SessionCookieManager,Microsoft.AspNetCore.Antiforgery.IAntiforgery,Ellucian.Colleague.Api.Utility.AppConfigUtility,Ellucian.Logging.AuditLoggingAdapter,Ellucian.Web.Http.Configuration.ISettingsRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController" /> class.
            </summary>
            <param name="resourceRepository">The resource repository.</param>
            <param name="apiSettings">API Settings</param>
            <param name="logger">The logger.</param>
            <param name="sessionCookieManager"></param>
            <param name="antiforgery"></param>
            <param name="appConfigUtility"></param>
            <param name="auditLoggingAdapter"></param>
            <param name="settingsRepository"></param>
            <exception cref="T:System.ArgumentNullException">resourceRepository</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.ResourceFileEditor">
            <summary>
            Returns the Resource File Editor if a user is logged in 
            </summary>
            <returns>Resource File Editor</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.GetResourceFiles(System.String)">
            <summary>
            Gets the list of resource files found in the working directory
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.GetCurrentUICulture">
            <summary>
            Get the current ui culutre from the settings
            </summary>
            <returns>JSON containing the current ui culutre code</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.GetSupportedUICultures">
            <summary>
            Get list of supported UI cultures
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.GetResourceItemsByFile(System.String)">
            <summary>
            Gets the resource items of the resource file in the provided file path
            </summary>
            <param name="filePath">The file path.</param>
            <returns>Gets the resource items in the file as a JSonResult object </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.SaveResourceFile(System.String)">
            <summary>
            Saves the updated resource file to the path of the file
            </summary>
            <param name="model">The resource file with the updated values</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResourceFileEditorController.PerformBackupConfig">
            <summary>
            Backup all API configs
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SessionController">
            <summary>
            Offers login, logout, and change password services.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Domain.Repositories.ISessionRepository,Ellucian.Colleague.Coordination.Base.Services.ISessionRecoveryService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            SessionsController constructor
            </summary>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="sessionRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Repositories.ISessionRepository">ISessionRepository</see></param>
            <param name="sessionRecoveryService">Session recovery service</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostLoginAsync(Ellucian.Colleague.Dtos.Base.Credentials)">
            <summary>
            Log in to Colleague.
            </summary>
            <param name="credentials">From Body, Login <see cref="T:Ellucian.Colleague.Dtos.Base.Credentials">Credentials</see></param>
            <returns><see cref="T:System.String">string</see> with JSON Web Token</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostLogin2Async(Ellucian.Colleague.Dtos.Base.Credentials)">
            <summary>
            Log in to Colleague.
            </summary>
            <param name="credentials">From Body, Login <see cref="T:Ellucian.Colleague.Dtos.Base.Credentials">Credentials</see></param>
            <returns><see cref="T:System.String">string</see> A string representing the Colleague Web API session token to be used with all requests requiring authorization, 
            or one of the following failure responses: 
            HttpStatusCode.Forbidden : Password has expired, HttpStatusCode.Unauthorized : Invalid credentials provided, or HttpStatusCode.NotFound : Listener not found or not responding
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostProxyLoginAsync(Ellucian.Colleague.Dtos.Base.ProxyCredentials)">
            <summary>
            Log in to Colleague using proxy authentication.
            </summary>
            <param name="proxyCredentials">From Body, <see cref="T:Ellucian.Colleague.Dtos.Base.ProxyCredentials">ProxyCredentials</see></param>
            <returns><see cref="T:System.String">ActionResult</see> with JSON Web Token</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostProxyLogin2Async(Ellucian.Colleague.Dtos.Base.ProxyCredentials)">
            <summary>
            Log in to Colleague using proxy authentication.
            </summary>
            <param name="proxyCredentials">From Body, <see cref="T:Ellucian.Colleague.Dtos.Base.ProxyCredentials">ProxyCredentials</see></param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.ActionResult">ActionResult</see> A string representing the Colleague Web API session token to be used with all requests requiring authorization, 
            or one of the following failure responses: 
            HttpStatusCode.Forbidden : Password has expired, HttpStatusCode.Unauthorized : Invalid credentials provided, or HttpStatusCode.NotFound : Listener not found or not responding
            </returns>
            <note>This request supports anonymous access. No Colleague entity data is exposed via this anonymous request. See :ref:`anonymousapis` for additional information.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostLogoutAsync">
            <summary>
            Log out of Colleague
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostTokenAsync(Ellucian.Colleague.Dtos.Base.LegacyColleagueSession)">
            <summary>
            Gets token of user
            </summary>
            <param name="session"></param>
            <returns>User's token</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostNewPasswordAsync(Ellucian.Colleague.Dtos.Base.ChangePassword)">
            <summary>
            Change password
            </summary>
            <param name="request"><see cref="T:Ellucian.Colleague.Dtos.Base.ChangePassword">ChangePassword</see> request</param>
            <returns>NoContent <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult">IActionResult</see> if successful</returns>
            <exception> <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult">IActionResult</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest when passed data is not acceptable</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PutSessionProxySubjectsAsync(Ellucian.Colleague.Dtos.Base.ProxySubject)">
            <summary>
            Obtains new JWT that includes new proxy access granted by the specified proxy subject to the current user. This also updates
            the web session token in Colleague for the current user. Note: "proxy subject" means the user that has granted
            proxy access to the current user.
            </summary>
            <param name="proxySubject">The proxy subject. Only the ID is required. If this ID is empty, or is 
            the same as the Current user ID, then any previously assigned proxy subject claims will be removed.</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostResetPasswordTokenRequestAsync(Ellucian.Colleague.Dtos.Base.PasswordResetTokenRequest)">
            <summary>
            Executes a request for a reset password token to be emailed to the user to enable them to complete a password reset.
            </summary>
            <param name="tokenRequest">The reset password token request</param>
            <returns>A successful 202 response. For security reasons, failures will not be reported.</returns>
            <accessComments>User must have ADMIN.RESET.ALL.PASSWORDS permission to reset passwords.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostUserIdRecoveryRequestAsync(Ellucian.Colleague.Dtos.Base.UserIdRecoveryRequest)">
            <summary>
            Request recovery of a user ID (user name) given supporting information and email.
            </summary>
            <param name="userIdRecoveryRequest">User ID Recovery Request</param>
            <returns>A successful 202 response. For security reasons, failures will not be reported.</returns>
            <accessComments>User must have ADMIN.RESET.ALL.PASSWORDS permission to reset passwords.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PostResetPasswordAsync(Ellucian.Colleague.Dtos.Base.ResetPassword)">
            <summary>
            Resets a password using a password reset token
            </summary>
            <param name="resetPassword">Reset password</param>
            <returns></returns>
            <accessComments>User must have ADMIN.RESET.ALL.PASSWORDS permission to reset passwords.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.PutSyncAsync">
            <summary>
            Sync user's Colleague web token's timeout on app server side.
            </summary>
            <returns></returns>
            <note>Leave the body empty for this PUT request.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.RequestMultifactorTokenAsync(Ellucian.Colleague.Dtos.Base.Credentials)">
            <summary>
            Requests a Multifactor Token (one-time password) be emailed to the user.
            Returns a temporary session token that must be included with the follow-up
            call to verify the multifactor token with the emailed OTP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SessionController.VerifyMultifactorTokenAsync(Ellucian.Colleague.Dtos.Base.CredentialsWithMultifactorToken)">
            <summary>
            Verify the multifactor token with the provided temporary session token
            and the emailed one-time password.
            Successful requests will result in a full session being created and 
            a response of the session JWT.
            </summary>
            <returns>Session JWT</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicCatalogController">
            <summary>
            Provides access to AcademicCatalog data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAcademicCatalogService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AcademicCatalogController class.
            </summary>
            <param name="academicCatalogService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAcademicCatalogService">IAcademicCatalogService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.GetAcademicCatalogs2Async">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Academic Catalogs.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicCatalog">AcademicCatalog</see>objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.GetAcademicCatalogById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an academic catalog by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicCatalog">AcademicCatalog</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.GetAllAcademicCatalogsAsync">
            <remarks>FOR USE WITH ELLUCIAN SS</remarks>
            <summary>
            Retrieves all Academic Catalogs.
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Catalog">Catalog</see>objects.</returns>
            <note>Academic catalog data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.PostAcademicCatalogs(Ellucian.Colleague.Dtos.AcademicCatalog)">
            <summary>        
            Creates a AcademicCatalog.
            </summary>
            <param name="academicCatalog"><see cref="T:Ellucian.Colleague.Dtos.AcademicCatalog">AcademicCatalog</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicCatalog">AcademicCatalog</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.PutAcademicCatalogs(System.String,Ellucian.Colleague.Dtos.AcademicCatalog)">
            <summary>
            Updates a AcademicCatalog.
            </summary>
            <param name="id">Id of the AcademicCatalog to update</param>
            <param name="academicCatalog"><see cref="T:Ellucian.Colleague.Dtos.AcademicCatalog">AcademicCatalog</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AcademicCatalog">AcademicCatalog</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicCatalogController.DeleteAcademicCatalogs(System.String)">
            <summary>
            Delete (DELETE) an existing AcademicCatalog
            </summary>
            <param name="id">Id of the AcademicCatalog to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController">
            <summary>
            Provides access to Academic Disciplines data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IAcademicDisciplineService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AcademicDisciplinesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="academicDisciplineService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAcademicDisciplineService">IAcademicDisciplineService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.GetAcademicDisciplines3Async(Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM V15 (Same as V10, but adds filter and named query) </remarks>
            <summary>
            Retrieves all Academic Disciplines.  
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline3">AcademicDiscipline </see>objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.GetAcademicDisciplines2Async">
            <remarks>FOR USE WITH ELLUCIAN EEDM V7, V10</remarks>
            <summary>
            Retrieves all Academic Disciplines. 
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline2">AcademicDiscipline </see>objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.GetAcademicDisciplinesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM V6</remarks>
            <summary>
            Retrieves all Academic Disciplines.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline">AcademicDiscipline </see>objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.GetAcademicDiscipline2ByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an academic discipline by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline2">AcademicDiscipline2 </see>object.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.GetAcademicDisciplineByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an academic discipline by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline">AcademicDiscipline </see>object.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.PostAcademicDisciplines(Ellucian.Colleague.Dtos.AcademicDiscipline)">
            <summary>        
            Creates a AcademicDiscipline.
            </summary>
            <param name="academicDiscipline"><see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline">AcademicDiscipline</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline">AcademicDiscipline</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.PutAcademicDisciplines(System.String,Ellucian.Colleague.Dtos.AcademicDiscipline)">
            <summary>
            Updates a AcademicDiscipline.
            </summary>
            <param name="id">Id of the AcademicDiscipline to update</param>
            <param name="academicDiscipline"><see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline">AcademicDiscipline</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AcademicDiscipline">AcademicDiscipline</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicDisciplinesController.DeleteAcademicDisciplines(System.String)">
            <summary>
            Delete (DELETE) an existing AcademicDiscipline
            </summary>
            <param name="id">Id of the AcademicDiscipline to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController">
            <summary>
            Provides access to AcademicLevels
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AcademicLevelsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentReferenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.GetAsync">
            <summary>
            Retrieves all Academic Levels.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicLevel">Academic Level</see> codes and descriptions.</returns>
            <note>AcademicLevel is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.GetAcademicLevels3Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 5</remarks>
            <summary>
            Retrieves all academic levels.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevels.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.GetAcademicLevelById3Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 5</remarks>
            <summary>
            Retrieves an academic level by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.PutAcademicLevelsAsync(Ellucian.Colleague.Dtos.AcademicLevel2)">
            <summary>
            Updates a AcademicLevel.
            </summary>
            <param name="academicLevel"><see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.PostAcademicLevelsAsync(Ellucian.Colleague.Dtos.AcademicLevel2)">
            <summary>
            Creates a AcademicLevel.
            </summary>
            <param name="academicLevel"><see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.PutAcademicLevels2Async(Ellucian.Colleague.Dtos.AcademicLevel2)">
            <summary>
            Updates a AcademicLevel.
            </summary>
            <param name="academicLevel"><see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.PostAcademicLevels2Async(Ellucian.Colleague.Dtos.AcademicLevel2)">
            <summary>
            Creates a AcademicLevel.
            </summary>
            <param name="academicLevel"><see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicLevel2">AcademicLevel</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AcademicLevelsController.DeleteAcademicLevels2Async(System.String)">
            <summary>
            Delete (DELETE) an existing AcademicLevel
            </summary>
            <param name="id">Id of the AcademicLevel to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController">
            <summary>
            Provides access to AccountingCodeCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAccountingCodeCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountingCodeCategoriesController class.
            </summary>
            <param name="accountingCodeCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAccountingCodeCategoriesService">IAccountingCodeCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController.GetAccountingCodeCategoriesAsync">
            <summary>
            Return all accountingCodeCategories
            </summary>
            <returns>List of AccountingCodeCategories <see cref="T:Ellucian.Colleague.Dtos.AccountingCodeCategory"/> objects representing matching accountingCodeCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController.GetAccountingCodeCategoryByGuidAsync(System.String)">
            <summary>
            Read (GET) a accountingCodeCategories using a GUID
            </summary>
            <param name="guid">GUID to desired accountingCodeCategories</param>
            <returns>A accountingCodeCategories object <see cref="T:Ellucian.Colleague.Dtos.AccountingCodeCategory"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController.PostAccountingCodeCategoryAsync(Ellucian.Colleague.Dtos.AccountingCodeCategory)">
            <summary>
            Create (POST) a new accountingCodeCategories
            </summary>
            <param name="accountingCodeCategories">DTO of the new accountingCodeCategories</param>
            <returns>A accountingCodeCategories object <see cref="T:Ellucian.Colleague.Dtos.AccountingCodeCategory"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController.PutAccountingCodeCategoryAsync(System.String,Ellucian.Colleague.Dtos.AccountingCodeCategory)">
            <summary>
            Update (PUT) an existing accountingCodeCategories
            </summary>
            <param name="guid">GUID of the accountingCodeCategories to update</param>
            <param name="accountingCodeCategories">DTO of the updated accountingCodeCategories</param>
            <returns>A accountingCodeCategories object <see cref="T:Ellucian.Colleague.Dtos.AccountingCodeCategory"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountingCodeCategoriesController.DeleteAccountingCodeCategoryAsync(System.String)">
            <summary>
            Delete (DELETE) a accountingCodeCategories
            </summary>
            <param name="guid">GUID to desired accountingCodeCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController">
            <summary>
            Provides access to AccountReceivableTypes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountReceivableTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController.GetAccountReceivableTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all account receivable types.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All account receivable types objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController.GetAccountReceivableTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a account receivable type by ID.
            </summary>
            <param name="id">Id of account receivable type to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AccountReceivableType">account receivable type.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController.PostAccountReceivableTypeAsync(Ellucian.Colleague.Dtos.AccountReceivableType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a AccountReceivableType.
            </summary>
            <param name="accountReceivableType"><see cref="T:Ellucian.Colleague.Dtos.AccountReceivableType">AccountReceivableType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AccountReceivableType">AccountReceivableType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController.PutAccountReceivableTypeAsync(System.String,Ellucian.Colleague.Dtos.AccountReceivableType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a account receivable type.
            </summary>
            <param name="id">Id of the AccountReceivableType to update</param>
            <param name="accountReceivableType"><see cref="T:Ellucian.Colleague.Dtos.AccountReceivableType">AccountReceivableType</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AccountReceivableType">AccountReceivableType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AccountReceivableTypesController.DeleteAccountReceivableTypeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing accountingReceivableType
            </summary>
            <param name="id">Id of the accountReceivableType to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController">
            <summary>
            Provides access to Waiver data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAddAuthorizationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Provides access to Student Waivers.
            </summary>
            <param name="addAuthorizationService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController.PutAddAuthorizationAsync(Ellucian.Colleague.Dtos.Student.AddAuthorization)">
            <summary>
            Update an existing add authorization record.
            </summary>
            <param name="addAuthorization">Dto containing add authorization being updated.</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Student.AddAuthorization">AddAuthorization</see> DTO.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update an add authorization for this section.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if the record cannot be updated due to a lock.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            This action can only be performed by:
            1. a student who is assigning themselves to a previously unassigned add authorization code, or
            2. a faculty member assigned to the section,or
            3. a departmental oversight member assigned to the section may update an add authorization for a section with the following permission code 
            CREATE.SECTION.ADD.AUTHORIZATION
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController.GetSectionAddAuthorizationsAsync(System.String)">
            <summary>
            Retrieves Add Authorizations for a specific section
            </summary>
            <param name="sectionId">The id of the section</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AddAuthorization">Add Authorizations</see> for the section.</returns>
            <accessComments>
            1. Only permitted for faculty members assigned to the section.
            2. A departmental oversight member assigned to the section may retrieve add authorization information with any of the following permission codes
            VIEW.SECTION.WAITLISTS
            VIEW.SECTION.ADD.AUTHORIZATIONS
            CREATE.SECTION.ADD.AUTHORIZATION
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController.PostAddAuthorizationAsync(Ellucian.Colleague.Dtos.Student.AddAuthorizationInput)">
            <summary>
            Create a new add authorization for a student in a section.
            </summary>
            <param name="addAuthorizationInput"><see cref="T:Ellucian.Colleague.Dtos.Student.AddAuthorizationInput">Add Authorization Input</see> with information on creating a new authorization.</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Student.AddAuthorization">Add Authorization</see>.</returns>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.AddAuthorization">add authorization</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create an add authorization for this section.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if an unrevoked authorization already exists for the student in the section.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other creation problem.</exception>
            <accessComments>
            This action can only be performed by:
            1. a faculty member assigned to the section.
            2. a departmental oversight member assigned to the section may create an add authorization for a section with the following permission code 
            CREATE.SECTION.ADD.AUTHORIZATION
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController.GetAsync(System.String)">
            <summary>
            Retrieves information about a specific add authorization.
            </summary>
            <param name="id">Unique system Id of the add authorization</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Student.AddAuthorization">Add Authorization.</see></returns>
            <accessComments>
            This action can only be performed by the student who is assigned to the authorization, or by 
            a faculty member assigned to the section on the authorization.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AddAuthorizationsController.GetStudentAddAuthorizationsAsync(System.String)">
            <summary>
            Retrieve add authorizations for a student
            </summary>
            <param name="studentId">ID of the student for whom add authorizations are being retrieved</param>
            <returns>Add Authorizations for the student</returns>
            <accessComments>
            Users may request their own data. Additionally, users who have at least one of the following permissions can request other users' data:
            ALL.ACCESS.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            VIEW.ANY.ADVISEE
            ALL.ACCESS.ASSIGNED.ADVISEES (the student must be an assigned advisee for the user)
            UPDATE.ASSIGNED.ADVISEES (the student must be an assigned advisee for the user)
            REVIEW.ASSIGNED.ADVISEES (the student must be an assigned advisee for the user)
            VIEW.ASSIGNED.ADVISEES (the student must be an assigned advisee for the user)
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController">
            <summary>
            Provides access to AdministrativeInstructionalMethods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdministrativeInstructionalMethodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdministrativeInstructionalMethodsController class.
            </summary>
            <param name="administrativeInstructionalMethodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdministrativeInstructionalMethodsService">IAdministrativeInstructionalMethodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController.GetAdministrativeInstructionalMethodsAsync">
            <summary>
            Return all administrativeInstructionalMethods
            </summary>
            <returns>List of AdministrativeInstructionalMethods <see cref="T:Ellucian.Colleague.Dtos.AdministrativeInstructionalMethods"/> objects representing matching administrativeInstructionalMethods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController.GetAdministrativeInstructionalMethodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a administrativeInstructionalMethods using a GUID
            </summary>
            <param name="guid">GUID to desired administrativeInstructionalMethods</param>
            <returns>A administrativeInstructionalMethods object <see cref="T:Ellucian.Colleague.Dtos.AdministrativeInstructionalMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController.PostAdministrativeInstructionalMethodsAsync(Ellucian.Colleague.Dtos.AdministrativeInstructionalMethods)">
            <summary>
            Create (POST) a new administrativeInstructionalMethods
            </summary>
            <param name="administrativeInstructionalMethods">DTO of the new administrativeInstructionalMethods</param>
            <returns>A administrativeInstructionalMethods object <see cref="T:Ellucian.Colleague.Dtos.AdministrativeInstructionalMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController.PutAdministrativeInstructionalMethodsAsync(System.String,Ellucian.Colleague.Dtos.AdministrativeInstructionalMethods)">
            <summary>
            Update (PUT) an existing administrativeInstructionalMethods
            </summary>
            <param name="guid">GUID of the administrativeInstructionalMethods to update</param>
            <param name="administrativeInstructionalMethods">DTO of the updated administrativeInstructionalMethods</param>
            <returns>A administrativeInstructionalMethods object <see cref="T:Ellucian.Colleague.Dtos.AdministrativeInstructionalMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativeInstructionalMethodsController.DeleteAdministrativeInstructionalMethodsAsync(System.String)">
            <summary>
            Delete (DELETE) a administrativeInstructionalMethods
            </summary>
            <param name="guid">GUID to desired administrativeInstructionalMethods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController">
            <summary>
            Provides access to AdministrativePeriods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdministrativePeriodsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController.GetAdministrativePeriodsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all person-employment-references
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.AdministrativePeriod">AdministrativePeriods</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController.GetAdministrativePeriodByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing person-employment-references
            </summary>
            <param name="guid">GUID of the person-employment-references to get</param>
            <returns>A AdministrativePeriod object <see cref="T:Ellucian.Colleague.Dtos.Student.AdministrativePeriod"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController.PostAdministrativePeriodsAsync(Ellucian.Colleague.Dtos.Student.AdministrativePeriod)">
            <summary>
            Create (POST) a new AdministrativePeriod
            </summary>
            <param name="AdministrativePeriod">DTO of the new AdministrativePeriod</param>
            <returns>A AdministrativePeriod object <see cref="T:Ellucian.Colleague.Dtos.Student.AdministrativePeriod"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController.PutAdministrativePeriodAsync(System.String,Ellucian.Colleague.Dtos.Student.AdministrativePeriod)">
            <summary>
            Update (PUT) an existing AdministrativePeriod
            </summary>
            <param name="guid">GUID of the AdministrativePeriod to update</param>
            <param name="AdministrativePeriod">DTO of the updated AdministrativePeriod</param>
            <returns>A AdministrativePeriod object <see cref="T:Ellucian.Colleague.Dtos.Student.AdministrativePeriod"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdministrativePeriodsController.DeleteAdministrativePeriodAsync(System.String)">
            <summary>
            Delete (DELETE) a AdministrativePeriod
            </summary>
            <param name="guid">GUID to desired AdministrativePeriod</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController">
            <summary>
            Provides access to AdmissionApplications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationsController class.
            </summary>
            <param name="admissionApplicationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationsService">IAdmissionApplicationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.GetAdmissionApplicationsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all admissionApplications
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.GetAdmissionApplications2Async(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all admissionApplications
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.GetAdmissionApplications3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all admissionApplications
            </summary>
            <param name="page"></param>
            <param name="criteria">Filtering Criteria</param>
            <param name="personFilter">PersonFilter Named Query</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.GetAdmissionApplicationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplications using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplications</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.GetAdmissionApplicationsByGuid2Async(System.String)">
            <summary>
            Read (GET) a admissionApplications using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplications</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.GetAdmissionApplicationsByGuid3Async(System.String)">
            <summary>
            Read (GET) a admissionApplications using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplications</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication3"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.PostAdmissionApplicationsAsync(Ellucian.Colleague.Dtos.AdmissionApplication)">
            <summary>
            Create (POST) a new admissionApplications
            </summary>
            <param name="admissionApplications">DTO of the new admissionApplications</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.PostAdmissionApplications2Async(Ellucian.Colleague.Dtos.AdmissionApplication2)">
            <summary>
            Create (POST) a new admissionApplication
            </summary>
            <param name="admissionApplication">DTO of the new admissionApplications</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication2"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.PutAdmissionApplicationsAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplication)">
            <summary>
            Update (PUT) an existing admissionApplications
            </summary>
            <param name="guid">GUID of the admissionApplications to update</param>
            <param name="admissionApplications">DTO of the updated admissionApplications</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.PutAdmissionApplications2Async(System.String,Ellucian.Colleague.Dtos.AdmissionApplication2)">
            <summary>
            Update (PUT) an existing AdmissionApplication
            </summary>
            <param name="guid">GUID of the admissionApplications to update</param>
            <param name="admissionApplication">DTO of the updated admissionApplications</param>
            <returns>A AdmissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.DeleteAdmissionApplicationsAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplications
            </summary>
            <param name="guid">GUID to desired admissionApplications</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.PostAdmissionApplicationsSubmissionsAsync(Ellucian.Colleague.Dtos.AdmissionApplicationSubmission)">
            <summary>
            Create (POST) a new admissionApplicationSubmission
            </summary>
            <param name="admissionApplication">DTO of the new admissionApplicationsSubmissions</param>
            <returns>A admissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSubmission"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationsController.PutAdmissionApplicationsSubmissionsAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationSubmission)">
            <summary>
            Update (PUT) an existing AdmissionApplicationsSubmissions
            </summary>
            <param name="guid">GUID of the admissionApplications to update</param>
            <param name="admissionApplicationsSubmissions">DTO of the updated admissionApplications</param>
            <returns>A AdmissionApplications object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplication3"/> in EEDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController">
            <summary>
            Provides access to AdmissionApplicationSources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationSourcesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationSourcesController class.
            </summary>
            <param name="admissionApplicationSourcesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationSourcesService">IAdmissionApplicationSourcesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController.GetAdmissionApplicationSourcesAsync">
            <summary>
            Return all admissionApplicationSources
            </summary>
            <returns>List of AdmissionApplicationSources <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSources"/> objects representing matching admissionApplicationSources</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController.GetAdmissionApplicationSourcesByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationSources using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplicationSources</param>
            <returns>A admissionApplicationSources object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController.PostAdmissionApplicationSourcesAsync(Ellucian.Colleague.Dtos.AdmissionApplicationSources)">
            <summary>
            Create (POST) a new admissionApplicationSources
            </summary>
            <param name="admissionApplicationSources">DTO of the new admissionApplicationSources</param>
            <returns>A admissionApplicationSources object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController.PutAdmissionApplicationSourcesAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationSources)">
            <summary>
            Update (PUT) an existing admissionApplicationSources
            </summary>
            <param name="guid">GUID of the admissionApplicationSources to update</param>
            <param name="admissionApplicationSources">DTO of the updated admissionApplicationSources</param>
            <returns>A admissionApplicationSources object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSourcesController.DeleteAdmissionApplicationSourcesAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationSources
            </summary>
            <param name="guid">GUID to desired admissionApplicationSources</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController">
            <summary>
            Provides access to AdmissionApplicationStatusTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionDecisionTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationStatusTypesController class.
            </summary>
            <param name="admissionApplicationStatusTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionDecisionTypesService">IAdmissionApplicationStatusTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController.GetAdmissionApplicationStatusTypesAsync">
            <summary>
            Return all admissionApplicationStatusTypes v6.
            </summary>
            <returns>List of AdmissionApplicationStatusTypes <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationStatusType"/> objects representing matching admissionApplicationStatusTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController.GetAdmissionApplicationStatusTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationStatusTypes using a GUID v6.
            </summary>
            <param name="guid">GUID to desired admissionApplicationStatusTypes</param>
            <returns>A admissionApplicationStatusTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationStatusType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController.PostAdmissionApplicationStatusTypesAsync(Ellucian.Colleague.Dtos.AdmissionApplicationStatusType)">
            <summary>
            Create (POST) a new admissionApplicationStatusTypes
            </summary>
            <param name="admissionApplicationStatusTypes">DTO of the new admissionApplicationStatusTypes</param>
            <returns>A admissionApplicationStatusTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationStatusType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController.PutAdmissionApplicationStatusTypesAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationStatusType)">
            <summary>
            Update (PUT) an existing admissionApplicationStatusTypes
            </summary>
            <param name="guid">GUID of the admissionApplicationStatusTypes to update</param>
            <param name="admissionApplicationStatusTypes">DTO of the updated admissionApplicationStatusTypes</param>
            <returns>A admissionApplicationStatusTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationStatusType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationStatusTypesController.DeleteAdmissionApplicationStatusTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationStatusTypes
            </summary>
            <param name="guid">GUID to desired admissionApplicationStatusTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController">
            <summary>
            Provides access to AdmissionApplicationSupportingItems
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationSupportingItemsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationSupportingItemsController class.
            </summary>
            <param name="admissionApplicationSupportingItemsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationSupportingItemsService">IAdmissionApplicationSupportingItemsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController.GetAdmissionApplicationSupportingItemsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all admissionApplicationSupportingItems
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Filtering Criteria</param>
            <returns>List of AdmissionApplicationSupportingItems <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItems"/> objects representing matching admissionApplicationSupportingItems</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController.GetAdmissionApplicationSupportingItemsByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationSupportingItems using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplicationSupportingItems</param>
            <returns>A admissionApplicationSupportingItems object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItems"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController.PutAdmissionApplicationSupportingItemsAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItems)">
            <summary>
            Update (PUT) an existing AdmissionApplicationSupportingItems
            </summary>
            <param name="guid">GUID of the admissionApplicationSupportingItems to update</param>
            <param name="admissionApplicationSupportingItems">DTO of the updated admissionApplicationSupportingItems</param>
            <returns>A AdmissionApplicationSupportingItems object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItems"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController.PostAdmissionApplicationSupportingItemsAsync(Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItems)">
            <summary>
            Create (POST) a new admissionApplicationSupportingItems
            </summary>
            <param name="admissionApplicationSupportingItems">DTO of the new admissionApplicationSupportingItems</param>
            <returns>A admissionApplicationSupportingItems object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItems"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemsController.DeleteAdmissionApplicationSupportingItemsAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationSupportingItems
            </summary>
            <param name="guid">GUID to desired admissionApplicationSupportingItems</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController">
            <summary>
            Provides access to AdmissionApplicationSupportingItemTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationSupportingItemTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationSupportingItemTypesController class.
            </summary>
            <param name="admissionApplicationSupportingItemTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationSupportingItemTypesService">IAdmissionApplicationSupportingItemTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController.GetAdmissionApplicationSupportingItemTypesAsync">
            <summary>
            Return all admissionApplicationSupportingItemTypes
            </summary>
            <returns>List of AdmissionApplicationSupportingItemTypes <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemTypes"/> objects representing matching admissionApplicationSupportingItemTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController.GetAdmissionApplicationSupportingItemTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationSupportingItemTypes using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplicationSupportingItemTypes</param>
            <returns>A admissionApplicationSupportingItemTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController.PostAdmissionApplicationSupportingItemTypesAsync(Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemTypes)">
            <summary>
            Create (POST) a new admissionApplicationSupportingItemTypes
            </summary>
            <param name="admissionApplicationSupportingItemTypes">DTO of the new admissionApplicationSupportingItemTypes</param>
            <returns>A admissionApplicationSupportingItemTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController.PutAdmissionApplicationSupportingItemTypesAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemTypes)">
            <summary>
            Update (PUT) an existing admissionApplicationSupportingItemTypes
            </summary>
            <param name="guid">GUID of the admissionApplicationSupportingItemTypes to update</param>
            <param name="admissionApplicationSupportingItemTypes">DTO of the updated admissionApplicationSupportingItemTypes</param>
            <returns>A admissionApplicationSupportingItemTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationSupportingItemTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationSupportingItemTypesController.DeleteAdmissionApplicationSupportingItemTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationSupportingItemTypes
            </summary>
            <param name="guid">GUID to desired admissionApplicationSupportingItemTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController">
            <summary>
            Controller for Admission Application Types
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationTypeController class.
            </summary>
            <param name="admissionApplicationTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationTypesService">IAdmissionApplicationTypesService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController.GetAdmissionApplicationTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Admission Application Types
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationTypes">AdmissionApplicationTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController.GetAdmissionApplicationTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Admission Application Type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationTypes">AdmissionApplicationTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController.PutAdmissionApplicationType(Ellucian.Colleague.Dtos.AdmissionApplicationTypes)">
            <summary>
            Updates an AdmissionApplicationTypes.
            </summary>
            <param name="admissionApplicationTypes"><see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationTypes">AdmissionApplicationTypes</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationTypes">AdmissionApplicationTypes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController.PostAdmissionApplicationType(Ellucian.Colleague.Dtos.AdmissionApplicationTypes)">
            <summary>
            Creates a AdmissionApplicationTypes.
            </summary>
            <param name="admissionApplicationTypes"><see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationTypes">AdmissionApplicationTypes</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationTypes">AdmissionApplicationTypes</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationTypesController.DeleteAdmissionApplicationType(System.String)">
            <summary>
            Delete (DELETE) an existing AdmissionApplicationTypes
            </summary>
            <param name="id">Id of the AdmissionApplicationTypes to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController">
            <summary>
            Provides access to AdmissionApplicationWithdrawalReasons
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationWithdrawalReasonsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionApplicationWithdrawalReasonsController class.
            </summary>
            <param name="admissionApplicationWithdrawalReasonsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationWithdrawalReasonsService">IAdmissionApplicationWithdrawalReasonsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController.GetAdmissionApplicationWithdrawalReasonsAsync">
            <summary>
            Return all admissionApplicationWithdrawalReasons
            </summary>
            <returns>List of AdmissionApplicationWithdrawalReasons <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationWithdrawalReasons"/> objects representing matching admissionApplicationWithdrawalReasons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController.GetAdmissionApplicationWithdrawalReasonsByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationWithdrawalReasons using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplicationWithdrawalReasons</param>
            <returns>A admissionApplicationWithdrawalReasons object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationWithdrawalReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController.PostAdmissionApplicationWithdrawalReasonsAsync(Ellucian.Colleague.Dtos.AdmissionApplicationWithdrawalReasons)">
            <summary>
            Create (POST) a new admissionApplicationWithdrawalReasons
            </summary>
            <param name="admissionApplicationWithdrawalReasons">DTO of the new admissionApplicationWithdrawalReasons</param>
            <returns>A admissionApplicationWithdrawalReasons object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationWithdrawalReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController.PutAdmissionApplicationWithdrawalReasonsAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationWithdrawalReasons)">
            <summary>
            Update (PUT) an existing admissionApplicationWithdrawalReasons
            </summary>
            <param name="guid">GUID of the admissionApplicationWithdrawalReasons to update</param>
            <param name="admissionApplicationWithdrawalReasons">DTO of the updated admissionApplicationWithdrawalReasons</param>
            <returns>A admissionApplicationWithdrawalReasons object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationWithdrawalReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionApplicationWithdrawalReasonsController.DeleteAdmissionApplicationWithdrawalReasonsAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationWithdrawalReasons
            </summary>
            <param name="guid">GUID to desired admissionApplicationWithdrawalReasons</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController">
            <summary>
            Provides access to AdmissionDecisions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionDecisionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionDecisionsController class.
            </summary>
            <param name="admissionDecisionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionDecisionsService">IAdmissionDecisionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController.GetAdmissionDecisionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all admissionDecisions
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController.GetAdmissionDecisionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionDecisions using a GUID
            </summary>
            <param name="guid">GUID to desired admissionDecisions</param>
            <returns>A admissionDecisions object <see cref="T:Ellucian.Colleague.Dtos.AdmissionDecisions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController.PostAdmissionDecisionsAsync(Ellucian.Colleague.Dtos.AdmissionDecisions)">
            <summary>
            Create (POST) a new admissionDecisions
            </summary>
            <param name="admissionDecisions">DTO of the new admissionDecisions</param>
            <returns>A admissionDecisions object <see cref="T:Ellucian.Colleague.Dtos.AdmissionDecisions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController.PutAdmissionDecisionsAsync(System.String,Ellucian.Colleague.Dtos.AdmissionDecisions)">
            <summary>
            Update (PUT) an existing admissionDecisions
            </summary>
            <param name="guid">GUID of the admissionDecisions to update</param>
            <param name="admissionDecisions">DTO of the updated admissionDecisions</param>
            <returns>A admissionDecisions object <see cref="T:Ellucian.Colleague.Dtos.AdmissionDecisions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionsController.DeleteAdmissionDecisionsAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionDecisions
            </summary>
            <param name="guid">GUID to desired admissionDecisions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController">
            <summary>
            Provides access to AdmissionDecisionTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionDecisionTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionDecisionTypesController class.
            </summary>
            <param name="admissionDecisionTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionDecisionTypesService">IAdmissionDecisionTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.GetAdmissionDecisionTypes2Async">
            <summary>
            Return all admissionDecisionTypes v11.
            </summary>
            <returns>List of AdmissionDecisionTypes <see cref="!:Dtos.AdmissionDecisionType"/> objects representing matching admissionDecisionTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.GetAdmissionDecisionTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Admission Decision Types
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AdmissionDecisionTypes">AdmissionDecisionTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.GetAdmissionDecisionTypeByGuid2Async(System.String)">
            <summary>
            Read (GET) a admissionDecisionTypes using a GUID v11.
            </summary>
            <param name="guid">GUID to desired admissionDecisionTypes</param>
            <returns>A admissionDecisionTypes object <see cref="!:Dtos.AdmissionDecisionType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.GetAdmissionDecisionTypeByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing Admission Decision Type
            </summary>
            <param name="guid">GUID of the admissionDecisionType to get</param>
            <returns>A admissionDecisionType object <see cref="T:Ellucian.Colleague.Dtos.AdmissionDecisionTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.PostAdmissionDecisionTypesAsync(Ellucian.Colleague.Dtos.AdmissionDecisionType2)">
            <summary>
            Create (POST) a new admissionDecisionTypes
            </summary>
            <param name="admissionDecisionTypes">DTO of the new admissionDecisionTypes</param>
            <returns>A admissionDecisionTypes object <see cref="!:Dtos.AdmissionDecisionType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.PutAdmissionDecisionTypesAsync(System.String,Ellucian.Colleague.Dtos.AdmissionDecisionType2)">
            <summary>
            Update (PUT) an existing admissionDecisionTypes
            </summary>
            <param name="guid">GUID of the admissionDecisionTypes to update</param>
            <param name="admissionDecisionTypes">DTO of the updated admissionDecisionTypes</param>
            <returns>A admissionDecisionTypes object <see cref="!:Dtos.AdmissionDecisionType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionDecisionTypesController.DeleteAdmissionDecisionTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionDecisionTypes
            </summary>
            <param name="guid">GUID to desired admissionDecisionTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController">
            <summary>
            Controller for Admission Populations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionPopulationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionPopulationController class.
            </summary>
            <param name="admissionPopulationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionPopulationsService">IAdmissionPopulationsService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController.GetAdmissionPopulationsAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Admission Populations
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AdmissionPopulations">AdmissionPopulations.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController.GetAdmissionPopulationByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Admission Population by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AdmissionPopulations">AdmissionPopulations.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController.PutAdmissionPopulation(Ellucian.Colleague.Dtos.AdmissionPopulations)">
            <summary>
            Updates an AdmissionPopulations.
            </summary>
            <param name="admissionPopulations"><see cref="T:Ellucian.Colleague.Dtos.AdmissionPopulations">AdmissionPopulations</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.AdmissionPopulations">AdmissionPopulations</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController.PostAdmissionPopulation(Ellucian.Colleague.Dtos.AdmissionPopulations)">
            <summary>
            Creates a AdmissionPopulations.
            </summary>
            <param name="admissionPopulations"><see cref="T:Ellucian.Colleague.Dtos.AdmissionPopulations">AdmissionPopulations</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AdmissionPopulations">AdmissionPopulations</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionPopulationsController.DeleteAdmissionPopulation(System.String)">
            <summary>
            Delete (DELETE) an existing AdmissionPopulations
            </summary>
            <param name="id">Id of the AdmissionPopulations to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController">
            <summary>
            Provides access to AdmissionResidencyTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAdmissionResidencyTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionResidencyTypesController class.
            </summary>
            <param name="admissionResidencyTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionResidencyTypesService">IAdmissionResidencyTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController.GetAdmissionResidencyTypesAsync">
            <summary>
            Return all admissionResidencyTypes
            </summary>
            <returns>List of AdmissionResidencyTypes <see cref="T:Ellucian.Colleague.Dtos.AdmissionResidencyTypes"/> objects representing matching admissionResidencyTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController.GetAdmissionResidencyTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionResidencyTypes using a GUID
            </summary>
            <param name="guid">GUID to desired admissionResidencyTypes</param>
            <returns>A admissionResidencyTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionResidencyTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController.PostAdmissionResidencyTypesAsync(Ellucian.Colleague.Dtos.AdmissionResidencyTypes)">
            <summary>
            Create (POST) a new admissionResidencyTypes
            </summary>
            <param name="admissionResidencyTypes">DTO of the new admissionResidencyTypes</param>
            <returns>A admissionResidencyTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionResidencyTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController.PutAdmissionResidencyTypesAsync(System.String,Ellucian.Colleague.Dtos.AdmissionResidencyTypes)">
            <summary>
            Update (PUT) an existing admissionResidencyTypes
            </summary>
            <param name="guid">GUID of the admissionResidencyTypes to update</param>
            <param name="admissionResidencyTypes">DTO of the updated admissionResidencyTypes</param>
            <returns>A admissionResidencyTypes object <see cref="T:Ellucian.Colleague.Dtos.AdmissionResidencyTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AdmissionResidencyTypesController.DeleteAdmissionResidencyTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionResidencyTypes
            </summary>
            <param name="guid">GUID to desired admissionResidencyTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.ApplicantsController">
            <summary>
            This controller exposes Colleague Applicant data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ApplicantsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IApplicantService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Create an ApplicantsController object
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="applicantService">ApplicantService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ApplicantsController.GetApplicantAsync(System.String)">
            <summary>
            Get an Applicant by id
            </summary>
            <accessComments>
            Users may request their own data. Additionally, users who have VIEW.FINANCIAL.AID.INFORMATION permission 
            or proxy permissions can request other users' data
            </accessComments>
            <param name="applicantId">Applicant's Colleague PERSON id</param>
            <returns>An Applicant DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController">
            <summary>
            Provides access to AptitudeAssessments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAptitudeAssessmentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AptitudeAssessmentsController class.
            </summary>
            <param name="aptitudeAssessmentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAptitudeAssessmentsService">IAptitudeAssessmentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController.GetAptitudeAssessmentsAsync">
            <summary>
            Return all aptitudeAssessments
            </summary>
            <returns>List of AptitudeAssessments <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessment"/> objects representing matching aptitudeAssessments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController.GetAptitudeAssessmentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a aptitudeAssessments using a GUID
            </summary>
            <param name="guid">GUID to desired aptitudeAssessments</param>
            <returns>A aptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController.PostAptitudeAssessmentsAsync(Ellucian.Colleague.Dtos.AptitudeAssessment)">
            <summary>
            Create (POST) a new aptitudeAssessment
            </summary>
            <param name="aptitudeAssessment">DTO of the new aptitudeAssessment</param>
            <returns>A aptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController.PutAptitudeAssessmentsAsync(System.String,Ellucian.Colleague.Dtos.AptitudeAssessment)">
            <summary>
            Update (PUT) an existing aptitudeAssessments
            </summary>
            <param name="guid">GUID of the aptitudeAssessments to update</param>
            <param name="aptitudeAssessment">DTO of the updated aptitudeAssessments</param>
            <returns>A aptitudeAssessments object <see cref="!:Dtos.AptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentsController.DeleteAptitudeAssessmentsAsync(System.String)">
            <summary>
            Delete (DELETE) a aptitudeAssessment
            </summary>
            <param name="guid">GUID to desired aptitudeAssessment</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController">
            <summary>
            Provides access to AptitudeAssessmentSources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAptitudeAssessmentSourcesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AptitudeAssessmentSourcesController class.
            </summary>
            <param name="aptitudeAssessmentSourcesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAptitudeAssessmentSourcesService">IAptitudeAssessmentSourcesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController.GetAptitudeAssessmentSourcesAsync">
            <summary>
            Return all aptitudeAssessmentSources
            </summary>
            <returns>List of AptitudeAssessmentSources <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentSources"/> objects representing matching aptitudeAssessmentSources</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController.GetAptitudeAssessmentSourcesByGuidAsync(System.String)">
            <summary>
            Read (GET) a aptitudeAssessmentSources using a GUID
            </summary>
            <param name="guid">GUID to desired aptitudeAssessmentSources</param>
            <returns>A aptitudeAssessmentSources object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController.PostAptitudeAssessmentSourcesAsync(Ellucian.Colleague.Dtos.AptitudeAssessmentSources)">
            <summary>
            Create (POST) a new aptitudeAssessmentSources
            </summary>
            <param name="aptitudeAssessmentSources">DTO of the new aptitudeAssessmentSources</param>
            <returns>A aptitudeAssessmentSources object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController.PutAptitudeAssessmentSourcesAsync(System.String,Ellucian.Colleague.Dtos.AptitudeAssessmentSources)">
            <summary>
            Update (PUT) an existing aptitudeAssessmentSources
            </summary>
            <param name="guid">GUID of the aptitudeAssessmentSources to update</param>
            <param name="aptitudeAssessmentSources">DTO of the updated aptitudeAssessmentSources</param>
            <returns>A aptitudeAssessmentSources object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentSources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentSourcesController.DeleteAptitudeAssessmentSourcesAsync(System.String)">
            <summary>
            Delete (DELETE) a aptitudeAssessmentSources
            </summary>
            <param name="guid">GUID to desired aptitudeAssessmentSources</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController">
            <summary>
            Provides access to AptitudeAssessmentTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAptitudeAssessmentTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AptitudeAssessmentTypesController class.
            </summary>
            <param name="aptitudeAssessmentTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAptitudeAssessmentTypesService">IAptitudeAssessmentTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController.GetAptitudeAssessmentTypesAsync">
            <summary>
            Return all aptitudeAssessmentTypes
            </summary>
            <returns>List of AptitudeAssessmentTypes <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentTypes"/> objects representing matching aptitudeAssessmentTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController.GetAptitudeAssessmentTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a aptitudeAssessmentTypes using a GUID
            </summary>
            <param name="guid">GUID to desired aptitudeAssessmentTypes</param>
            <returns>A aptitudeAssessmentTypes object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController.PostAptitudeAssessmentTypesAsync(Ellucian.Colleague.Dtos.AptitudeAssessmentTypes)">
            <summary>
            Create (POST) a new aptitudeAssessmentTypes
            </summary>
            <param name="aptitudeAssessmentTypes">DTO of the new aptitudeAssessmentTypes</param>
            <returns>A aptitudeAssessmentTypes object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController.PutAptitudeAssessmentTypesAsync(System.String,Ellucian.Colleague.Dtos.AptitudeAssessmentTypes)">
            <summary>
            Update (PUT) an existing aptitudeAssessmentTypes
            </summary>
            <param name="guid">GUID of the aptitudeAssessmentTypes to update</param>
            <param name="aptitudeAssessmentTypes">DTO of the updated aptitudeAssessmentTypes</param>
            <returns>A aptitudeAssessmentTypes object <see cref="T:Ellucian.Colleague.Dtos.AptitudeAssessmentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AptitudeAssessmentTypesController.DeleteAptitudeAssessmentTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a aptitudeAssessmentTypes
            </summary>
            <param name="guid">GUID to desired aptitudeAssessmentTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController">
            <summary>
            Provides access to AssessmentCalculationMethods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAssessmentCalculationMethodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AssessmentCalculationMethodsController class.
            </summary>
            <param name="assessmentCalculationMethodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAssessmentCalculationMethodsService">IAssessmentCalculationMethodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController.GetAssessmentCalculationMethodsAsync">
            <summary>
            Return all assessmentCalculationMethods
            </summary>
            <returns>List of AssessmentCalculationMethods <see cref="T:Ellucian.Colleague.Dtos.AssessmentCalculationMethods"/> objects representing matching assessmentCalculationMethods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController.GetAssessmentCalculationMethodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a assessmentCalculationMethods using a GUID
            </summary>
            <param name="guid">GUID to desired assessmentCalculationMethods</param>
            <returns>A assessmentCalculationMethods object <see cref="T:Ellucian.Colleague.Dtos.AssessmentCalculationMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController.PostAssessmentCalculationMethodsAsync(Ellucian.Colleague.Dtos.AssessmentCalculationMethods)">
            <summary>
            Create (POST) a new assessmentCalculationMethods
            </summary>
            <param name="assessmentCalculationMethods">DTO of the new assessmentCalculationMethods</param>
            <returns>A assessmentCalculationMethods object <see cref="T:Ellucian.Colleague.Dtos.AssessmentCalculationMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController.PutAssessmentCalculationMethodsAsync(System.String,Ellucian.Colleague.Dtos.AssessmentCalculationMethods)">
            <summary>
            Update (PUT) an existing assessmentCalculationMethods
            </summary>
            <param name="guid">GUID of the assessmentCalculationMethods to update</param>
            <param name="assessmentCalculationMethods">DTO of the updated assessmentCalculationMethods</param>
            <returns>A assessmentCalculationMethods object <see cref="T:Ellucian.Colleague.Dtos.AssessmentCalculationMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentCalculationMethodsController.DeleteAssessmentCalculationMethodsAsync(System.String)">
            <summary>
            Delete (DELETE) a assessmentCalculationMethods
            </summary>
            <param name="guid">GUID to desired assessmentCalculationMethods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController">
            <summary>
            Provides access to AssessmentPercentileTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAssessmentPercentileTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AssessmentPercentileTypesController class.
            </summary>
            <param name="assessmentPercentileTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAssessmentPercentileTypesService">IAssessmentPercentileTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController.GetAssessmentPercentileTypesAsync">
            <summary>
            Return all assessmentPercentileTypes
            </summary>
            <returns>List of AssessmentPercentileTypes <see cref="T:Ellucian.Colleague.Dtos.AssessmentPercentileTypes"/> objects representing matching assessmentPercentileTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController.GetAssessmentPercentileTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a assessmentPercentileTypes using a GUID
            </summary>
            <param name="guid">GUID to desired assessmentPercentileTypes</param>
            <returns>A assessmentPercentileTypes object <see cref="T:Ellucian.Colleague.Dtos.AssessmentPercentileTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController.PostAssessmentPercentileTypesAsync(Ellucian.Colleague.Dtos.AssessmentPercentileTypes)">
            <summary>
            Create (POST) a new assessmentPercentileTypes
            </summary>
            <param name="assessmentPercentileTypes">DTO of the new assessmentPercentileTypes</param>
            <returns>A assessmentPercentileTypes object <see cref="T:Ellucian.Colleague.Dtos.AssessmentPercentileTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController.PutAssessmentPercentileTypesAsync(System.String,Ellucian.Colleague.Dtos.AssessmentPercentileTypes)">
            <summary>
            Update (PUT) an existing assessmentPercentileTypes
            </summary>
            <param name="guid">GUID of the assessmentPercentileTypes to update</param>
            <param name="assessmentPercentileTypes">DTO of the updated assessmentPercentileTypes</param>
            <returns>A assessmentPercentileTypes object <see cref="T:Ellucian.Colleague.Dtos.AssessmentPercentileTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentPercentileTypesController.DeleteAssessmentPercentileTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a assessmentPercentileTypes
            </summary>
            <param name="guid">GUID to desired assessmentPercentileTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController">
            <summary>
            Provides access to AssessmentSpecialCircumstances data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AssessmentSpecialCircumstancesController class.
            </summary>
            <param name="curriculumService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController.GetAssessmentSpecialCircumstancesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all assessment special circumstances.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All AssessmentSpecialCircumstance objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController.GetAssessmentSpecialCircumstanceByIdAsync(System.String)">
            <summary>
            Retrieves an Assessment special circumstances by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance">AssessmentSpecialCircumstance</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController.PostAssessmentSpecialCircumstanceAsync(Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance)">
            <summary>
            Creates a Assessment Special Circumstance.
            </summary>
            <param name="assessmentSpecialCircumstance"><see cref="T:Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance">AssessmentSpecialCircumstance</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance">AssessmentSpecialCircumstance</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController.PutAssessmentSpecialCircumstanceAsync(System.String,Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance)">
            <summary>
            Updates a Assessment Special Circumstance.
            </summary>
            <param name="id">Id of the Assessment Special Circumstance to update</param>
            <param name="assessmentSpecialCircumstance"><see cref="T:Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance">AssessmentSpecialCircumstance</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AssessmentSpecialCircumstance">AssessmentSpecialCircumstance</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AssessmentSpecialCircumstancesController.DeleteAssessmentSpecialCircumstanceAsync(System.String)">
            <summary>
            Deletes a Assessment Special Circumstance.
            </summary>
            <param name="id">ID of the Assessment Special Circumstance to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController">
            <summary>
            Provides access to AttendanceCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAttendanceCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AttendanceCategoriesController class.
            </summary>
            <param name="attendanceCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAttendanceCategoriesService">IAttendanceCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController.GetAttendanceCategoriesAsync">
            <summary>
            Return all attendanceCategories
            </summary>
            <returns>List of AttendanceCategories <see cref="T:Ellucian.Colleague.Dtos.AttendanceCategories"/> objects representing matching attendanceCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController.GetAttendanceCategoriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a attendanceCategories using a GUID
            </summary>
            <param name="guid">GUID to desired attendanceCategories</param>
            <returns>A attendanceCategories object <see cref="T:Ellucian.Colleague.Dtos.AttendanceCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController.PostAttendanceCategoriesAsync(Ellucian.Colleague.Dtos.AttendanceCategories)">
            <summary>
            Create (POST) a new attendanceCategories
            </summary>
            <param name="attendanceCategories">DTO of the new attendanceCategories</param>
            <returns>A attendanceCategories object <see cref="T:Ellucian.Colleague.Dtos.AttendanceCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController.PutAttendanceCategoriesAsync(System.String,Ellucian.Colleague.Dtos.AttendanceCategories)">
            <summary>
            Update (PUT) an existing attendanceCategories
            </summary>
            <param name="guid">GUID of the attendanceCategories to update</param>
            <param name="attendanceCategories">DTO of the updated attendanceCategories</param>
            <returns>A attendanceCategories object <see cref="T:Ellucian.Colleague.Dtos.AttendanceCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.AttendanceCategoriesController.DeleteAttendanceCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a attendanceCategories
            </summary>
            <param name="guid">GUID to desired attendanceCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController">
            <summary>
            Provides access to BillingOverrideReasons
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IBillingOverrideReasonsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BillingOverrideReasonsController class.
            </summary>
            <param name="billingOverrideReasonsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IBillingOverrideReasonsService">IBillingOverrideReasonsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController.GetBillingOverrideReasonsAsync">
            <summary>
            Return all billingOverrideReasons
            </summary>
            <returns>List of BillingOverrideReasons <see cref="T:Ellucian.Colleague.Dtos.BillingOverrideReasons"/> objects representing matching billingOverrideReasons</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController.GetBillingOverrideReasonsByGuidAsync(System.String)">
            <summary>
            Read (GET) a billingOverrideReasons using a GUID
            </summary>
            <param name="guid">GUID to desired billingOverrideReasons</param>
            <returns>A billingOverrideReasons object <see cref="T:Ellucian.Colleague.Dtos.BillingOverrideReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController.PostBillingOverrideReasonsAsync(Ellucian.Colleague.Dtos.BillingOverrideReasons)">
            <summary>
            Create (POST) a new billingOverrideReasons
            </summary>
            <param name="billingOverrideReasons">DTO of the new billingOverrideReasons</param>
            <returns>A billingOverrideReasons object <see cref="T:Ellucian.Colleague.Dtos.BillingOverrideReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController.PutBillingOverrideReasonsAsync(System.String,Ellucian.Colleague.Dtos.BillingOverrideReasons)">
            <summary>
            Update (PUT) an existing billingOverrideReasons
            </summary>
            <param name="guid">GUID of the billingOverrideReasons to update</param>
            <param name="billingOverrideReasons">DTO of the updated billingOverrideReasons</param>
            <returns>A billingOverrideReasons object <see cref="T:Ellucian.Colleague.Dtos.BillingOverrideReasons"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.BillingOverrideReasonsController.DeleteBillingOverrideReasonsAsync(System.String)">
            <summary>
            Delete (DELETE) a billingOverrideReasons
            </summary>
            <param name="guid">GUID to desired billingOverrideReasons</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CapSizesController">
            <summary>
            Provides access to the cap size data for graduation.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CapSizesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CapSizesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CapSizesController.GetAsync">
            <summary>
            Retrieves all Cap Sizes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CapSize">Cap Size</see> codes and descriptions.</returns>
            <accessComments>Any authenticated user can retrieve cap sizes.</accessComments>
            <note>CapSizes are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController">
            <summary>
            Provides access to ChargeAssessmentMethods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IChargeAssessmentMethodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ChargeAssessmentMethodsController class.
            </summary>
            <param name="chargeAssessmentMethodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IChargeAssessmentMethodsService">IChargeAssessmentMethodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController.GetChargeAssessmentMethodsAsync">
            <summary>
            Return all chargeAssessmentMethods
            </summary>
            <returns>List of ChargeAssessmentMethods <see cref="T:Ellucian.Colleague.Dtos.ChargeAssessmentMethods"/> objects representing matching chargeAssessmentMethods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController.GetChargeAssessmentMethodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a chargeAssessmentMethods using a GUID
            </summary>
            <param name="guid">GUID to desired chargeAssessmentMethods</param>
            <returns>A chargeAssessmentMethods object <see cref="T:Ellucian.Colleague.Dtos.ChargeAssessmentMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController.PostChargeAssessmentMethodsAsync(Ellucian.Colleague.Dtos.ChargeAssessmentMethods)">
            <summary>
            Create (POST) a new chargeAssessmentMethods
            </summary>
            <param name="chargeAssessmentMethods">DTO of the new chargeAssessmentMethods</param>
            <returns>A chargeAssessmentMethods object <see cref="T:Ellucian.Colleague.Dtos.ChargeAssessmentMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController.PutChargeAssessmentMethodsAsync(System.String,Ellucian.Colleague.Dtos.ChargeAssessmentMethods)">
            <summary>
            Update (PUT) an existing chargeAssessmentMethods
            </summary>
            <param name="guid">GUID of the chargeAssessmentMethods to update</param>
            <param name="chargeAssessmentMethods">DTO of the updated chargeAssessmentMethods</param>
            <returns>A chargeAssessmentMethods object <see cref="T:Ellucian.Colleague.Dtos.ChargeAssessmentMethods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ChargeAssessmentMethodsController.DeleteChargeAssessmentMethodsAsync(System.String)">
            <summary>
            Delete (DELETE) a chargeAssessmentMethods
            </summary>
            <param name="guid">GUID to desired chargeAssessmentMethods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CipCodesController">
            <summary>
            Provides access to CipCode data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CipCodesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICipCodeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CipCodesController class.
            </summary>
            <param name="cipCodeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICipCodeService">ICipService</see>/></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CipCodesController.GetCipCodesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 1.1.0</remarks>
            <summary>
            Retrieves all student statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.CipCode">CipCodes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CipCodesController.GetCipCodeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 6</remarks>
            <summary>
            Retrieves an student status by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CipCode">CipCode.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CipCodesController.PutCipCodeAsync(System.String,Ellucian.Colleague.Dtos.CipCode)">
            <summary>
            Updates a CipCode.
            </summary>
            <param name="id">Id to PUT data to</param>
            <param name="cipCode"><see cref="T:Ellucian.Colleague.Dtos.CipCode">CipCode</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.CipCode">CipCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CipCodesController.PostCipCodeAsync(Ellucian.Colleague.Dtos.CipCode)">
            <summary>
            Creates a CipCode.
            </summary>
            <param name="cipCode"><see cref="T:Ellucian.Colleague.Dtos.CipCode">CipCode</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CipCode">CipCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CipCodesController.DeleteCipCodeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing CipCode
            </summary>
            <param name="id">Id of the CipCode to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CoursePlaceholdersController">
            <summary>
            Controller for course placeholder data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CoursePlaceholdersController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICoursePlaceholderService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Creates a new instance of the <see cref="T:Ellucian.Colleague.Api.Controllers.Student.CoursePlaceholdersController"/> class.
            </summary>
            <param name="coursePlaceholderService">Interface to course placeholder coordination service</param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CoursePlaceholdersController.QueryCoursePlaceholdersByIdsAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a collection of course placeholders by ID
            </summary>
            <param name="coursePlaceholderIds">Unique identifiers for course placeholders to retrieve</param>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.CoursePlaceholder"/></returns>
            <accessComments>Any authenticated user can retrieve course placeholder information.</accessComments>
            <note>Course placeholder information is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController">
            <summary>
            Provides access to CourseStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICourseStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CourseStatusesController class.
            </summary>
            <param name="courseStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseStatusesService">ICourseStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController.GetCourseStatusesAsync">
            <summary>
            Return all courseStatuses
            </summary>
            <returns>List of CourseStatuses <see cref="T:Ellucian.Colleague.Dtos.CourseStatuses"/> objects representing matching courseStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController.GetCourseStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a courseStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired courseStatuses</param>
            <returns>A courseStatuses object <see cref="T:Ellucian.Colleague.Dtos.CourseStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController.PostCourseStatusesAsync(Ellucian.Colleague.Dtos.CourseStatuses)">
            <summary>
            Create (POST) a new courseStatuses
            </summary>
            <param name="courseStatuses">DTO of the new courseStatuses</param>
            <returns>A courseStatuses object <see cref="T:Ellucian.Colleague.Dtos.CourseStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController.PutCourseStatusesAsync(System.String,Ellucian.Colleague.Dtos.CourseStatuses)">
            <summary>
            Update (PUT) an existing courseStatuses
            </summary>
            <param name="guid">GUID of the courseStatuses to update</param>
            <param name="courseStatuses">DTO of the updated courseStatuses</param>
            <returns>A courseStatuses object <see cref="T:Ellucian.Colleague.Dtos.CourseStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseStatusesController.DeleteCourseStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a courseStatuses
            </summary>
            <param name="guid">GUID to desired courseStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController">
            <summary>
            Provides access to CourseTitleTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICourseTitleTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CourseTitleTypesController class.
            </summary>
            <param name="courseTitleTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseTitleTypesService">ICourseTitleTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController.GetCourseTitleTypesAsync">
            <summary>
            Return all courseTitleTypes
            </summary>
            <returns>List of CourseTitleTypes <see cref="T:Ellucian.Colleague.Dtos.CourseTitleType"/> objects representing matching courseTitleTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController.GetCourseTitleTypeByGuidAsync(System.String)">
            <summary>
            Read (GET) a courseTitleTypes using a GUID
            </summary>
            <param name="guid">GUID to desired courseTitleTypes</param>
            <returns>A courseTitleTypes object <see cref="T:Ellucian.Colleague.Dtos.CourseTitleType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController.PostCourseTitleTypesAsync(Ellucian.Colleague.Dtos.CourseTitleType)">
            <summary>
            Create (POST) a new courseTitleTypes
            </summary>
            <param name="courseTitleTypes">DTO of the new courseTitleTypes</param>
            <returns>A courseTitleTypes object <see cref="T:Ellucian.Colleague.Dtos.CourseTitleType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController.PutCourseTitleTypesAsync(System.String,Ellucian.Colleague.Dtos.CourseTitleType)">
            <summary>
            Update (PUT) an existing courseTitleTypes
            </summary>
            <param name="guid">GUID of the courseTitleTypes to update</param>
            <param name="courseTitleTypes">DTO of the updated courseTitleTypes</param>
            <returns>A courseTitleTypes object <see cref="T:Ellucian.Colleague.Dtos.CourseTitleType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTitleTypesController.DeleteCourseTitleTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a courseTitleTypes
            </summary>
            <param name="guid">GUID to desired courseTitleTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController">
            <summary>
            Provides access to CourseTopics
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICourseTopicsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CourseTopicsController class.
            </summary>
            <param name="courseTopicsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseTopicsService">ICourseTopicsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController.GetCourseTopicsAsync">
            <summary>
            Return all courseTopics
            </summary>
            <returns>List of CourseTopics <see cref="T:Ellucian.Colleague.Dtos.CourseTopics"/> objects representing matching courseTopics</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController.GetCourseTopicsByGuidAsync(System.String)">
            <summary>
            Read (GET) a courseTopics using a GUID
            </summary>
            <param name="guid">GUID to desired courseTopics</param>
            <returns>A courseTopics object <see cref="T:Ellucian.Colleague.Dtos.CourseTopics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController.PostCourseTopicsAsync(Ellucian.Colleague.Dtos.CourseTopics)">
            <summary>
            Create (POST) a new courseTopics
            </summary>
            <param name="courseTopics">DTO of the new courseTopics</param>
            <returns>A courseTopics object <see cref="T:Ellucian.Colleague.Dtos.CourseTopics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController.PutCourseTopicsAsync(System.String,Ellucian.Colleague.Dtos.CourseTopics)">
            <summary>
            Update (PUT) an existing courseTopics
            </summary>
            <param name="guid">GUID of the courseTopics to update</param>
            <param name="courseTopics">DTO of the updated courseTopics</param>
            <returns>A courseTopics object <see cref="T:Ellucian.Colleague.Dtos.CourseTopics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTopicsController.DeleteCourseTopicsAsync(System.String)">
            <summary>
            Delete (DELETE) a courseTopics
            </summary>
            <param name="guid">GUID to desired courseTopics</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController">
            <summary>
            Provides access to CourseTransferStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICourseTransferStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CourseTransferStatusesController class.
            </summary>
            <param name="courseTransferStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseTransferStatusesService">ICourseTransferStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController.GetCourseTransferStatusesAsync">
            <summary>
            Return all courseTransferStatuses
            </summary>
            <returns>List of CourseTransferStatuses <see cref="T:Ellucian.Colleague.Dtos.CourseTransferStatuses"/> objects representing matching courseTransferStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController.GetCourseTransferStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a courseTransferStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired courseTransferStatuses</param>
            <returns>A courseTransferStatuses object <see cref="T:Ellucian.Colleague.Dtos.CourseTransferStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController.PostCourseTransferStatusesAsync(Ellucian.Colleague.Dtos.CourseTransferStatuses)">
            <summary>
            Create (POST) a new courseTransferStatuses
            </summary>
            <param name="courseTransferStatuses">DTO of the new courseTransferStatuses</param>
            <returns>A courseTransferStatuses object <see cref="T:Ellucian.Colleague.Dtos.CourseTransferStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController.PutCourseTransferStatusesAsync(System.String,Ellucian.Colleague.Dtos.CourseTransferStatuses)">
            <summary>
            Update (PUT) an existing courseTransferStatuses
            </summary>
            <param name="guid">GUID of the courseTransferStatuses to update</param>
            <param name="courseTransferStatuses">DTO of the updated courseTransferStatuses</param>
            <returns>A courseTransferStatuses object <see cref="T:Ellucian.Colleague.Dtos.CourseTransferStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CourseTransferStatusesController.DeleteCourseTransferStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a courseTransferStatuses
            </summary>
            <param name="guid">GUID to desired courseTransferStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController">
            <summary>
            Provides access to CreditTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            CreditTypesController constructor
            </summary>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.GetCreditCategories3Async">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all credit categories.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All CreditCategory objects</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.GetCreditCategoryByGuid3Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a credit category by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CreditCategory3">CreditCategory.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.PostCreditCategoryAsync(Ellucian.Colleague.Dtos.CreditCategory2)">
            <summary>
            Creates a Credit Category.
            </summary>
            <metadata>
            <apiType>ethos</apiType>
            </metadata>
            <param name="creditCategory"><see cref="T:Ellucian.Colleague.Dtos.CreditCategory2">CreditCategory</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CreditCategory2">CreditCategory</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.PostCreditCategoryV6Async(Ellucian.Colleague.Dtos.CreditCategory3)">
            <summary>
            Creates a Credit Category.
            </summary>
            <metadata>
            <apiType>ethos</apiType>
            </metadata>
            <param name="creditCategory"><see cref="T:Ellucian.Colleague.Dtos.CreditCategory3">CreditCategory</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CreditCategory3">CreditCategory</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.PutCreditCategoryAsync(System.String,Ellucian.Colleague.Dtos.CreditCategory2)">
            <summary>
            Updates a Credit Category.
            </summary>
            <metadata>
            <apiType>ethos</apiType>
            </metadata>
            <param name="id">Id of the Credit Category to update</param>
            <param name="creditCategory"><see cref="T:Ellucian.Colleague.Dtos.CreditCategory2">CreditCategory</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CreditCategory2">CreditCategory</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.PutCreditCategoryV6Async(System.String,Ellucian.Colleague.Dtos.CreditCategory3)">
            <summary>
            Updates a Credit Category.
            </summary>
            <metadata>
            <apiType>ethos</apiType>
            </metadata>
            <param name="id">Id of the Credit Category to update</param>
            <param name="creditCategory"><see cref="T:Ellucian.Colleague.Dtos.CreditCategory3">CreditCategory</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CreditCategory3">CreditCategory</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.DeleteCreditCategoryAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Credit Category
            </summary>
            <metadata>
            <apiType>ethos</apiType>
            </metadata>
            <param name="id">Id of the Credit Category to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditCategoriesController.DeleteCreditCategoryV6Async(System.String)">
            <summary>
            Delete (DELETE) an existing Credit Category
            </summary>
            <metadata>
            <apiType>ethos</apiType>
            </metadata>
            <param name="id">Id of the Credit Category to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.CreditTypesController">
            <summary>
            Provides access to CreditTypes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CredTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.CreditTypesController.GetAsync">
            <summary>
            Return all Credit Types Code and Description
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.CredType">CredType</see></returns>
            <note>CreditType is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.DepartmentalOversightController">
            <summary>
            Provides access to departmental oversight data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.DepartmentalOversightController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IDepartmentalOversightService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="departmentalOversightService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IDepartmentalOversightService">IDepartmentalOversightService</see> </param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.DepartmentalOversightController.QueryDepartmentalOversightByPostAsync(Ellucian.Colleague.Dtos.Student.DeptOversightSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Search sections by their name or by assigned faculty ID/name
            The Departmental oversight can do this search for the sections under his/her Departments
            </summary>
            <param name="criteria">DeptOversightSearchCriteria object </param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden exception returned if user does not have permission to access this data.</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest exception returned for any other unexpected error.</exception>
            <returns> a list of DeptOversightSearchResult objects to be displayed in Self service</returns>
            <accessComments>
            Any authenticated user who has the View.Person.Information permission can access this end point
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.DepartmentalOversightController.GetDepartmentalOversightPermissionsAsync">
            <summary>
            Gets the departmental oversight permissions asynchronous.
            </summary>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.DepartmentalOversightPermissions">Departmental oversight permissions for the current user</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.DepartmentalOversightController.QueryDepartmentalOversightDetailsAsync(Ellucian.Colleague.Dtos.Student.DeptOversightDetailsCriteria)">
            <summary>
            Retrieves Departmental Oversight and Faculty details.
            </summary>
            <param name="criteria">DeptOversightDetailsCriteria object </param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.DepartmentalOversight">DepartmentalOversight and Faculty</see></returns>
            <accessComments>
            1. A faculty or departmental oversight user who is assigned to the requested course section can view details like first name, last name of the person performing the crud operations.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.DropReasonsController">
            <summary>
            Provides access to the cap size data for graduation.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.DropReasonsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CapSizesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.DropReasonsController.GetAsync">
            <summary>
            Retrieves all Drop Reasons codes and corresponding descriptions.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.DropReason">Drop Reason</see> codes and descriptions.</returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Drop reason data is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController">
            <summary>
            Provides access to EducationalGoals
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IEducationalGoalsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EducationalGoalsController class.
            </summary>
            <param name="educationalGoalsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IEducationalGoalsService">IEducationalGoalsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController.GetEducationalGoalsAsync">
            <summary>
            Return all educationalGoals
            </summary>
            <returns>List of EducationalGoals <see cref="T:Ellucian.Colleague.Dtos.EducationalGoals"/> objects representing matching educationalGoals</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController.GetEducationalGoalsByGuidAsync(System.String)">
            <summary>
            Read (GET) a educationalGoals using a GUID
            </summary>
            <param name="guid">GUID to desired educationalGoals</param>
            <returns>A educationalGoals object <see cref="T:Ellucian.Colleague.Dtos.EducationalGoals"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController.PostEducationalGoalsAsync(Ellucian.Colleague.Dtos.EducationalGoals)">
            <summary>
            Create (POST) a new educationalGoals
            </summary>
            <param name="educationalGoals">DTO of the new educationalGoals</param>
            <returns>A educationalGoals object <see cref="T:Ellucian.Colleague.Dtos.EducationalGoals"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController.PutEducationalGoalsAsync(System.String,Ellucian.Colleague.Dtos.EducationalGoals)">
            <summary>
            Update (PUT) an existing educationalGoals
            </summary>
            <param name="guid">GUID of the educationalGoals to update</param>
            <param name="educationalGoals">DTO of the updated educationalGoals</param>
            <returns>A educationalGoals object <see cref="T:Ellucian.Colleague.Dtos.EducationalGoals"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationalGoalsController.DeleteEducationalGoalsAsync(System.String)">
            <summary>
            Delete (DELETE) a educationalGoals
            </summary>
            <param name="guid">GUID to desired educationalGoals</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.EducationGoalsController">
            <summary>
            Provides access to the education goal data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationGoalsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EducationGoalsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.EducationGoalsController.GetEducationGoalsAsync">
            <summary>
            Returns all education goals
            </summary>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.EducationGoal">education goals</see></returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Education goal information is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController">
            <summary>
            Controller for External Education
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IExternalEducationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the External Education Controller class.
            </summary>
            <param name="externalEducationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IExternalEducationService">IExternalEducationService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController.GetExternalEducationsAsync(Ellucian.Web.Http.Models.Paging,System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all External Education
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.ExternalEducation">External Education.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController.GetExternalEducationByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves an External Education by GUID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.ExternalEducation">External Education.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController.PostExternalEducationAsync(Ellucian.Colleague.Dtos.ExternalEducation)">
            <summary>        
            Creates an External Education
            </summary>
            <param name="externalEducation"><see cref="T:Ellucian.Colleague.Dtos.ExternalEducation">ExternalEducation</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.ExternalEducation">ExternalEducation</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController.PutExternalEducationAsync(System.String,Ellucian.Colleague.Dtos.ExternalEducation)">
            <summary>        
            Updates an External Education.
            </summary>
            <param name="id">Id of the External Education to update</param>
            <param name="externalEducation"><see cref="T:Ellucian.Colleague.Dtos.ExternalEducation">ExternalEducation</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.ExternalEducation">ExternalEducation</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ExternalEducationController.DeleteExternalEducationAsync(System.String)">
            <summary>
            Delete (DELETE) an existing External Education
            </summary>
            <param name="id">Id of the External Education to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FALinkController">
            <summary>
            Links Controller is used to get links for the Financial Aid Homepage
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FALinkController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Domain.Student.Repositories.IFALinkRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            FA Link Controller constructor
            </summary>
            <param name="faLinkRepository">FA Link repository</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FALinkController.PostAsync(Ellucian.Colleague.Dtos.Student.FALinkDocument)">
            <summary>
            Send the input FA Link document to Colleague to be processed by Trimdata's CTX/subroutines.
            </summary>
            <param name="inputDocument">FA Link input Document</param>
            <returns>Output FA Link document</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController">
            <summary>
            Provides access to FinancialAidAcademicProgressStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidAcademicProgressStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidAcademicProgressStatusesController class.
            </summary>
            <param name="financialAidAcademicProgressStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidAcademicProgressStatusesService">IFinancialAidAcademicProgressStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController.GetFinancialAidAcademicProgressStatusesAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all financialAidAcademicProgressStatuses
            </summary>
            <returns>List of FinancialAidAcademicProgressStatuses <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressStatuses"/> objects representing matching financialAidAcademicProgressStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController.GetFinancialAidAcademicProgressStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a financialAidAcademicProgressStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired financialAidAcademicProgressStatuses</param>
            <returns>A financialAidAcademicProgressStatuses object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController.PostFinancialAidAcademicProgressStatusesAsync(Ellucian.Colleague.Dtos.FinancialAidAcademicProgressStatuses)">
            <summary>
            Create (POST) a new financialAidAcademicProgressStatuses
            </summary>
            <param name="financialAidAcademicProgressStatuses">DTO of the new financialAidAcademicProgressStatuses</param>
            <returns>A financialAidAcademicProgressStatuses object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController.PutFinancialAidAcademicProgressStatusesAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidAcademicProgressStatuses)">
            <summary>
            Update (PUT) an existing financialAidAcademicProgressStatuses
            </summary>
            <param name="guid">GUID of the financialAidAcademicProgressStatuses to update</param>
            <param name="financialAidAcademicProgressStatuses">DTO of the updated financialAidAcademicProgressStatuses</param>
            <returns>A financialAidAcademicProgressStatuses object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressStatusesController.DeleteFinancialAidAcademicProgressStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a financialAidAcademicProgressStatuses
            </summary>
            <param name="guid">GUID to desired financialAidAcademicProgressStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController">
            <summary>
            Provides access to FinancialAidAcademicProgressTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidAcademicProgressTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidAcademicProgressTypesController class.
            </summary>
            <param name="financialAidAcademicProgressTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidAcademicProgressTypesService">IFinancialAidAcademicProgressTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController.GetFinancialAidAcademicProgressTypesAsync">
            <summary>
            Return all financialAidAcademicProgressTypes
            </summary>
            <returns>List of FinancialAidAcademicProgressTypes <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressTypes"/> objects representing matching financialAidAcademicProgressTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController.GetFinancialAidAcademicProgressTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a financialAidAcademicProgressTypes using a GUID
            </summary>
            <param name="guid">GUID to desired financialAidAcademicProgressTypes</param>
            <returns>A financialAidAcademicProgressTypes object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController.PostFinancialAidAcademicProgressTypesAsync(Ellucian.Colleague.Dtos.FinancialAidAcademicProgressTypes)">
            <summary>
            Create (POST) a new financialAidAcademicProgressTypes
            </summary>
            <param name="financialAidAcademicProgressTypes">DTO of the new financialAidAcademicProgressTypes</param>
            <returns>A financialAidAcademicProgressTypes object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController.PutFinancialAidAcademicProgressTypesAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidAcademicProgressTypes)">
            <summary>
            Update (PUT) an existing financialAidAcademicProgressTypes
            </summary>
            <param name="guid">GUID of the financialAidAcademicProgressTypes to update</param>
            <param name="financialAidAcademicProgressTypes">DTO of the updated financialAidAcademicProgressTypes</param>
            <returns>A financialAidAcademicProgressTypes object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAcademicProgressTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAcademicProgressTypesController.DeleteFinancialAidAcademicProgressTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a financialAidAcademicProgressTypes
            </summary>
            <param name="guid">GUID to desired financialAidAcademicProgressTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController">
            <summary>
            Provides access to FinancialAidApplicationOutcomes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidApplicationOutcomeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidApplicationOutcomesController class.
            </summary>
            <param name="financialAidApplicationOutcomeService">FinancialAidApplicationOutcomeService</param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController.GetFinancialAidApplicationOutcomesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all financialAidApplicationOutcomes
            </summary>
            <returns>List of FinancialAidApplicationOutcomes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController.GetFinancialAidApplicationOutcomesByGuidAsync(System.String)">
            <summary>
            Read (GET) a financialAidApplicationOutcomes using a GUID
            </summary>
            <param name="id">GUID to desired financialAidApplicationOutcomes</param>
            <returns>A single financialAidApplicationOutcomes object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController.CreateAsync(Ellucian.Colleague.Dtos.FinancialAidApplicationOutcome)">
            <summary>
            Create (POST) a new financialAidApplicationOutcomes
            </summary>
            <param name="financialAidApplicationOutcomes">DTO of the new financialAidApplicationOutcomes</param>
            <returns>A single financialAidApplicationOutcomes object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidApplicationOutcome)">
            <summary>
            Update (PUT) an existing financialAidApplicationOutcomes
            </summary>
            <param name="id">GUID of the financialAidApplicationOutcomes to update</param>
            <param name="financialAidApplicationOutcomes">DTO of the updated financialAidApplicationOutcomes</param>
            <returns>A single financialAidApplicationOutcomes object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidApplicationOutcomesController.DeleteAsync(System.String)">
            <summary>
            Delete (DELETE) a financialAidApplicationOutcomes
            </summary>
            <param name="id">GUID to desired financialAidApplicationOutcomes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController">
            <summary>
            Provides access to FinancialAidAwardPeriods data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidAwardPeriodService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidAwardPeriodsController class.
            </summary>
            <param name="financialAidAwardPeriodService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidAwardPeriodService">IFinancialAidAwardPeriodService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController.GetFinancialAidAwardPeriodsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all financial aid award periods.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All FinancialAidAwardPeriod objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController.GetFinancialAidAwardPeriodByIdAsync(System.String)">
            <summary>
            Retrieves an Financial Aid Award Periods by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAwardPeriod">FinancialAidAwardPeriod</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController.PostFinancialAidAwardPeriodAsync(Ellucian.Colleague.Dtos.FinancialAidAwardPeriod)">
            <summary>
            Creates a Financial Aid Award Period.
            </summary>
            <param name="financialAidAwardPeriod"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidAwardPeriod">FinancialAidAwardPeriod</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAwardPeriod">FinancialAidAwardPeriod</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController.PutFinancialAidAwardPeriodAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidAwardPeriod)">
            <summary>
            Updates a Financial Aid Award Period.
            </summary>
            <param name="id">Id of the Financial Aid Award Period to update</param>
            <param name="financialAidAwardPeriod"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidAwardPeriod">FinancialAidAwardPeriod</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.FinancialAidAwardPeriod">FinancialAidAwardPeriod</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidAwardPeriodsController.DeleteFinancialAidAwardPeriodAsync(System.String)">
            <summary>
            Deletes a Financial Aid Award Period.
            </summary>
            <param name="id">ID of the Financial Aid Award Period to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController">
            <summary>
            Provides access to FinancialAidFundCategories data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidFundCategoryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidFundCategoriesController class.
            </summary>
            <param name="financialAidFundCategoryService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidFundCategoryService">IFinancialAidFundCategoryService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController.GetFinancialAidFundCategoriesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all financial aid fund categories.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All FinancialAidFundCategory objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController.GetFinancialAidFundCategoryByIdAsync(System.String)">
            <summary>
            Retrieves an Financial Aid FundCategories by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundCategory">FinancialAidFundCategory</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController.PostFinancialAidFundCategoryAsync(Ellucian.Colleague.Dtos.FinancialAidFundCategory)">
            <summary>
            Creates a Financial Aid Fund Category.
            </summary>
            <param name="financialAidFundCategory"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundCategory">FinancialAidFundCategory</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundCategory">FinancialAidFundCategory</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController.PutFinancialAidFundCategoryAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidFundCategory)">
            <summary>
            Updates a Financial Aid Fund Category.
            </summary>
            <param name="id">Id of the Financial Aid Fund Category to update</param>
            <param name="financialAidFundCategory"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundCategory">FinancialAidFundCategory</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundCategory">FinancialAidFundCategory</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundCategoriesController.DeleteFinancialAidFundCategoryAsync(System.String)">
            <summary>
            Deletes a Financial Aid Fund Category.
            </summary>
            <param name="id">ID of the Financial Aid Fund Category to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController">
            <summary>
            Provides access to FinancialAidFundClassifications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidFundClassificationsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidFundClassificationsController class.
            </summary>
            <param name="financialAidFundClassificationsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidFundClassificationsService">IFinancialAidFundClassificationsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController.GetFinancialAidFundClassificationsAsync">
            <summary>
            Return all financialAidFundClassifications
            </summary>
            <returns>List of FinancialAidFundClassifications <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundClassifications"/> objects representing matching financialAidFundClassifications</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController.GetFinancialAidFundClassificationsByGuidAsync(System.String)">
            <summary>
            Read (GET) a financialAidFundClassifications using a GUID
            </summary>
            <param name="guid">GUID to desired financialAidFundClassifications</param>
            <returns>A financialAidFundClassifications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController.PostFinancialAidFundClassificationsAsync(Ellucian.Colleague.Dtos.FinancialAidFundClassifications)">
            <summary>
            Create (POST) a new financialAidFundClassifications
            </summary>
            <param name="financialAidFundClassifications">DTO of the new financialAidFundClassifications</param>
            <returns>A financialAidFundClassifications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController.PutFinancialAidFundClassificationsAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidFundClassifications)">
            <summary>
            Update (PUT) an existing financialAidFundClassifications
            </summary>
            <param name="guid">GUID of the financialAidFundClassifications to update</param>
            <param name="financialAidFundClassifications">DTO of the updated financialAidFundClassifications</param>
            <returns>A financialAidFundClassifications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFundClassifications"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundClassificationsController.DeleteFinancialAidFundClassificationsAsync(System.String)">
            <summary>
            Delete (DELETE) a financialAidFundClassifications
            </summary>
            <param name="guid">GUID to desired financialAidFundClassifications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController">
            <summary>
            Provides access to FinancialAidFunds
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidFundsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidFundsController class.
            </summary>
            <param name="financialAidFundsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidFundsService">IFinancialAidFundsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController.GetFinancialAidFundsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all financialAidFunds
            </summary>
            <returns>List of FinancialAidFunds <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFunds"/> objects representing matching financialAidFunds</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController.GetFinancialAidFundsByGuidAsync(System.String)">
            <summary>
            Read (GET) a financialAidFunds using a GUID
            </summary>
            <param name="id">GUID to desired financialAidFunds</param>
            <returns>A financialAidFunds object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFunds"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController.PostFinancialAidFundsAsync(Ellucian.Colleague.Dtos.FinancialAidFunds)">
            <summary>
            Create (POST) a new financialAidFunds
            </summary>
            <param name="financialAidFunds">DTO of the new financialAidFunds</param>
            <returns>A financialAidFunds object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFunds"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController.PutFinancialAidFundsAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidFunds)">
            <summary>
            Update (PUT) an existing financialAidFunds
            </summary>
            <param name="id">GUID of the financialAidFunds to update</param>
            <param name="financialAidFunds">DTO of the updated financialAidFunds</param>
            <returns>A financialAidFunds object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidFunds"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidFundsController.DeleteFinancialAidFundsAsync(System.String)">
            <summary>
            Delete (DELETE) a financialAidFunds
            </summary>
            <param name="id">GUID to desired financialAidFunds</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController">
            <summary>
            Provides access to FinancialAidYears data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFinancialAidYearService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidYearsController class.
            </summary>
            <param name="financialAidYearService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFinancialAidYearService">IFinancialAidYearService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController.GetFinancialAidYearsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all financial aid years.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All FinancialAidYear objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController.GetFinancialAidYearByIdAsync(System.String)">
            <summary>
            Retrieves an Financial Aid Years by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.FinancialAidYear">FinancialAidYear</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController.PostFinancialAidYearAsync(Ellucian.Colleague.Dtos.FinancialAidYear)">
            <summary>
            Creates a Financial Aid Year.
            </summary>
            <param name="financialAidYear"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidYear">FinancialAidYear</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.FinancialAidYear">FinancialAidYear</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController.PutFinancialAidYearAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidYear)">
            <summary>
            Updates a Financial Aid Year.
            </summary>
            <param name="id">Id of the Financial Aid Year to update</param>
            <param name="financialAidYear"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidYear">FinancialAidYear</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.FinancialAidYear">FinancialAidYear</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FinancialAidYearsController.DeleteFinancialAidYearAsync(System.String)">
            <summary>
            Deletes a Financial Aid Year.
            </summary>
            <param name="id">ID of the Financial Aid Year to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController">
            <summary>
            Provides access to FloorCharacteristics
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFloorCharacteristicsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FloorCharacteristicsController class.
            </summary>
            <param name="floorCharacteristicsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFloorCharacteristicsService">IFloorCharacteristicsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController.GetFloorCharacteristicsAsync">
            <summary>
            Return all floorCharacteristics
            </summary>
            <returns>List of FloorCharacteristics <see cref="T:Ellucian.Colleague.Dtos.FloorCharacteristics"/> objects representing matching floorCharacteristics</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController.GetFloorCharacteristicsByGuidAsync(System.String)">
            <summary>
            Read (GET) a floorCharacteristics using a GUID
            </summary>
            <param name="guid">GUID to desired floorCharacteristics</param>
            <returns>A floorCharacteristics object <see cref="T:Ellucian.Colleague.Dtos.FloorCharacteristics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController.PostFloorCharacteristicsAsync(Ellucian.Colleague.Dtos.FloorCharacteristics)">
            <summary>
            Create (POST) a new floorCharacteristics
            </summary>
            <param name="floorCharacteristics">DTO of the new floorCharacteristics</param>
            <returns>A floorCharacteristics object <see cref="T:Ellucian.Colleague.Dtos.FloorCharacteristics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController.PutFloorCharacteristicsAsync(System.String,Ellucian.Colleague.Dtos.FloorCharacteristics)">
            <summary>
            Update (PUT) an existing floorCharacteristics
            </summary>
            <param name="guid">GUID of the floorCharacteristics to update</param>
            <param name="floorCharacteristics">DTO of the updated floorCharacteristics</param>
            <returns>A floorCharacteristics object <see cref="T:Ellucian.Colleague.Dtos.FloorCharacteristics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.FloorCharacteristicsController.DeleteFloorCharacteristicsAsync(System.String)">
            <summary>
            Delete (DELETE) a floorCharacteristics
            </summary>
            <param name="guid">GUID to desired floorCharacteristics</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.GownSizesController">
            <summary>
            Provides access to Gown Sizes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GownSizesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdmittedStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Repository of type <see cref="T:Microsoft.Extensions.Logging.ILogger">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GownSizesController.GetAsync">
            <summary>
            Retrieves all Gown Sizes with PilotFlag set to Yes or True.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.GownSize">GownSize</see> codes and descriptions.</returns>
            <note>GownSizes is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController">
            <summary>
            Provides access to Graduation Application Information.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IGraduationApplicationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GraduationApplicationController class.
            </summary>
            <param name="graduationApplicationService">Graduation Application Service</param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.GetGraduationApplicationAsync(System.String,System.String)">
            <summary>
            Retrieves a graduation application by student Id and program code asynchronously
            </summary>
            <param name="studentId">Id of the student</param>
            <param name="programCode">Graduation Application program code</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.GraduationApplication">Graduation Application</see> object.</returns>
            <accessComments>
            A single graduation application can only be retrieved by the student who submitted the application.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.PostGraduationApplicationAsync(System.String,System.String,Ellucian.Colleague.Dtos.Student.GraduationApplication)">
            <summary>
            Creates a new Graduation Application asynchronously. Student must be pass any applicable graduation application eligibility rules and must not
            have previously submitted an application for the same program. 
            </summary>
            <param name="studentId">Student id passed through url</param>
            <param name="programCode">Program Code passed through url</param>
            <param name="graduationApplication">GraduationApplication dto object</param>
            <returns>
            If successful, returns the newly created Graduation Application in an http response with resource locator information. 
            If failure, returns the exception information. If failure due to existing Graduation Application already exists for the given student and program,
            it also returns resource locator to use to retrieve the existing item.
            </returns>
            <accessComments>
            A graduation application can only be created by the student applying for graduation.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.GetGraduationApplicationsAsync(System.String)">
            <summary>
            Retrieve list of all the graduation applications  submitted for  the student
            </summary>
            <param name="studentId">Id of the Student</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.GraduationApplication">List of Graduation Application</see></returns>
            <accessComments>
            Graduation Applications for the student can be retrieved only if:
            1. A Student is accessing its own data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
             Privacy is enforced by this response. If any student has an assigned privacy code that the advisor is not authorized to access, the GraduaionApplication response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned. In this situation, 
            all details except the student Id are cleared from the specific GraduationApplication object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.PutGraduationApplicationAsync(System.String,System.String,Ellucian.Colleague.Dtos.Student.GraduationApplication)">
            <summary>
            Updates an existing Graduation Application asynchronously.
            </summary>
            <param name="studentId">Student id passed through url</param>
            <param name="programCode">Program Code passed through url</param>
            <param name="graduationApplication">GraduationApplication dto object</param>
            <returns>
            If successful, returns the updated Graduation Application in an http response. 
            If failure, returns the exception information. 
            </returns>
            <accessComments>
            A graduation application can only be updated by the student of the application.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.GetGraduationApplicationFeeAsync(System.String,System.String)">
            <summary>
            Retrieves graduation application fee and payment information for a specific student Id and programCode
            </summary>
            <param name="studentId">Id of the student to retrieve</param>
            <param name="programCode">Program code for the specified graduation application</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.GraduationApplicationFee">Graduation Application Fee</see> object.</returns>
            <accessComments>Users may request their own data.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.GraduationApplicationsController.QueryGraduationApplicationEligibilityAsync(Ellucian.Colleague.Dtos.Student.GraduationApplicationEligibilityCriteria)">
            <summary>
            Checks to see if the student is eligible to apply for graduation in specific programs.
            </summary>
            <param name="criteria">Identifies the student and the programs for which eligibility is requested</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.GraduationApplicationProgramEligibility">Graduation Application Program Eligibility </see> items</returns>
            <accessComments>
            Graduation Application Eligibility for the student can be retrieved only if:
            1. A Student is requesting their own eligibility or
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.HoldRequestTypesController">
            <summary>
            Provides access to the hold request types primarily used to hold student requests.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HoldRequestTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the HoldRequestTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HoldRequestTypesController.GetHoldRequestTypesAsync">
            <summary>
            Retrieves all Hold Request Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.HoldRequestType">Hold Request type</see> codes and descriptions.</returns>
            <accessComments>Any authenticated user can retrieve hold request types.</accessComments>
            <note>HoldRequestTypes are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController">
            <summary>
            Provides access to HousingAssignments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IHousingAssignmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the HousingAssignmentsController class.
            </summary>
            <param name="housingAssignmentService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IHousingAssignmentService">IHousingAssignmentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.GetHousingAssignments2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all housingAssignments
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">mealplan  search criteria in JSON format</param>
            <returns>List of HousingAssignments <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment2"/> objects representing matching housingAssignments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.GetHousingAssignmentByGuid2Async(System.String)">
            <summary>
            Read (GET) a housingAssignment using a GUID
            </summary>
            <param name="guid">GUID to desired housingAssignment</param>
            <returns>A housingAssignment object <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.PutHousingAssignment2Async(System.String,Ellucian.Colleague.Dtos.HousingAssignment2)">
            <summary>
            Update (PUT) an existing housingAssignment
            </summary>
            <param name="guid">GUID of the housingAssignments to update</param>
            <param name="housingAssignment">DTO of the updated housingAssignments</param>
            <returns>A housingAssignments object <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.PostHousingAssignment2Async(Ellucian.Colleague.Dtos.HousingAssignment2)">
            <summary>
            Create (POST) a new housingAssignment
            </summary>
            <param name="housingAssignment">DTO of the new housingAssignments</param>
            <returns>A housingAssignments object <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.GetHousingAssignmentsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all housingAssignments
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">mealplan  search criteria in JSON format</param>
            <returns>List of HousingAssignments <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment"/> objects representing matching housingAssignments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.GetHousingAssignmentByGuidAsync(System.String)">
            <summary>
            Read (GET) a housingAssignment using a GUID
            </summary>
            <param name="guid">GUID to desired housingAssignment</param>
            <returns>A housingAssignment object <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.PostHousingAssignmentAsync(Ellucian.Colleague.Dtos.HousingAssignment)">
            <summary>
            Create (POST) a new housingAssignment
            </summary>
            <param name="housingAssignment">DTO of the new housingAssignments</param>
            <returns>A housingAssignments object <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.PutHousingAssignmentAsync(System.String,Ellucian.Colleague.Dtos.HousingAssignment)">
            <summary>
            Update (PUT) an existing housingAssignment
            </summary>
            <param name="guid">GUID of the housingAssignments to update</param>
            <param name="housingAssignment">DTO of the updated housingAssignments</param>
            <returns>A housingAssignments object <see cref="T:Ellucian.Colleague.Dtos.HousingAssignment"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingAssignmentController.DeleteHousingAssignmentAsync(System.String)">
            <summary>
            Delete (DELETE) a housingAssignment
            </summary>
            <param name="guid">GUID to desired housingAssignments</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController">
            <summary>
            Provides access to HousingRequests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IHousingRequestService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the HousingRequestsController class.
            </summary>
            <param name="housingRequestService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IHousingRequestService">IHousingRequestsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.GetHousingRequestsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all housingRequests
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of HousingRequests <see cref="T:Ellucian.Colleague.Dtos.HousingRequest"/> objects representing matching housingRequests</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.GetHousingRequestByGuidAsync(System.String)">
            <summary>
            Read (GET) a housingRequests using a GUID
            </summary>
            <param name="guid">GUID to desired housingRequests</param>
            <returns>A housingRequests object <see cref="T:Ellucian.Colleague.Dtos.HousingRequest"/> in EEDM format</returns>       
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.PostHousingRequestAsync(Ellucian.Colleague.Dtos.HousingRequest)">
            <summary>
            Create (POST) a new housingRequests
            </summary>
            <param name="housingRequest">DTO of the new housingRequests</param>
            <returns>A housingRequests object <see cref="T:Ellucian.Colleague.Dtos.HousingRequest"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.PutHousingRequestAsync(System.String,Ellucian.Colleague.Dtos.HousingRequest)">
            <summary>
            Update (PUT) an existing housingRequests
            </summary>
            <param name="guid">GUID of the housingRequests to update</param>
            <param name="housingRequest">DTO of the updated housingRequests</param>
            <returns>A housingRequests object <see cref="T:Ellucian.Colleague.Dtos.HousingRequest"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.DeleteHousingRequestsAsync(System.String)">
            <summary>
            Delete (DELETE) a housingRequests
            </summary>
            <param name="guid">GUID to desired housingRequest</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingRequestsController.ValidateHousingRequest(Ellucian.Colleague.Dtos.HousingRequest)">
            <summary>
            Validates housing request json body
            </summary>
            <param name="housingRequest"></param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController">
            <summary>
            Provides access to HousingResidentTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IHousingResidentTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the HousingResidentTypesController class.
            </summary>
            <param name="housingResidentTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IHousingResidentTypesService">IHousingResidentTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController.GetHousingResidentTypesAsync">
            <summary>
            Return all housingResidentTypes
            </summary>
            <returns>List of HousingResidentTypes <see cref="T:Ellucian.Colleague.Dtos.HousingResidentTypes"/> objects representing matching housingResidentTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController.GetHousingResidentTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a housingResidentTypes using a GUID
            </summary>
            <param name="guid">GUID to desired housingResidentTypes</param>
            <returns>A housingResidentTypes object <see cref="T:Ellucian.Colleague.Dtos.HousingResidentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController.PostHousingResidentTypesAsync(Ellucian.Colleague.Dtos.HousingResidentTypes)">
            <summary>
            Create (POST) a new housingResidentTypes
            </summary>
            <param name="housingResidentTypes">DTO of the new housingResidentTypes</param>
            <returns>A housingResidentTypes object <see cref="T:Ellucian.Colleague.Dtos.HousingResidentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController.PutHousingResidentTypesAsync(System.String,Ellucian.Colleague.Dtos.HousingResidentTypes)">
            <summary>
            Update (PUT) an existing housingResidentTypes
            </summary>
            <param name="guid">GUID of the housingResidentTypes to update</param>
            <param name="housingResidentTypes">DTO of the updated housingResidentTypes</param>
            <returns>A housingResidentTypes object <see cref="T:Ellucian.Colleague.Dtos.HousingResidentTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.HousingResidentTypesController.DeleteHousingResidentTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a housingResidentTypes
            </summary>
            <param name="guid">GUID to desired housingResidentTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController">
            <summary>
            Provides access to InstructionalDeliveryMethods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructionalDeliveryMethodsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController.GetInstructionalDeliveryMethodsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all instructional-delivery-methods
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.InstructionalDeliveryMethod">InstructionalDeliveryMethods</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController.GetInstructionalDeliveryMethodByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing instructional-delivery-methods
            </summary>
            <param name="guid">GUID of the instructional-delivery-methods to get</param>
            <returns>A InstructionalDeliveryMethods object <see cref="T:Ellucian.Colleague.Dtos.Student.InstructionalDeliveryMethod"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController.PostInstructionalDeliveryMethodAsync(Ellucian.Colleague.Dtos.Student.InstructionalDeliveryMethod)">
            <summary>
            Create (POST) a new InstructionalDeliveryMethods
            </summary>
            <param name="InstructionalDeliveryMethod">DTO of the new InstructionalDeliveryMethods</param>
            <returns>A InstructionalDeliveryMethod object <see cref="T:Ellucian.Colleague.Dtos.Student.InstructionalDeliveryMethod"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController.PutInstructionalDeliveryMethodAsync(System.String,Ellucian.Colleague.Dtos.Student.InstructionalDeliveryMethod)">
            <summary>
            Update (PUT) an existing InstructionalDeliveryMethods
            </summary>
            <param name="guid">GUID of the InstructionalDeliveryMethods to update</param>
            <param name="InstructionalDeliveryMethod">DTO of the updated InstructionalDeliveryMethod</param>
            <returns>A InstructionalDeliveryMethod object <see cref="T:Ellucian.Colleague.Dtos.Student.InstructionalDeliveryMethod"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructionalDeliveryMethodsController.DeleteInstructionalDeliveryMethodAsync(System.String)">
            <summary>
            Delete (DELETE) a InstructionalDeliveryMethods
            </summary>
            <param name="guid">GUID to desired InstructionalDeliveryMethod</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController">
            <summary>
            Provides access to InstructorCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IInstructorCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructorCategoriesController class.
            </summary>
            <param name="instructorCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IInstructorCategoriesService">IInstructorCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController.GetInstructorCategoriesAsync">
            <summary>
            Return all instructorCategories
            </summary>
            <returns>List of InstructorCategories <see cref="T:Ellucian.Colleague.Dtos.InstructorCategories"/> objects representing matching instructorCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController.GetInstructorCategoriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a instructorCategories using a GUID
            </summary>
            <param name="guid">GUID to desired instructorCategories</param>
            <returns>A instructorCategories object <see cref="T:Ellucian.Colleague.Dtos.InstructorCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController.PostInstructorCategoriesAsync(Ellucian.Colleague.Dtos.InstructorCategories)">
            <summary>
            Create (POST) a new instructorCategories
            </summary>
            <param name="instructorCategories">DTO of the new instructorCategories</param>
            <returns>A instructorCategories object <see cref="T:Ellucian.Colleague.Dtos.InstructorCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController.PutInstructorCategoriesAsync(System.String,Ellucian.Colleague.Dtos.InstructorCategories)">
            <summary>
            Update (PUT) an existing instructorCategories
            </summary>
            <param name="guid">GUID of the instructorCategories to update</param>
            <param name="instructorCategories">DTO of the updated instructorCategories</param>
            <returns>A instructorCategories object <see cref="T:Ellucian.Colleague.Dtos.InstructorCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorCategoriesController.DeleteInstructorCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a instructorCategories
            </summary>
            <param name="guid">GUID to desired instructorCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.InstructorsController">
            <summary>
            Provides access to Instructors
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IInstructorsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructorsController class.
            </summary>
            <param name="instructorsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IInstructorsService">IInstructorsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to action context</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.GetInstructorsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all instructors
            </summary>
            <returns>List of Instructors <see cref="T:Ellucian.Colleague.Dtos.Instructor"/> objects representing matching instructors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.GetInstructors2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all instructors
            </summary>
            <returns>List of Instructors <see cref="T:Ellucian.Colleague.Dtos.Instructor2"/> objects representing matching instructors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.GetInstructorsByGuidAsync(System.String)">
            <summary>
            Read (GET) a instructors using a GUID
            </summary>
            <param name="guid">GUID to desired instructors</param>
            <returns>A instructors object <see cref="T:Ellucian.Colleague.Dtos.Instructor"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.GetInstructorsByGuid2Async(System.String)">
            <summary>
            Read (GET) a instructors using a GUID
            </summary>
            <param name="guid">GUID to desired instructors</param>
            <returns>A instructors object <see cref="T:Ellucian.Colleague.Dtos.Instructor2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.PostInstructorsAsync(Ellucian.Colleague.Dtos.Instructor)">
            <summary>
            Create (POST) a new instructors
            </summary>
            <param name="instructor">DTO of the new instructors</param>
            <returns>A instructors object <see cref="T:Ellucian.Colleague.Dtos.Instructor"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.PutInstructorsAsync(System.String,Ellucian.Colleague.Dtos.Instructor)">
            <summary>
            Update (PUT) an existing instructors
            </summary>
            <param name="guid">GUID of the instructors to update</param>
            <param name="instructor">DTO of the updated instructors</param>
            <returns>A instructors object <see cref="!:Dtos.Instructors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorsController.DeleteInstructorsAsync(System.String)">
            <summary>
            Delete (DELETE) a instructors
            </summary>
            <param name="guid">GUID to desired instructors</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController">
            <summary>
            Provides access to InstructorStaffTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IInstructorStaffTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructorStaffTypesController class.
            </summary>
            <param name="instructorStaffTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IInstructorStaffTypesService">IInstructorStaffTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController.GetInstructorStaffTypesAsync">
            <summary>
            Return all instructorStaffTypes
            </summary>
            <returns>List of InstructorStaffTypes <see cref="T:Ellucian.Colleague.Dtos.InstructorStaffTypes"/> objects representing matching instructorStaffTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController.GetInstructorStaffTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a instructorStaffTypes using a GUID
            </summary>
            <param name="guid">GUID to desired instructorStaffTypes</param>
            <returns>A instructorStaffTypes object <see cref="T:Ellucian.Colleague.Dtos.InstructorStaffTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController.PostInstructorStaffTypesAsync(Ellucian.Colleague.Dtos.InstructorStaffTypes)">
            <summary>
            Create (POST) a new instructorStaffTypes
            </summary>
            <param name="instructorStaffTypes">DTO of the new instructorStaffTypes</param>
            <returns>A instructorStaffTypes object <see cref="T:Ellucian.Colleague.Dtos.InstructorStaffTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController.PutInstructorStaffTypesAsync(System.String,Ellucian.Colleague.Dtos.InstructorStaffTypes)">
            <summary>
            Update (PUT) an existing instructorStaffTypes
            </summary>
            <param name="guid">GUID of the instructorStaffTypes to update</param>
            <param name="instructorStaffTypes">DTO of the updated instructorStaffTypes</param>
            <returns>A instructorStaffTypes object <see cref="T:Ellucian.Colleague.Dtos.InstructorStaffTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.InstructorStaffTypesController.DeleteInstructorStaffTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a instructorStaffTypes
            </summary>
            <param name="guid">GUID to desired instructorStaffTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.IntentToWithdrawCodesController">
            <summary>
            Provides access to intent to withdraw code data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.IntentToWithdrawCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the IntentToWithdrawCodesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.IntentToWithdrawCodesController.GetIntentToWithdrawCodesAsync">
            <summary>
            Returns all intent to withdraw codes
            </summary>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.IntentToWithdrawCode">intent to withdraw codes</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="!:HttpStatusCode">HttpStatusCode</see>.BadRequest returned if there was a Colleage data or configuration error.</exception>
            <accessComments>Any authenticated user can retrieve intent to withdraw codes.</accessComments>
            <note>Intent to withdraw codes are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController">
            <summary>
            Provides access to MealPlanRates
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IMealPlanRatesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MealPlanRatesController class.
            </summary>
            <param name="mealPlanRatesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IMealPlanRatesService">IMealPlanRatesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController.GetMealPlanRatesAsync">
            <summary>
            Return all mealPlanRates
            </summary>
            <returns>List of MealPlanRates <see cref="T:Ellucian.Colleague.Dtos.MealPlanRates"/> objects representing matching mealPlanRates</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController.GetMealPlanRatesByGuidAsync(System.String)">
            <summary>
            Read (GET) a mealPlanRates using a GUID
            </summary>
            <param name="guid">GUID to desired mealPlanRates</param>
            <returns>A mealPlanRates object <see cref="T:Ellucian.Colleague.Dtos.MealPlanRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController.PostMealPlanRatesAsync(Ellucian.Colleague.Dtos.MealPlanRates)">
            <summary>
            Create (POST) a new mealPlanRates
            </summary>
            <param name="mealPlanRates">DTO of the new mealPlanRates</param>
            <returns>A mealPlanRates object <see cref="T:Ellucian.Colleague.Dtos.MealPlanRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController.PutMealPlanRatesAsync(System.String,Ellucian.Colleague.Dtos.MealPlanRates)">
            <summary>
            Update (PUT) an existing mealPlanRates
            </summary>
            <param name="guid">GUID of the mealPlanRates to update</param>
            <param name="mealPlanRates">DTO of the updated mealPlanRates</param>
            <returns>A mealPlanRates object <see cref="T:Ellucian.Colleague.Dtos.MealPlanRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRatesController.DeleteMealPlanRatesAsync(System.String)">
            <summary>
            Delete (DELETE) a mealPlanRates
            </summary>
            <param name="guid">GUID to desired mealPlanRates</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController">
            <summary>
            Provides access to MealPlanRequests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IMealPlanRequestsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MealPlanRequestsController class.
            </summary>
            <param name="mealPlanRequestsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IMealPlanRequestsService">IMealPlanRequestsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController.GetMealPlanRequestsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all mealPlanRequests
            </summary>
            <returns>List of MealPlanRequests <see cref="T:Ellucian.Colleague.Dtos.MealPlanRequests"/> objects representing matching mealPlanRequests</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController.GetMealPlanRequestsByGuidAsync(System.String)">
            <summary>
            Read (GET) a mealPlanRequests using a GUID
            </summary>
            <param name="guid">GUID to desired mealPlanRequests</param>
            <returns>A mealPlanRequests object <see cref="T:Ellucian.Colleague.Dtos.MealPlanRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController.PostMealPlanRequestsAsync(Ellucian.Colleague.Dtos.MealPlanRequests)">
            <summary>
            Create (POST) a new mealPlanRequests
            </summary>
            <param name="mealPlanRequests">DTO of the new mealPlanRequests</param>
            <returns>A mealPlanRequests object <see cref="T:Ellucian.Colleague.Dtos.MealPlanRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController.PutMealPlanRequestsAsync(System.String,Ellucian.Colleague.Dtos.MealPlanRequests)">
            <summary>
            Update (PUT) an existing mealPlanRequests
            </summary>
            <param name="guid">GUID of the mealPlanRequests to update</param>
            <param name="mealPlanRequests">DTO of the updated mealPlanRequests</param>
            <returns>A mealPlanRequests object <see cref="T:Ellucian.Colleague.Dtos.MealPlanRequests"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlanRequestsController.DeleteMealPlanRequestsAsync(System.String)">
            <summary>
            Delete (DELETE) a mealPlanRequests
            </summary>
            <param name="guid">GUID to desired mealPlanRequests</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.MealPlansController">
            <summary>
            Provides access to MealPlans
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlansController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IMealPlansService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MealPlansController class.
            </summary>
            <param name="mealPlansService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IMealPlansService">IMealPlansService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlansController.GetMealPlansAsync">
            <summary>
            Return all mealPlans
            </summary>
            <returns>List of MealPlans <see cref="T:Ellucian.Colleague.Dtos.MealPlans"/> objects representing matching mealPlans</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlansController.GetMealPlansByGuidAsync(System.String)">
            <summary>
            Read (GET) a mealPlans using a GUID
            </summary>
            <param name="guid">GUID to desired mealPlans</param>
            <returns>A mealPlans object <see cref="T:Ellucian.Colleague.Dtos.MealPlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlansController.PostMealPlansAsync(Ellucian.Colleague.Dtos.MealPlans)">
            <summary>
            Create (POST) a new mealPlans
            </summary>
            <param name="mealPlans">DTO of the new mealPlans</param>
            <returns>A mealPlans object <see cref="T:Ellucian.Colleague.Dtos.MealPlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlansController.PutMealPlansAsync(System.String,Ellucian.Colleague.Dtos.MealPlans)">
            <summary>
            Update (PUT) an existing mealPlans
            </summary>
            <param name="guid">GUID of the mealPlans to update</param>
            <param name="mealPlans">DTO of the updated mealPlans</param>
            <returns>A mealPlans object <see cref="T:Ellucian.Colleague.Dtos.MealPlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealPlansController.DeleteMealPlansAsync(System.String)">
            <summary>
            Delete (DELETE) a mealPlans
            </summary>
            <param name="guid">GUID to desired mealPlans</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.MealTypesController">
            <summary>
            Provides access to MealTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IMealTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MealTypesController class.
            </summary>
            <param name="mealTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IMealTypesService">IMealTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealTypesController.GetMealTypesAsync">
            <summary>
            Return all mealTypes
            </summary>
            <returns>List of MealTypes <see cref="T:Ellucian.Colleague.Dtos.MealTypes"/> objects representing matching mealTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealTypesController.GetMealTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a mealTypes using a GUID
            </summary>
            <param name="guid">GUID to desired mealTypes</param>
            <returns>A mealTypes object <see cref="T:Ellucian.Colleague.Dtos.MealTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealTypesController.PostMealTypesAsync(Ellucian.Colleague.Dtos.MealTypes)">
            <summary>
            Create (POST) a new mealTypes
            </summary>
            <param name="mealTypes">DTO of the new mealTypes</param>
            <returns>A mealTypes object <see cref="T:Ellucian.Colleague.Dtos.MealTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealTypesController.PutMealTypesAsync(System.String,Ellucian.Colleague.Dtos.MealTypes)">
            <summary>
            Update (PUT) an existing mealTypes
            </summary>
            <param name="guid">GUID of the mealTypes to update</param>
            <param name="mealTypes">DTO of the updated mealTypes</param>
            <returns>A mealTypes object <see cref="T:Ellucian.Colleague.Dtos.MealTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.MealTypesController.DeleteMealTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a mealTypes
            </summary>
            <param name="guid">GUID to desired mealTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendanceEventTypesController">
            <summary>
            Provides access to nonacademic attendance event type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendanceEventTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the NonAcademicAttendanceEventTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentReferenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendanceEventTypesController.GetAsync">
            <summary>
            Retrieves all nonacademic attendanc event types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.NonAcademicAttendanceEventType">nonacademic attendance event type</see> codes and descriptions.</returns>
            <note>Nonacademic attendance event type data is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendanceRequirementsController">
            <summary>
            Provides access to nonacademic attendance requirement data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendanceRequirementsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.INonAcademicAttendanceService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the NonAcademicAttendanceRequirementsController class.
            </summary>
            <param name="nonAcademicAttendanceService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.INonAcademicAttendanceService">INonAcademicAttendanceService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendanceRequirementsController.GetNonAcademicAttendanceRequirementsAsync(System.String)">
            <summary>
            Retrieves all <see cref="T:Ellucian.Colleague.Dtos.Student.NonAcademicAttendanceRequirement">nonacademic attendance requirements</see> for a person
            </summary>
            <param name="studentId">Unique identifier for the student whose requirements are being retrieved</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.NonAcademicAttendanceRequirement">nonacademic attendance requirements</see> for a person</returns>
            <accessComments> 
            Student must be requesting their own attendance data
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendancesController">
            <summary>
            Provides access to nonacademic attendance data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendancesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.INonAcademicAttendanceService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the NonAcademicAttendancesController class.
            </summary>
            <param name="nonAcademicAttendanceService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.INonAcademicAttendanceService">INonAcademicAttendanceService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicAttendancesController.GetNonAcademicAttendancesAsync(System.String)">
            <summary>
            Retrieves all <see cref="T:Ellucian.Colleague.Dtos.Student.NonAcademicAttendance">nonacademic events attended</see> for a person
            </summary>
            <param name="studentId">Unique identifier for the person whose nonacademic attendances are being retrieved</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.NonAcademicAttendance">nonacademic events attended</see> for a person</returns>
            <accessComments>
            Student must be retrieving their own attendance data
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.NonAcademicEventsController">
            <summary>
            Controller to manage nonacademic events
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicEventsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.INonAcademicEventRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            NonAcademicEventsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="eventRepository"></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.NonAcademicEventsController.QueryNonAcademicEventsAsync(Ellucian.Colleague.Dtos.Student.NonAcademicEventQueryCriteria)">
            <summary>
            Accepts a list of event IDs and returns NonAcademicEvents DTOs
            </summary>
            <param name="criteria">Object that contains the list of ids to retrieve</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.NonAcademicEvent">Nonacademic Events</see></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.OfficeHoursController">
            <summary>
            Faculty Office Hours
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.OfficeHoursController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IOfficeHoursService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Provides access to Faculty office hours.
            </summary>
            <param name="officeHoursService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.OfficeHoursController.PostOfficeHoursAsync(Ellucian.Colleague.Dtos.Student.AddOfficeHours)">
            <summary>
            Create a new office hours for faculty.
            </summary>
            <param name="addofficeHours"><see cref="T:Ellucian.Colleague.Dtos.Student.AddOfficeHours">Add office hours</see> with information on creating a new office hours.</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Student.AddOfficeHours">Office hours</see>.</returns>
            <accessComments>
            This action can only be performed by either an advisor or a faculty member.
            An authenticated user (advisor) may perform this action , if they have one of the following 8 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.AddOfficeHours">office hours</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create office hours.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other creation problem.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.OfficeHoursController.PutOfficeHoursAsync(Ellucian.Colleague.Dtos.Student.UpdateOfficeHours)">
            <summary>
            Update an existing office hours for faculty.
            </summary>
            <param name="updateOfficeHours"><see cref="T:Ellucian.Colleague.Dtos.Student.UpdateOfficeHours">Update office hours</see> with information for updating office hours.</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Student.AddOfficeHours">Office hours</see>.</returns>
            <accessComments>
            This action can only be performed by either an advisor or a faculty member.
            An authenticated user (advisor) may perform this action , if they have one of the following 8 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <returns>An HttpResponseMessage which includes the updated <see cref="T:Ellucian.Colleague.Dtos.Student.UpdateOfficeHours">office hours</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update office hours.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other update problem.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.OfficeHoursController.DeleteOfficeHoursAsync(Ellucian.Colleague.Dtos.Student.DeleteOfficeHours)">
            <summary>
            delete office hours for faculty.
            </summary>
            <param name="deleteOfficeHours"><see cref="T:Ellucian.Colleague.Dtos.Student.DeleteOfficeHours">Delete office hours</see> information for deleting office hours.</param>
            <returns>Deleted <see cref="T:Ellucian.Colleague.Dtos.Student.DeleteOfficeHours">Office hours</see>.</returns>
            <accessComments>
            This action can only be performed by either an advisor or a faculty member.
            An authenticated user (advisor) may perform this action , if they have one of the following 8 permissions:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
            <returns>An HttpResponseMessage which includes the deleted <see cref="T:Ellucian.Colleague.Dtos.Student.DeleteOfficeHours">office hours</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create office hours.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other creation problem.</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.PetitionStatusesController">
            <summary>
            Provides access to Petition Statuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.PetitionStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            PetitionStatusesController constructor
            </summary>
            <param name="adapterRegistry">adapterRegistry</param>
            <param name="studentReferenceDataRepository">studentReferenceDataRepository</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.PetitionStatusesController.GetAsync">
            <summary>
            Get a list of all Petition Statuses
            </summary>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.PetitionStatus">PetitionStatus</see> codes and descriptions</returns>
            <note>PetitionStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.PreliminaryAnonymousGradesController">
            <summary>
            Controller for actions related to course section preliminary anonymous grading
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.PreliminaryAnonymousGradesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IPreliminaryAnonymousGradeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AcademicCatalogController class.
            </summary>
            <param name="preliminaryAnonymousGradeService">Interface to preliminary anonymous grade service</param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.PreliminaryAnonymousGradesController.GetPreliminaryAnonymousGradesBySectionIdAsync(System.String)">
            <summary>
            Get preliminary anonymous grade information for the specified course section
            </summary>
            <param name="sectionId">ID of the course section for which to retrieve preliminary anonymous grade information</param>
            <returns>Preliminary anonymous grade information for the specified course section</returns>
            <accessComments>
            1. The authenticated user must be an assigned faculty member for the specified course section to retrieve preliminary anonymous grade information for that course section.
            2. A departmental oversight member assigned to the section may retrieve preliminary anonymous grade information with the following permission code
            VIEW.SECTION.GRADING
            CREATE.SECTION.GRADING
            </accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if a course section is not specified, or if there was a Colleage data or configuration error.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not authorized to retrieve preliminary anonymous grade information for the specified course section.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if data for a course section could not be retrieved.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.PreliminaryAnonymousGradesController.UpdatePreliminaryAnonymousGradesBySectionIdAsync(System.String,System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Student.AnonymousGrading.PreliminaryAnonymousGrade})">
            <summary>
            Update preliminary anonymous grade information for the specified course section
            </summary>
            <param name="sectionId">ID of the course section for which to process preliminary anonymous grade updates</param>
            <param name="preliminaryAnonymousGrades">Preliminary anonymous grade updates to process</param>
            <returns>Preliminary anonymous grade update results</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if a course section is not specified, if no grades are specified, or if there was a Colleage data or configuration error.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not authorized to update preliminary anonymous grade information for the specified course section.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if data for a course section could not be retrieved.</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController">
            <summary>
            Provides access to ProspectOpportunities
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IProspectOpportunitiesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ProspectOpportunitiesController class.
            </summary>
            <param name="prospectOpportunitiesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IProspectOpportunitiesService">IProspectOpportunitiesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.GetProspectOpportunitiesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all prospectOpportunities
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">JSON formatted selection criteria.</param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters.</param>
            <returns>List of ProspectOpportunities <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunities"/> objects representing matching prospectOpportunities</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.GetProspectOpportunitiesByGuidAsync(System.String)">
            <summary>
            Read (GET) a prospectOpportunities using a GUID
            </summary>
            <param name="guid">GUID to desired prospectOpportunities</param>
            <returns>A prospectOpportunities object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.PostProspectOpportunitiesAsync(Ellucian.Colleague.Dtos.ProspectOpportunities)">
            <summary>
            Create (POST) a new prospectOpportunities
            </summary>
            <param name="prospectOpportunities">DTO of the new prospectOpportunities</param>
            <returns>A prospectOpportunities object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.PutProspectOpportunitiesAsync(System.String,Ellucian.Colleague.Dtos.ProspectOpportunities)">
            <summary>
            Update (PUT) an existing prospectOpportunities
            </summary>
            <param name="guid">GUID of the prospectOpportunities to update</param>
            <param name="prospectOpportunities">DTO of the updated prospectOpportunities</param>
            <returns>A prospectOpportunities object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.PostProspectOpportunitiesSubmissionsAsync(Ellucian.Colleague.Dtos.ProspectOpportunitiesSubmissions)">
            <summary>
            Create (POST) a new prospectOpportunities
            </summary>
            <param name="prospectOpportunities">DTO of the new prospectOpportunities</param>
            <returns>A prospectOpportunities object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.PutProspectOpportunitiesSubmissionsAsync(System.String,Ellucian.Colleague.Dtos.ProspectOpportunitiesSubmissions)">
            <summary>
            Update (PUT) an existing prospectOpportunities
            </summary>
            <param name="guid">GUID of the prospectOpportunities to update</param>
            <param name="prospectOpportunities">DTO of the updated prospectOpportunities</param>
            <returns>A prospectOpportunities object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitiesController.DeleteProspectOpportunitiesAsync(System.String)">
            <summary>
            Delete (DELETE) a prospectOpportunities
            </summary>
            <param name="guid">GUID to desired prospectOpportunities</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController">
            <summary>
            Provides access to ProspectOpportunitySources
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ProspectOpportunitySourcesController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController.GetProspectOpportunitySourcesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all prospect-opportunity-sources
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunitySources">ProspectOpportunitySources</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController.GetProspectOpportunitySourcesByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing prospect-opportunity-sources
            </summary>
            <param name="guid">GUID of the prospect-opportunity-sources to get</param>
            <returns>A prospectOpportunitySources object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunitySources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController.PostProspectOpportunitySourcesAsync(Ellucian.Colleague.Dtos.ProspectOpportunitySources)">
            <summary>
            Create (POST) a new prospectOpportunitySources
            </summary>
            <param name="prospectOpportunitySources">DTO of the new prospectOpportunitySources</param>
            <returns>A prospectOpportunitySources object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunitySources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController.PutProspectOpportunitySourcesAsync(System.String,Ellucian.Colleague.Dtos.ProspectOpportunitySources)">
            <summary>
            Update (PUT) an existing prospectOpportunitySources
            </summary>
            <param name="guid">GUID of the prospectOpportunitySources to update</param>
            <param name="prospectOpportunitySources">DTO of the updated prospectOpportunitySources</param>
            <returns>A prospectOpportunitySources object <see cref="T:Ellucian.Colleague.Dtos.ProspectOpportunitySources"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.ProspectOpportunitySourcesController.DeleteProspectOpportunitySourcesAsync(System.String)">
            <summary>
            Delete (DELETE) a prospectOpportunitySources
            </summary>
            <param name="guid">GUID to desired prospectOpportunitySources</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.RecruiterController">
            <summary>
            Provides access to update Application status.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IRecruiterService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RecruiterController class.
            </summary>
            <param name="recruiterService">Coordination service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IRecruiterService">IRecruiterService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostApplicationAsync(Ellucian.Colleague.Dtos.Student.Application)">
            <summary>
            Import a Recruiter application/prospect into Colleague.
            </summary>
            <param name="application">Application/prospect import data</param>
            <returns>Http 200 response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can import Recruiter applications/prospects into Colleague.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostApplicationStatusAsync(Ellucian.Colleague.Dtos.Student.Application)">
            <summary>
            Updates an existing application's status.
            </summary>
            <param name="application">Application update data</param>
            <returns>Http 200 response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can update an existing application's status.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostTestScoresAsync(Ellucian.Colleague.Dtos.Student.TestScore)">
            <summary>
            Import a Recruiter test score into Colleague.
            </summary>
            <param name="testScore">Test score data</param>
            <returns>Http 200 response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can import a Recruiter test score into Colleague.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostTranscriptCoursesAsync(Ellucian.Colleague.Dtos.Student.TranscriptCourse)">
            <summary>
            Import a Recruiter transcript course into Colleague.
            </summary>
            <param name="transcriptCourse">transcript course data</param>
            <returns>Http 200 response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can import a Recruiter transcript course into Colleague.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostCommunicationHistoryAsync(Ellucian.Colleague.Dtos.Base.CommunicationHistory)">
            <summary>
            Import Recruiter communication history into Colleague.
            </summary>
            <param name="communicationHistory">communication history data</param>
            <returns>Http 200 response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can import Recruiter communication history into Colleague.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostCommunicationHistoryRequestAsync(Ellucian.Colleague.Dtos.Base.CommunicationHistory)">
            <summary>
            Request communication history from Colleague.
            </summary>
            <param name="communicationHistory">communication history request</param>
            <returns>Http 200 response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can request Recruiter communication history into Colleague.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RecruiterController.PostConnectionStatusAsync(Ellucian.Colleague.Dtos.Student.ConnectionStatus)">
            <summary>
            Test connection from Colleague to Recruiter.
            </summary>
            <param name="connectionStatus">connection status request (empty or optional RecruiterOrganizationName)</param>
            <returns>Connection status response</returns>
            <accessComments>
            Authenticated users with the PERFORM.RECRUITER.OPERATIONS permission can test the connection from Colleague to Recruiter.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.RegistrationMarketingSourcesController">
            <summary>
            Provides access to the registration marketing source data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RegistrationMarketingSourcesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RegistrationMarketingSourcesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RegistrationMarketingSourcesController.GetRegistrationMarketingSourcesAsync">
            <summary>
            Returns all registration marketing sources
            </summary>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationMarketingSource">registration marketing sources</see></returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Registration marketing source data is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.RegistrationReasonsController">
            <summary>
            Provides access to the registration reason data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RegistrationReasonsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RegistrationReasonsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RegistrationReasonsController.GetRegistrationReasonsAsync">
            <summary>
            Returns all registration reasons
            </summary>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationReason">registration reasons</see></returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Registration reason data is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.RestrictionTypesController">
            <summary>
            Provides access to Restrictions data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RestrictionTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RestrictionsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="restrictionRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Base.Repositories.IReferenceDataRepository">IReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RestrictionTypesController.GetAsync">
            <summary>
            Gets information for all Restriction Types
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Domain.Base.Entities.Restriction">Restrictions</see></returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Restriction is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController">
            <summary>
            Provides access to RoommateCharacteristics
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IRoommateCharacteristicsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RoommateCharacteristicsController class.
            </summary>
            <param name="roommateCharacteristicsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IRoommateCharacteristicsService">IRoommateCharacteristicsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController.GetRoommateCharacteristicsAsync">
            <summary>
            Return all roommateCharacteristics
            </summary>
            <returns>List of RoommateCharacteristics <see cref="T:Ellucian.Colleague.Dtos.RoommateCharacteristics"/> objects representing matching roommateCharacteristics</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController.GetRoommateCharacteristicsByGuidAsync(System.String)">
            <summary>
            Read (GET) a roommateCharacteristics using a GUID
            </summary>
            <param name="guid">GUID to desired roommateCharacteristics</param>
            <returns>A roommateCharacteristics object <see cref="T:Ellucian.Colleague.Dtos.RoommateCharacteristics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController.PostRoommateCharacteristicsAsync(Ellucian.Colleague.Dtos.RoommateCharacteristics)">
            <summary>
            Create (POST) a new roommateCharacteristics
            </summary>
            <param name="roommateCharacteristics">DTO of the new roommateCharacteristics</param>
            <returns>A roommateCharacteristics object <see cref="T:Ellucian.Colleague.Dtos.RoommateCharacteristics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController.PutRoommateCharacteristicsAsync(System.String,Ellucian.Colleague.Dtos.RoommateCharacteristics)">
            <summary>
            Update (PUT) an existing roommateCharacteristics
            </summary>
            <param name="guid">GUID of the roommateCharacteristics to update</param>
            <param name="roommateCharacteristics">DTO of the updated roommateCharacteristics</param>
            <returns>A roommateCharacteristics object <see cref="T:Ellucian.Colleague.Dtos.RoommateCharacteristics"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoommateCharacteristicsController.DeleteRoommateCharacteristicsAsync(System.String)">
            <summary>
            Delete (DELETE) a roommateCharacteristics
            </summary>
            <param name="guid">GUID to desired roommateCharacteristics</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController">
            <summary>
            Provides access to RoomRates
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IRoomRatesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RoomRatesController class.
            </summary>
            <param name="roomRatesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IRoomRatesService">IRoomRatesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController.GetRoomRatesAsync">
            <summary>
            Return all roomRates
            </summary>
            <returns>List of RoomRates <see cref="T:Ellucian.Colleague.Dtos.RoomRates"/> objects representing matching roomRates</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController.GetRoomRatesByGuidAsync(System.String)">
            <summary>
            Read (GET) a roomRates using a GUID
            </summary>
            <param name="guid">GUID to desired roomRates</param>
            <returns>A roomRates object <see cref="T:Ellucian.Colleague.Dtos.RoomRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController.PostRoomRatesAsync(Ellucian.Colleague.Dtos.RoomRates)">
            <summary>
            Create (POST) a new roomRates
            </summary>
            <param name="roomRates">DTO of the new roomRates</param>
            <returns>A roomRates object <see cref="T:Ellucian.Colleague.Dtos.RoomRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController.PutRoomRatesAsync(System.String,Ellucian.Colleague.Dtos.RoomRates)">
            <summary>
            Update (PUT) an existing roomRates
            </summary>
            <param name="guid">GUID of the roomRates to update</param>
            <param name="roomRates">DTO of the updated roomRates</param>
            <returns>A roomRates object <see cref="T:Ellucian.Colleague.Dtos.RoomRates"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.RoomRatesController.DeleteRoomRatesAsync(System.String)">
            <summary>
            Delete (DELETE) a roomRates
            </summary>
            <param name="guid">GUID to desired roomRates</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionAttendancesController">
            <summary>
            Information about student attendances data for particular sections.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionAttendancesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAttendanceService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            constructor
            </summary>
            <param name="studentAttendanceService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionAttendancesController.PutSectionAttendances2Async(Ellucian.Colleague.Dtos.Student.SectionAttendance)">
            <summary>
            Update attendance information for a particular section and meeting instance.
            </summary>
            <param name="sectionAttendance"><see cref="T:Ellucian.Colleague.Dtos.Student.SectionAttendance">Section Attendance</see> DTO that contains the section and the attendance information to be updated.</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.SectionAttendanceResponse">SectionAttendanceResponse</see> DTO.</returns>
            <accessComments>1) A faculty user who is assigned to the associated course section can update student attendance data for that course section.
            2) A departmental oversight person for this section who has CREATE.SECTION.ATTENDANCE permission
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionAttendancesController.PutSectionAttendancesAsync(Ellucian.Colleague.Dtos.Student.SectionAttendance)">
            <summary>
            Update attendance information for a particular section and meeting instance.
            </summary>
            <param name="sectionAttendance"><see cref="T:Ellucian.Colleague.Dtos.Student.SectionAttendance">Section Attendance</see> DTO that contains the section and the attendance information to be updated.</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.SectionAttendanceResponse">SectionAttendanceResponse</see> DTO.</returns>
            <accessComments>1) A faculty user who is assigned to the associated course section can update student attendance data for that course section.
            2)A departmental oversight person for this section who has CREATE.SECTION.ATTENDANCE permission
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController">
            <summary>
            Provides access to course Section data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Student.Services.ISectionCrosslistService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionsController class.
            </summary>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="sectionCrosslist">SectionCrosslist Service <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionCrosslistService">ISectionCrosslistService</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.GetDataModelSectionCrosslistsAsync(Ellucian.Web.Http.Models.Paging,System.String)">
            <summary>
            Read (GET) all SectionCrosslists or all SectionCrosslists with section selected in filter
            </summary>
            <param name="section">GUID to desired Section to filter SectionCrosslists by</param>
            <param name="page">paging data from the url</param>
            <returns>A List SectionCrosslist object <see cref="T:Ellucian.Colleague.Dtos.SectionCrosslist"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.GetDataModelSectionCrosslistsByGuidAsync(System.String)">
            <summary>
            Read (GET) a SectionCrosslist using a GUID
            </summary>
            <param name="id">GUID to desired SectionCrosslist</param>
            <returns>A SectionCrosslist object <see cref="T:Ellucian.Colleague.Dtos.SectionCrosslist"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.PostDataModelSectionCrosslistsAsync(Ellucian.Colleague.Dtos.SectionCrosslist)">
            <summary>
            Create (POST) a new SectionCrosslist
            </summary>
            <param name="sectionCrosslist">DTO of the new SectionCrosslist</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.SectionCrosslist"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.PutDataModelSectionCrosslistsAsync(System.String,Ellucian.Colleague.Dtos.SectionCrosslist)">
            <summary>
            Update (PUT) an existing SectionCrosslist
            </summary>
            <param name="id">GUID of the SectionCrosslist to update</param>
            <param name="sectionCrosslist">DTO of the updated SectionCrosslist</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.SectionCrosslist"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.DeleteDataModelSectionCrosslistsByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) a SectionCrosslist
            </summary>
            <param name="id">GUID to desired SectionCrosslist</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.SectionCrosslist"/> in DataModel format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionCrosslistsController.ValidateSectionCrosslist(Ellucian.Colleague.Dtos.SectionCrosslist)">
            <summary>
            Validates the data in the SectionCrosslist object
            </summary>
            <param name="sectionCrosslist">SectoinCrosslist from the request</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController">
            <summary>
            Provides access to SectionDescriptionTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionDescriptionTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionDescriptionTypesController class.
            </summary>
            <param name="sectionDescriptionTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionDescriptionTypesService">ISectionDescriptionTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController.GetSectionDescriptionTypesAsync">
            <summary>
            Return all SectionDescriptionTypes
            </summary>
            <returns>List of SectionDescriptionTypes <see cref="T:Ellucian.Colleague.Dtos.SectionDescriptionTypes"/> objects representing matching SectionDescriptionTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController.GetSectionDescriptionTypeByGuidAsync(System.String)">
            <summary>
            Read (GET) a SectionDescriptionTypes using a GUID
            </summary>
            <param name="guid">GUID to desired SectionDescriptionTypes</param>
            <returns>A SectionDescriptionTypes object <see cref="T:Ellucian.Colleague.Dtos.SectionDescriptionTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController.PostSectionDescriptionTypesAsync(Ellucian.Colleague.Dtos.SectionDescriptionTypes)">
            <summary>
            Create (POST) a new SectionDescriptionTypes
            </summary>
            <param name="sectionDescriptionTypes">DTO of the new SectionDescriptionTypes</param>
            <returns>A SectionDescriptionTypes object <see cref="T:Ellucian.Colleague.Dtos.SectionDescriptionTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController.PutSectionDescriptionTypesAsync(System.String,Ellucian.Colleague.Dtos.SectionDescriptionTypes)">
            <summary>
            Update (PUT) an existing SectionDescriptionTypes
            </summary>
            <param name="guid">GUID of the SectionDescriptionTypes to update</param>
            <param name="sectionDescriptionTypes">DTO of the updated sectionDescriptionTypes</param>
            <returns>A sectionDescriptionTypes object <see cref="T:Ellucian.Colleague.Dtos.SectionDescriptionTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionDescriptionTypesController.DeleteSectionDescriptionTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a sectionDescriptionTypes
            </summary>
            <param name="guid">GUID to desired sectionDescriptionTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController">
            <summary>
            Provides access to SectionInstructors
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionInstructorsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionInstructorsController class.
            </summary>
            <param name="sectionInstructorsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionInstructorsService">ISectionInstructorsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController.GetSectionInstructorsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all sectionInstructors
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Filter Criteria including section, instructor, and instructionalEvent.</param>
            <returns>List of SectionInstructors <see cref="T:Ellucian.Colleague.Dtos.SectionInstructors"/> objects representing matching sectionInstructors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController.GetSectionInstructorsByGuidAsync(System.String)">
            <summary>
            Read (GET) a sectionInstructors using a GUID
            </summary>
            <param name="guid">GUID to desired sectionInstructors</param>
            <returns>A sectionInstructors object <see cref="T:Ellucian.Colleague.Dtos.SectionInstructors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController.PostSectionInstructorsAsync(Ellucian.Colleague.Dtos.SectionInstructors)">
            <summary>
            Create (POST) a new sectionInstructors
            </summary>
            <param name="sectionInstructors">DTO of the new sectionInstructors</param>
            <returns>A sectionInstructors object <see cref="T:Ellucian.Colleague.Dtos.SectionInstructors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController.PutSectionInstructorsAsync(System.String,Ellucian.Colleague.Dtos.SectionInstructors)">
            <summary>
            Update (PUT) an existing sectionInstructors
            </summary>
            <param name="guid">GUID of the sectionInstructors to update</param>
            <param name="sectionInstructors">DTO of the updated sectionInstructors</param>
            <returns>A sectionInstructors object <see cref="T:Ellucian.Colleague.Dtos.SectionInstructors"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionInstructorsController.DeleteSectionInstructorsAsync(System.String)">
            <summary>
            Delete (DELETE) a sectionInstructors
            </summary>
            <param name="guid">GUID to desired sectionInstructors</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionPermissionsController">
            <summary>
            Provide access to faculty Consent and student petition data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionPermissionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionPermissionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            constructor
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionPermissionsController.GetSectionPermissionAsync(System.String)">
            <summary>
            Returns the student petitions and faculty consents found for the specified section. Requestor must be an instructor of the section to access the information.
            </summary>
            <param name="sectionId">The section Id to use to retrieve student petitions and faculty consents.</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.SectionPermission">SectionPermission</see> object</returns>
            <accessComments>
            1. Only the faculty of a section can retrieve the permissions for the section.
            2. A departmental oversight member assigned to the section can retrieve the permissions with any of the following permission code
            VIEW.SECTION.STUDENT.PETITIONS
            CREATE.SECTION.STUDENT.PETITION
            VIEW.SECTION.FACULTY.CONSENTS
            CREATE.SECTION.FACULTY.CONSENT
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController">
            <summary>
            Provides access to SectionRegistration
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ISectionRegistrationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            SectionRegistrationStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentReferenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="sectionRegistrationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ISectionRegistrationService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrationByGuid3Async(System.String)">
            <summary>
            Get section registration get by guid.
            </summary>
            <param name="guid">Id of the SectionRegistration</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration2"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrations3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Gets section registrations with filter V16.0.0.
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <param name="academicPeriod"></param>
            <param name="sectionInstructor"></param>
            <param name="registrationStatusesByAcademicPeriod"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrationAsync(System.String)">
            <summary>
            Get section registration
            </summary>
            <param name="guid">Id of the SectionRegistration</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration2"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistration2Async(System.String)">
            <summary>
            Get section registration V7
            </summary>
            <param name="guid">Id of the SectionRegistration</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration2"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrationsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String)">
            <summary>
            Gets section registrations with filter
            </summary>
            <param name="page"></param>
            <param name="section"></param>
            <param name="registrant"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrations2Async(Ellucian.Web.Http.Models.Paging,System.String,System.String)">
            <summary>
            Gets section registrations with filter V7
            </summary>
            <param name="page"></param>
            <param name="section"></param>
            <param name="registrant"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrationsChecking">
            <summary>
            Return all sections-registrations-checking
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.GetSectionRegistrationsCheckingById">
            <summary>
            Return sections-registrations-checking
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PutSectionRegistrationAsync(System.String,Ellucian.Colleague.Dtos.SectionRegistration2)">
            <summary>
            Update (PUT) section registrations
            </summary>
            <param name="guid">Id of the SectionRegistration</param>
            <param name="sectionRegistration">DTO of the SectionRegistration</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration2"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PutSectionRegistration2Async(System.String,Ellucian.Colleague.Dtos.SectionRegistration3)">
            <summary>
            Update (PUT) section registrations
            </summary>
            <param name="guid">Id of the SectionRegistration</param>
            <param name="sectionRegistration">DTO of the SectionRegistration</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration3"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PutSectionRegistrations3Async(System.String,Ellucian.Colleague.Dtos.SectionRegistration4)">
            <summary>
            Update (PUT) section registrations
            </summary>
            <param name="guid">Id of the SectionRegistration</param>
            <param name="sectionRegistration">DTO of the SectionRegistration</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration4"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PutSectionRegistrationsCheckingById">
            <summary>
            Update (PUT) section-registrations-checking
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PostSectionRegistrationAsync(Ellucian.Colleague.Dtos.SectionRegistration2)">
            <summary>
            Create (POST) section registrations
            </summary>
            <param name="sectionRegistration">A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration2"/> object</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration2"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PostSectionRegistration2Async(Ellucian.Colleague.Dtos.SectionRegistration3)">
            <summary>
            Create (POST) section registrations
            </summary>
            <param name="sectionRegistration">A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration3"/> object</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration3"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PostSectionRegistrations3Async(Ellucian.Colleague.Dtos.SectionRegistration4)">
            <summary>
            Create (POST) section registrations
            </summary>
            <param name="sectionRegistration">A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration4"/> object</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration4"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.PostSectionsRegistrationsCheckingAsync(Ellucian.Colleague.Dtos.SectionRegistrations)">
            <summary>
            Create (POST) section registrations checking
            </summary>
            <param name="sectionRegistrations">A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistration4"/> object</param>
            <returns>A SectionRegistration <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrations"/> object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.DeleteSectionRegistrationAsync(System.String)">
            <summary>
            Delete (DELETE) an existing section-registrations
            </summary>
            <param name="guid">Id of the section-registration to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsController.DeleteSectionsRegistrationsCheckingAsync">
            <summary>
            Delete (DELETE) an existing sections-registrations-checking
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController">
            <summary>
            Provides access to SectionRegistrationsGradeOptions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionRegistrationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionRegistrationsGradeOptionsController class.
            </summary>
            <param name="sectionRegistrationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionRegistrationService">ISectionRegistrationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController.GetSectionRegistrationsGradeOptionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all section registrations grade options.
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController.GetSectionRegistrationsGradeOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a sectionRegistrationsGradeOptions using a GUID
            </summary>
            <param name="guid">GUID to desired sectionRegistrationsGradeOptions</param>
            <returns>A sectionRegistrationsGradeOptions object <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationsGradeOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController.PostSectionRegistrationsGradeOptionsAsync(Ellucian.Colleague.Dtos.SectionRegistrationsGradeOptions)">
            <summary>
            Create (POST) a new sectionRegistrationsGradeOptions
            </summary>
            <param name="sectionRegistrationsGradeOptions">DTO of the new sectionRegistrationsGradeOptions</param>
            <returns>A sectionRegistrationsGradeOptions object <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationsGradeOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController.PutSectionRegistrationsGradeOptionsAsync(System.String,Ellucian.Colleague.Dtos.SectionRegistrationsGradeOptions)">
            <summary>
            Update (PUT) an existing sectionRegistrationsGradeOptions
            </summary>
            <param name="guid">GUID of the sectionRegistrationsGradeOptions to update</param>
            <param name="sectionRegistrationsGradeOptions">DTO of the updated sectionRegistrationsGradeOptions</param>
            <returns>A sectionRegistrationsGradeOptions object <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationsGradeOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionRegistrationsGradeOptionsController.DeleteSectionRegistrationsGradeOptionsAsync(System.String)">
            <summary>
            Delete (DELETE) a sectionRegistrationsGradeOptions
            </summary>
            <param name="guid">GUID to desired sectionRegistrationsGradeOptions</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionsController">
            <summary>
            Provides access to course Section data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService,Ellucian.Colleague.Coordination.Student.Services.ISectionRegistrationService,Ellucian.Colleague.Coordination.Student.Services.IRegistrationGroupService,Ellucian.Colleague.Coordination.Student.Services.ICourseService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionsController class.
            </summary>
            <param name="sectionCoordinationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService">ISectionCoordinationService</see></param>
            <param name="sectionRegistrationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionRegistrationService">ISectionRegistrationService</see></param>
            <param name="registrationGroupService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IRegistrationGroupService">IRegistrationGroupService</see></param>
            <param name="courseService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseService">courseService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionAsync(System.String)">
             <summary>
             Retrieves information about a specific course section. 
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
             </summary>
             <param name="sectionId">Id of the section desired</param>
             <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section">Section</see></returns>
             <accessComments>
             Any authenticated user can retrieve course section information; however,
             only an assigned faculty user may retrieve list of active students Ids in a course section.
             For all other users that are not assigned faculty to a course section a list of active students Ids is not retrieved and
             response object is returned with a X-Content-Restricted header with a value of "partial".
             </accessComments>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
             <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSection2Async(System.String)">
             <summary>
             Retrieves information about a specific course section. 
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
             </summary>
             <param name="sectionId">Id of the section desired</param>
             <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section2">Section</see></returns>
              <accessComments>
             Any authenticated user can retrieve course section information; however,
             only an assigned faculty user may retrieve list of active students Ids in a course section.
             For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids  and 
             response object is returned with a X-Content-Restricted header with a value of "partial".
             </accessComments>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
             <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSection3Async(System.String)">
            <summary>
            Retrieves information about a specific course section. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="sectionId">Id of the section desired</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Section3</see></returns>
             <accessComments>
            Any authenticated user can retrieve course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section a list of active students Ids is not retrieved and 
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSection4Async(System.String)">
            <summary>
            Retrieves information about a specific course section. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="sectionId">Id of the section desired</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section4">Section</see></returns>
             <accessComments>
            Any authenticated user can retrieve course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section a list of active students Ids is not retrieved and 
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionMidtermGradingCompleteAsync(System.String)">
            <summary>
            Retrieves information about faculty member indications that grading is complete for the section.
            </summary>
            <param name="sectionId">Id of the section</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.SectionMidtermGradingComplete">section grading completion indication information</see></returns>
             <accessComments>
            1. Only a faculty member assigned to the section may retrieve midterm grading completion information for a section.
            2. A departmental oversight member assigned to the section may retrieve midterm grading completion information with the following permission code
            VIEW.SECTION.GRADING
            CREATE.SECTION.GRADING
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostSectionMidtermGradingCompleteAsync(System.String,Ellucian.Colleague.Dtos.Student.SectionMidtermGradingCompleteForPost)">
            <summary>
            Adds an indication that midterm grading is complete for one section and midterm grade number.
            </summary>
            <param name="sectionId">Section ID</param>
            <param name="postInfo">Attributes of the midterm grading complete indication to be posted</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.SectionMidtermGradingComplete">section grading completion indication information</see></returns>        
            <accessComments>
            1. A user with UPDATE.GRADES permission or assigned faculty on a section can indicate that midterm grading is complete.
            2. A departmental oversight member assigned to the section with CREATE.SECTION.GRADING can indicate that midterm grading is complete.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionGradingStatusAsync(System.String)">
            <summary>
            Retrieves the grading status for a course section
            </summary>
            <param name="sectionId">Unique identifier for the course section</param>
            <returns>Grading status for the specified course section</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if a course section is not specified, or if there was a Colleage data or configuration error.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not authorized to retrieve section grading status information for the specified course section.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if data for a course section could not be retrieved.</exception>
            <accessComments>
            1. The authenticated user must be an assigned faculty member for the specified course section in order to retrieve course section grading status information for that course section.
            2. A departmental oversight member assigned to the section may retrieve course section grading status information with the following permission code
            VIEW.SECTION.GRADING
            CREATE.SECTION.GRADING
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionRosterAsync(System.String)">
            <summary>
            Retrieves roster information for a course section.
            </summary>
            <param name="sectionId">ID of the course section for which roster students will be retrieved</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.RosterStudent">students</see> in the course section</returns>
            <accessComments>
            Requestor must be registered student or assigned faculty member for section.
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionRoster2Async(System.String)">
            <summary>
            Get a course roster for a given course section ID
            </summary>
            <param name="sectionId">Course section ID</param>
            <returns>A course roster</returns>
            <accessComments>
            1. The requestor must be a registered student or assigned faculty member for the section.
            2. A departmental oversight member assigned to the section may retrieve section roster information with any of the following permission codes
            VIEW.SECTION.ROSTER
            VIEW.SECTION.GRADING
            CREATE.SECTION.GRADING
            VIEW.SECTION.ADD.AUTHORIZATIONS
            CREATE.SECTION.ADD.AUTHORIZATION
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionWaitlistAsync(System.String)">
            <summary>
            Retrieves the waitlists for a given course sections ID. 
            </summary>
            <param name="sectionId">Course section ID</param>
            <returns>Section waitlist</returns>
            <accessComments>
            You must be an assigned faculty for the course section to retrieve section waitlist information. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionWaitlistConfigAsync(System.String)">
            <summary>
            Retrieves the waitlist section setting for a given course sections ID. 
            </summary>
            <param name="sectionId">Course section ID</param>
            <returns>Section waitlist config</returns>
            <accessComments>
            1. The user must be an assigned faculty for the course section to retrieve section waitlist information. 
            2. A departmental oversight member for the course section can retrieve section waitlist information with any of the following permission codes 
            VIEW.SECTION.ROSTER
            CREATE.SECTION.ADD.AUTHORIZATION
            VIEW.SECTION.WAITLISTS
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionWaitlist2Async(System.String)">
            <summary>
            Retrieves the waitlist details and student id for a given course sections ID. 
            </summary>
            <param name="sectionId">Course section ID</param>
            <returns>List of Section waitlist student</returns>
            <accessComments>
            You must be an assigned faculty for the course section to retrieve section waitlist information. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionWaitlistAsync(Ellucian.Colleague.Dtos.Student.SectionWaitlistQueryCriteria)">
            <summary>
            Retrieves the waitlist details for a given course sections IDs. 
            </summary>
            <param name="criteria">This holds the section ids and a boolean to indicate if the cross listed section waitlist details are to be included or not</param>
            <returns>A list of student waitlist information</returns>
            <accessComments>
            1. You must be an assigned faculty for the course section to retrieve section waitlist information. 
            2. A departmental oversight member assigned to the section may retrieve section waitlist information with any of the following permission codes
            VIEW.SECTION.ROSTER
            CREATE.SECTION.ADD.AUTHORIZATION
            VIEW.SECTION.WAITLISTS
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetStudentWaitlistStatusesAsync">
            <summary>
            Retrieves the various waitlist statuses 
            </summary>    
            <returns>List of StudentWaitlistStatus</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetStudentSectionWaitlistsByStudentAndSectionIdAsync(System.String,System.String)">
            <summary>
            Retrieves the waitlist details for a given course Section Id and Student Id. 
            </summary>
            <param name="sectionId">Course section ID</param>
            <param name="studentId">student ID</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentSectionWaitlistInfo"> StudentSectionWaitlistInfo </see> object</returns> 
            <accessComments>
            Section waitlist information can only be retrieved by the student.
            1. A Student is accessing their own data,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionsAsync(System.String)">
            <summary>
            Retrieves the sections for the given section Ids. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="sectionIds">comma delimited list of section IDs</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course sections information; however,
            only an assigned faculty user may retrieve list of active students Ids in a given course section.
            For all other users that are not assigned faculty to a given course section a list of active students Ids is not retrieved and 
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSections2Async(System.String)">
            <summary>
            Retrieves the sections for the given section Ids. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="sectionIds">comma delimited list of section IDs</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section2">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course sections information; however,
            only an assigned faculty user may retrieve list of active students Ids in a given course section.
            For all other users that are not assigned faculty to a given course section a list of active students Ids is not retrieved and 
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionsByPostAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Query by post method used to get the sections for the given section Ids. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="sectionIds">list of section IDs</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section2">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course sections information; however,
            only an assigned faculty user may retrieve list of active students Ids in a given course section.
            For all other users that are not assigned faculty to a given course section a list of active students Ids is not retrieved and  
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionsByPost2Async(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Query by post method used to get the sections for the given section Ids. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="sectionIds">list of section IDs</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course sections information; however,
            only an assigned faculty user may retrieve list of active students Ids in a given course section.
            For all other users that are not assigned faculty to a given course section a list of active students Ids is not retrieved and  
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours but newly added sections and those with a changed status are updated in the cache every 10 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutSectionRegistrationAsync(System.String,Ellucian.Colleague.Dtos.SectionRegistration)">
            <summary>
            Update (PUT) section registrations
            </summary>
            <param name="guid">GUID of the Section</param>
            <param name="sectionRegistration">DTO of the SectionRegistration</param>
            <returns>A registration response object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSections2Async(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of Sections objects based on selection criteria.
            </summary>
            <param name="page">Section page Contains ...page...</param>
            <param name="title">Section Title Contains ...title...</param>
            <param name="startOn">Section starts on or after this date</param>
            <param name="endOn">Section ends on or before this date</param>
            <param name="code">Section Name Contains ...code...</param>
            <param name="number">Section Number equal to</param>
            <param name="instructionalPlatform">Learning Platform equal to (guid)</param>
            <param name="academicPeriod">Section Term equal to (guid)</param>
            <param name="academicLevels">Section Academic Level equal to (guid)</param>
            <param name="course">Section Course equal to (guid)</param>
            <param name="site">Section Location equal to (guid)</param>
            <param name="status">Section Status matches closed, open, pending, or cancelled</param>
            <param name="owningInstitutionUnits">Section Department equal to (guid)</param>
            <returns>List of Section2 <see cref="T:Ellucian.Colleague.Dtos.Section3"/> objects representing matching sections</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSectionByGuid2Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section3"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostHedmSection2Async(Ellucian.Colleague.Dtos.Section3)">
            <summary>
            Create (POST) a new section
            </summary>
            <param name="section">DTO of the new section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section3"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutHedmSection2Async(System.String,Ellucian.Colleague.Dtos.Section3)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="id">GUID of the section to update</param>
            <param name="section">DTO of the updated section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section3"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.DeleteHedmSectionByGuid2Async(System.String)">
            <summary>
            Delete (DELETE) a section
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>Nothing</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSections4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Sections objects based on selection criteria.
            </summary>
            <param name="page"> - Section page Contains ...page...</param>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <param name="searchable"></param>
            <param name="keywordSearch"></param>
            <param name="subject"></param>
            <param name="instructor"></param>
            "title" - Section Title Contains ...title...
            "startOn" - Section starts on or after this date
            "endOn" - Section ends on or before this date
            "code" - Section Name Contains ...code...
            "number" - Section Number equal to
            "instructionalPlatform" - Learning Platform equal to (guid)
            "academicPeriod" - Section Term equal to (guid)
            "academicLevels" - Section Academic Level equal to (guid)
            "course" - Section Course equal to (guid)
            "site" - Section Location equal to (guid)
            "status" - Section Status matches closed, open, pending, or cancelled
            "owningInstitutionUnits" - Section Department equal to (guid) [renamed from owningOrganizations in v8]
            <returns>List of Section4 <see cref="T:Ellucian.Colleague.Dtos.Section4"/> objects representing matching sections</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSectionByGuid3Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostHedmSection4Async(Ellucian.Colleague.Dtos.Section4)">
            <summary>
            Create (POST) a new section
            </summary>
            <param name="section">DTO of the new section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutHedmSection4Async(System.String,Ellucian.Colleague.Dtos.Section4)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="id">GUID of the section to update</param>
            <param name="section">DTO of the updated section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.DeleteHedmSectionByGuid4Async(System.String)">
            <summary>
            Delete (DELETE) a section
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSections5Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Sections objects based on selection criteria.
            </summary>
            <param name="page"> - Section page Contains ...page...</param>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <param name="searchable"></param>
            <param name="keywordSearch"></param>
            <param name="subject"></param>
            <param name="instructor"></param>
            "title" - Section Title Contains ...title...
            "startOn" - Section starts on or after this date
            "endOn" - Section ends on or before this date
            "code" - Section Name Contains ...code...
            "number" - Section Number equal to
            "instructionalPlatform" - Learning Platform equal to (guid)
            "academicPeriod" - Section Term equal to (guid)
            "academicLevels" - Section Academic Level equal to (guid)
            "course" - Section Course equal to (guid)
            "site" - Section Location equal to (guid)
            "status" - Section Status matches closed, open, pending, or cancelled
            "owningInstitutionUnits" - Section Department equal to (guid) [renamed from owningOrganizations in v8]
            <returns>List of Section5 <see cref="T:Ellucian.Colleague.Dtos.Section5"/> objects representing matching sections</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSectionByGuid5Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="guid">GUID to desired section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section5"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostHedmSection5Async(Ellucian.Colleague.Dtos.Section5)">
            <summary>
            Create (POST) a new section
            </summary>
            <param name="section">DTO of the new section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section5"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutHedmSection5Async(System.String,Ellucian.Colleague.Dtos.Section5)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="guid">GUID of the section to update</param>
            <param name="section">DTO of the updated section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section5"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSections6Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Sections objects based on selection criteria.
            </summary>
            <param name="page"> - Section page Contains ...page...</param>
            <param name="criteria">filter criteria</param>
            <param name="searchable">named query</param>
            <param name="keywordSearch">named query</param>
            <param name="subject">named query</param>
            <param name="instructor">named query</param>
            "title" - Section Title Contains ...title...
            "startOn" - Section starts on or after this date
            "endOn" - Section ends on or before this date
            "code" - Section Name Contains ...code...
            "number" - Section Number equal to
            "instructionalPlatform" - Learning Platform equal to (guid)
            "academicPeriod" - Section Term equal to (guid)
            "academicLevels" - Section Academic Level equal to (guid)
            "course" - Section Course equal to (guid)
            "site" - Section Location equal to (guid)
            "status" - Section Status matches closed, open, pending, or cancelled
            "owningInstitutionUnits" - Section Department equal to (guid) [renamed from owningOrganizations in v8]
            <returns>List of Section6 <see cref="T:Ellucian.Colleague.Dtos.Section6"/> objects representing matching sections</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetHedmSectionByGuid6Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="guid">GUID to desired section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section6"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostHedmSection6Async(Ellucian.Colleague.Dtos.Section6)">
            <summary>
            Create (POST) a new section
            </summary>
            <param name="section">DTO of the new section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section6"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutHedmSection6Async(System.String,Ellucian.Colleague.Dtos.Section6)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="guid">GUID of the section to update</param>
            <param name="section">DTO of the updated section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section6"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionsByPost3Async(Ellucian.Colleague.Dtos.Student.SectionsQueryCriteria)">
             <summary>
             Query by post method used to get the sections for the given section Ids. 
             If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
             </summary>
             <param name="criteria">DTO Object with a list of Section keys</param>
             <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Sections</see></returns>
             <accessComments>
             Any authenticated user can retrieve course sections information; however,
             only an assigned faculty user may retrieve list of active students Ids in a given course section.
            For all other users that are not assigned faculty to a given course section a list of active students Ids is not retrieved and 
             response object is returned with a X-Content-Restricted header with a value of "partial".
             </accessComments>
             <note>Section is cached for 24 hours but newly added sections and those with a changed status are updated in the cache every 10 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionsByPost4Async(Ellucian.Colleague.Dtos.Student.SectionsQueryCriteria)">
            <summary>
            Query by post method used to get the sections for the given section Ids. 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="criteria">DTO Object with a list of Section keys</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Section4">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course sections information; however,
            only an assigned faculty or departmental oversight user may retrieve list of active students Ids in a given course section.
            For all other users that are not assigned faculty or departmental oversight to a given course section a list of active students Ids is not retrieved and 
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Course section information is cached for 24 hours but newly added sections and those with a changed status are updated in the cache every 10 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutCollectionOfStudentGradesAsync(System.String,Ellucian.Colleague.Dtos.Student.SectionGrades)">
            <summary>
            Puts a collection of student section grades.
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.SectionGradeResponse">StudentSectionGradeResponse</see></returns>
            <accessComments>
            A user with UPDATE.GRADES permission can update student grades for the given section.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutCollectionOfStudentGrades2Async(System.String,Ellucian.Colleague.Dtos.Student.SectionGrades2)">
            <summary>
            Puts a collection of student section grades.
            </summary>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.SectionGradeResponse">StudentSectionGradeResponse</see></returns>
            <accessComments>
            A user with UPDATE.GRADES permission can update student grades for the given section.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutCollectionOfStudentGrades3Async(System.String,Ellucian.Colleague.Dtos.Student.SectionGrades3)">
            <summary>
            Puts a collection of student section grades.
            </summary>
            <param name="sectionId">Section ID</param>
            <param name="sectionGrades">DTO of section grade information</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.Grade">StudentSectionGradeResponse</see></returns>
            <accessComments>
            A user with UPDATE.GRADES permission or assigned faculty on a section can update students grades for the given section.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutCollectionOfStudentGrades4Async(System.String,Ellucian.Colleague.Dtos.Student.SectionGrades3)">
            <summary>
            Puts a collection of student section grades from a standard non-ILP caller.
            </summary>
            <param name="sectionId">Section ID</param>
            <param name="sectionGrades">DTO of section grade information</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.Grade">StudentSectionGradeResponse</see></returns>
            <accessComments>
            A user with UPDATE.GRADES permission or assigned faculty on a section can update students grades for the given section.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutCollectionOfStudentGrades5Async(System.String,Ellucian.Colleague.Dtos.Student.SectionGrades4)">
            <summary>
            Puts a collection of student section grades from a standard non-ILP caller.
            </summary>
            <param name="sectionId">Section ID</param>
            <param name="sectionGrades">DTO of section grade information</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.Grade">StudentSectionGradeResponse</see></returns>
            <accessComments>
            1. A user with UPDATE.GRADES permission or assigned faculty on a section can update students grades for the given section.
            2. A departmental oversight member assigned to the section with CREATE.SECTION.GRADING can update students grades for the given section.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PutIlpCollectionOfStudentGrades1Async(System.String,Ellucian.Colleague.Dtos.Student.SectionGrades3)">
            <summary>
            Puts a collection of student section grades from an ILP caller.
            </summary>
            <param name="sectionId">Section ID</param>
            <param name="sectionGrades">DTO of section grade information</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.Grade">StudentSectionGradeResponse</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionRegistrationDatesAsync(Ellucian.Colleague.Dtos.Student.SectionDateQueryCriteria)">
            <summary>
            Query by post method used to get the section registration date overrides for any of the specified section Ids based on the registration group of the person making the request. 
            </summary>
            <param name="criteria">DTO Object that contains the list of Section ids for which registration dates are requested and the considerUsersgroup boolean variable to decide if the persons registration group should be considered or not</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.SectionRegistrationDate">SectionRegistrationDate</see> DTOs.</returns> 
            <accessComments>
            1.Requestor must be assigned faculty member for section.   
            2. A Student is accessing their own data,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
            <note>Section and Registration Group information used to calculate the dates are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.GetSectionMeetingInstancesAsync(System.String)">
            <summary>
            Get all section meeting instances for a specific section id
            </summary>
            <param name="sectionId">Id of Section. (Required)</param>
            <returns>The requested section <see cref="T:Ellucian.Colleague.Dtos.Student.SectionMeetingInstance">meeting instances</see></returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>NotFound.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionEventsICalAsync(Ellucian.Colleague.Dtos.Student.SectionEventsICalQueryCriteria)">
            <summary>
            Query by post method to retrieve section events or section calendar schedules in ICal format.
            For unscheduled cross-listed sections, it will retrieve calendar schedules for associated primary section if parameter on CPWP/SXRF allows to do so.
            </summary>
            <param name="criteria">DTO Object that contains list of sectionIds and date range to query section calendar schedules</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Base.EventsICal"> EventsICal</see> DTO</returns>
            <accessComments>Any authenticated user can retrieve sections calendar schedules in iCal format.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostSectionSearchAsync(Ellucian.Colleague.Dtos.Student.SectionSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Performs a search of sections in Colleague that are available for registration. 
            The criteria supplies a keyword, course Ids, section Id and various filters which may be used to search and narrow a list of sections.
                If keyword is null or empty and there are no course Ids or section Ids, then no sections will be returned.
            </summary> 
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Student.SectionSearchCriteria">Section search criteria</see></param>
            <param name="pageSize">integer page size</param>
            <param name="pageIndex">integer page index</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.SectionPage">page</see> of sections matching criteria with totals and filter information.</returns>
            <accessComments>Section search can be accessed by any authenticated user or guest user.</accessComments>
            <note>Section is cached for 24 hours. New sections and sections with a status change are updated to the cache every 10 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostSectionSearch2Async(Ellucian.Colleague.Dtos.Student.SectionSearchCriteria2,System.Int32,System.Int32)">
            <summary>
            Performs a search of sections in Colleague that are available for registration. 
            The criteria supplies a keyword, course Ids, section Id and various filters which may be used to search and narrow a list of sections.
                If keyword is null or empty and there are no course Ids or section Ids, then no sections will be returned.
            </summary> 
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Student.SectionSearchCriteria">Section search criteria</see></param>
            <param name="pageSize">integer page size</param>
            <param name="pageIndex">integer page index</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.SectionPage2">page</see> of sections matching criteria with totals and filter information.</returns>
            <accessComments>Section search can be accessed by any authenticated user or guest user.</accessComments>
            <note>Section is cached for 24 hours. New sections and sections with a status change are updated to the cache every 10 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.PostSectionCensusCertificationAsync(System.String,Ellucian.Colleague.Dtos.Student.SectionCensusToCertify)">
            <summary>
            Certify Census Date for the given section.
            </summary>
            <param name="sectionId">Section Id of the section for which census needs to be certified</param>
            <param name="sectionCensusToCertify"><see cref="T:Ellucian.Colleague.Dtos.Student.SectionCensusToCertify"></see>Census information to certify</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.SectionCensusCertification">section's census certification</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have appropriate permission</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if the census is already certified</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.KeyNotFound returned if section si not found or census date for the section does not exist.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if there are other creation problem.</exception>
            <accessComments>
            1. You must be an assigned faculty for the course section. 
            2. A departmental oversight member assigned to the section may certify census with any of the following permission codes
            CREATE.SECTION.CENSUS
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsController.QuerySectionsSeatsAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve a collection of course section seat counts for the given section ids and any of their cross-listed sections
            </summary>
            <param name="sectionIds">Unique identifiers for the course sections in which to retrieve seat counts</param>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.SectionSeats"/></returns>
            <accessComments>Any authenticated user can retrieve course sections seat count information.</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController">
            <summary>
            Provides access to course Section data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionsController class.
            </summary>
            <param name="sectionCoordinationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService">ISectionCoordinationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionsMaximum2Async(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of SectionMaximum objects based on selection criteria.
            </summary>
            <param name="page">Section page Contains ...page...</param>
            <param name="title">Section Title Contains ...title...</param>
            <param name="startOn">Section starts on or after this date</param>
            <param name="endOn">Section ends on or before this date</param>
            <param name="code">Section Name Contains ...code...</param>
            <param name="number">Section Number equal to</param>
            <param name="instructionalPlatform">Learning Platform equal to (guid)</param>
            <param name="academicPeriod">Section Term equal to (guid)</param>
            <param name="academicLevels">Section Academic Level equal to (guid)</param>
            <param name="course">Section Course equal to (guid)</param>
            <param name="site">Section Location equal to (guid)</param>
            <param name="status">Section Status matches closed, open, pending, or cancelled</param>
            <param name="owningInstitutionUnits">Section Department equal to (guid)</param>
            <returns>List of SectionMaximum <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum2"/> objects representing matching SectionMaximum</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionsMaximum3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of SectionMaximum objects based on selection criteria.
            </summary>
            <param name="page">Section page Contains ...page...</param>
            <param name="criteria"> filter criteria</param>
            <returns>List of SectionMaximum <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum3"/> objects representing matching SectionMaximum</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionsMaximum4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of SectionMaximum objects based on selection criteria.
            </summary>
            <param name="page">Section page Contains ...page...</param>
            <param name="criteria"> filter criteria</param>
            <returns>List of SectionMaximum <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum4"/> objects representing matching SectionMaximum</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionsMaximum5Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of SectionMaximum objects based on selection criteria.
            </summary>
            <param name="page">Section page Contains ...page...</param>
            <param name="criteria"> filter criteria</param>
            <returns>List of SectionMaximum <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum5"/> objects representing matching SectionMaximum</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionMaximumByGuid2Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A SectionMaximum object <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionMaximumByGuid3Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A SectionMaximum object <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum3"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionMaximumByGuid4Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A SectionMaximum object <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum4"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.GetHedmSectionMaximumByGuid5Async(System.String)">
            <summary>
            Read (GET) a section using a GUID
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A SectionMaximum object <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum5"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.PostHedmSectionMaximumAsync(Ellucian.Colleague.Dtos.SectionMaximum)">
            <summary>
            Create (POST) a new SectionMaximum
            </summary>
            <param name="sectionMaximum">DTO of the new section</param>
            <returns>A SectionMaximum object <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.PutHedmSectionMaximumAsync(System.String,Ellucian.Colleague.Dtos.SectionMaximum)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="id">GUID of the section to update</param>
            <param name="sectionMaximum">DTO of the updated section</param>
            <returns>A SectionMaximum object <see cref="T:Ellucian.Colleague.Dtos.SectionMaximum"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionsMaximumController.DeleteHedmSectionMaximumByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) a section
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Section"/> in HeDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController">
            <summary>
            Provides access to SectionStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionStatusesController class.
            </summary>
            <param name="sectionStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionStatusesService">ISectionStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController.GetSectionStatusesAsync">
            <summary>
            Return all sectionStatuses
            </summary>
            <returns>List of SectionStatuses <see cref="T:Ellucian.Colleague.Dtos.SectionStatuses"/> objects representing matching sectionStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController.GetSectionStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a sectionStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired sectionStatuses</param>
            <returns>A sectionStatuses object <see cref="T:Ellucian.Colleague.Dtos.SectionStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController.PostSectionStatusesAsync(Ellucian.Colleague.Dtos.SectionStatuses)">
            <summary>
            Create (POST) a new sectionStatuses
            </summary>
            <param name="sectionStatuses">DTO of the new sectionStatuses</param>
            <returns>A sectionStatuses object <see cref="T:Ellucian.Colleague.Dtos.SectionStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController.PutSectionStatusesAsync(System.String,Ellucian.Colleague.Dtos.SectionStatuses)">
            <summary>
            Update (PUT) an existing sectionStatuses
            </summary>
            <param name="guid">GUID of the sectionStatuses to update</param>
            <param name="sectionStatuses">DTO of the updated sectionStatuses</param>
            <returns>A sectionStatuses object <see cref="T:Ellucian.Colleague.Dtos.SectionStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionStatusesController.DeleteSectionStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a sectionStatuses
            </summary>
            <param name="guid">GUID to desired sectionStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionTextbooksController">
            <summary>
            Provides access to course Section data for textbooks
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTextbooksController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionsController class.
            </summary>
            <param name="sectionCoordinationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService">ISectionCoordinationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTextbooksController.UpdateSectionBookAsync(Ellucian.Colleague.Dtos.Student.SectionTextbook)">
            <summary>
            Update a book assignment for a section.
            </summary>
            <param name="textbook">The textbook whose assignment to a specific section is being updated.</param>
            <returns>An updated <see cref="T:Ellucian.Colleague.Dtos.Student.Section3"/> object.</returns>
            <accessComments>
            1. Only an assigned faculty user may update book assignments for a course section.
            2. A departmental oversight member assigned to the section may update book assignments for a course section with the following permission code
            CREATE.SECTION.BOOKS
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController">
            <summary>
            Provides access to SectionTitleTypes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionTitleTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionTitleTypesController class.
            </summary>
            <param name="sectionTitleTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ISectionTitleTypesService">ISectionTitleTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController.GetSectionTitleTypesAsync">
            <summary>
            Return all sectionTitleTypes
            </summary>
            <returns>List of SectionTitleTypes <see cref="T:Ellucian.Colleague.Dtos.SectionTitleType"/> objects representing matching sectionTitleTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController.GetSectionTitleTypeByGuidAsync(System.String)">
            <summary>
            Read (GET) a sectionTitleTypes using a GUID
            </summary>
            <param name="guid">GUID to desired sectionTitleTypes</param>
            <returns>A sectionTitleTypes object <see cref="T:Ellucian.Colleague.Dtos.SectionTitleType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController.PostSectionTitleTypeAsync(Ellucian.Colleague.Dtos.SectionTitleType)">
            <summary>
            Create (POST) a new sectionTitleTypes
            </summary>
            <param name="sectionTitleTypes">DTO of the new sectionTitleTypes</param>
            <returns>A sectionTitleTypes object <see cref="T:Ellucian.Colleague.Dtos.SectionTitleType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController.PutSectionTitleTypeAsync(System.String,Ellucian.Colleague.Dtos.SectionTitleType)">
            <summary>
            Update (PUT) an existing sectionTitleTypes
            </summary>
            <param name="guid">GUID of the sectionTitleTypes to update</param>
            <param name="sectionTitleTypes">DTO of the updated sectionTitleTypes</param>
            <returns>A sectionTitleTypes object <see cref="T:Ellucian.Colleague.Dtos.SectionTitleType"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SectionTitleTypesController.DeleteSectionTitleTypeAsync(System.String)">
            <summary>
            Delete (DELETE) a sectionTitleTypes
            </summary>
            <param name="guid">GUID to desired sectionTitleTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SessionCyclesController">
            <summary>
            Provides access to the session cycle data for courses.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SessionCyclesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SessionCyclesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SessionCyclesController.GetAsync">
            <summary>
            Retrieves all Session Cycles.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.SessionCycle">Session Cycle</see> codes and descriptions.</returns>
            <accessComments>Any authenticated user can retrieve session cycles.</accessComments>
            <note>SessionCycles are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.SourcesController">
            <summary>
            Provides access to Source data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SourcesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISourceService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SourcesController class.
            </summary>
            <param name="sourceService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SourcesController.GetSourcesAsync">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Retrieves all sources.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All Source objects.</returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SourcesController.GetSourceByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN ELLUCIAN DATA MODEL</remarks>
            <summary>
            Retrieves a source by ID.
            </summary>
            <param name="id">Id of Source to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Source">Source.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SourcesController.PostSourcesAsync(Ellucian.Colleague.Dtos.Source)">
            <remarks>FOR USE WITH ELLUCIAN ELLUCIAN DATA MODEL</remarks>
            <summary>
            Creates a Source.
            </summary>
            <param name="source"><see cref="T:Ellucian.Colleague.Dtos.Source">Source</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Source">Source</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SourcesController.PutSourcesAsync(System.String,Ellucian.Colleague.Dtos.Source)">
            <remarks>FOR USE WITH ELLUCIAN ELLUCIAN DATA MODEL</remarks>
            <summary>
            Updates a Source.
            </summary>
            <param name="id">Id of the Source to update</param>
            <param name="source"><see cref="T:Ellucian.Colleague.Dtos.Source">Source</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Source">Source</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.SourcesController.DeleteSourcesAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN ELLUCIAN DATA MODEL</remarks>
            <summary>
            Delete (DELETE) an existing Source
            </summary>
            <param name="id">Id of the Source to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController">
            <summary>
            Provides access to StudentAcademicCredentials
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicCredentialsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAcademicCredentialsController class.
            </summary>
            <param name="studentAcademicCredentialsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicCredentialsService">IStudentAcademicCredentialsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController.GetStudentAcademicCredentialsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentAcademicCredentials
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>        
            <param name="criteria">Filtering Criteria</param>
            <param name="personFilter">personFilter Named Query</param>
            <param name="academicPrograms">academicPrograms Named Query</param>
            <returns>List of StudentAcademicCredentials <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicCredentials"/> objects representing matching studentAcademicCredentials</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController.GetStudentAcademicCredentialsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentAcademicCredentials using a GUID
            </summary>
            <param name="guid">GUID to desired studentAcademicCredentials</param>
            <returns>A studentAcademicCredentials object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicCredentials"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController.PostStudentAcademicCredentialsAsync(Ellucian.Colleague.Dtos.StudentAcademicCredentials)">
            <summary>
            Create (POST) a new studentAcademicCredentials
            </summary>
            <param name="studentAcademicCredentials">DTO of the new studentAcademicCredentials</param>
            <returns>A studentAcademicCredentials object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicCredentials"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController.PutStudentAcademicCredentialsAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicCredentials)">
            <summary>
            Update (PUT) an existing studentAcademicCredentials
            </summary>
            <param name="guid">GUID of the studentAcademicCredentials to update</param>
            <param name="studentAcademicCredentials">DTO of the updated studentAcademicCredentials</param>
            <returns>A studentAcademicCredentials object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicCredentials"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicCredentialsController.DeleteStudentAcademicCredentialsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentAcademicCredentials
            </summary>
            <param name="guid">GUID to desired studentAcademicCredentials</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController">
            <summary>
            Provides access to StudentAcademicPeriodProfiles data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicPeriodProfilesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAcademicPeriodProfilesController class.
            </summary>
            <param name="studentAcademicPeriodProfilesService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicPeriodProfilesService">IStudentAcademicPeriodProfilesService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.GetStudentAcademicPeriodProfileByGuidAsync(System.String)">
            <summary>
            Retrieves an Student Academic Period Profiles by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles">StudentAcademicPeriodProfiles</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.GetStudentAcademicPeriodProfilesAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String)">
            <summary>
            Return a list of StudentAcademicPeriodProfiles objects based on selection criteria.
            </summary>
             <param name="page">page</param>
            <param name="person">Id (GUID) A reference to link a student to the common HEDM persons entity</param>     
            <param name="academicPeriod">Id (GUID) A term within an academic year (for example, Semester).</param>
            <returns>List of StudentAcademicPeriodProfiles <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles"/> objects representing matching Student Academic Period Profiles</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.GetStudentAcademicPeriodProfiles2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of StudentAcademicPeriodProfiles objects based on selection criteria.
            </summary>
             <param name="page">page</param>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <returns>List of StudentAcademicPeriodProfiles <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles"/> objects representing matching Student Academic Period Profiles</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.CreateStudentAcademicPeriodProfilesAsync(Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles)">
            <summary>
            Creates a Student Academic Period Profile.
            </summary>
            <param name="studentAcademicPeriodProfiles"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles">StudentAcademicPeriodProfiles</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles">StudentAcademicPeriodProfiles</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.UpdateStudentAcademicPeriodProfilesAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles)">
            <summary>
            Updates a Student Academic Period Profile.
            </summary>
            <param name="id">Id of the Student Academic Period Profile to update</param>
            <param name="studentAcademicPeriodProfiles"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles">StudentAcademicPeriodProfiles</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodProfiles">StudentAcademicPeriodProfiles</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodProfilesController.DeleteStudentAcademicPeriodProfilesAsync(System.String)">
            <summary>
            Deletes a Student Academic Period Profiles.
            </summary>
            <param name="id">ID of the Student Academic Period Profile to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController">
            <summary>
            Provides access to StudentAcademicPeriods
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicPeriodsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAcademicPeriodsController class.
            </summary>
            <param name="studentAcademicPeriodsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicPeriodsService">IStudentAcademicPeriodsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController.GetStudentAcademicPeriodsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentAcademicPeriods
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria"></param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <returns>List of StudentAcademicPeriods <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriods"/> objects representing matching studentAcademicPeriods</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController.GetStudentAcademicPeriodsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentAcademicPeriods using a GUID
            </summary>
            <param name="guid">GUID to desired studentAcademicPeriods</param>
            <returns>A studentAcademicPeriods object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController.PostStudentAcademicPeriodsAsync(Ellucian.Colleague.Dtos.StudentAcademicPeriods)">
            <summary>
            Create (POST) a new studentAcademicPeriods
            </summary>
            <param name="studentAcademicPeriods">DTO of the new studentAcademicPeriods</param>
            <returns>A studentAcademicPeriods object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController.PutStudentAcademicPeriodsAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicPeriods)">
            <summary>
            Update (PUT) an existing studentAcademicPeriods
            </summary>
            <param name="guid">GUID of the studentAcademicPeriods to update</param>
            <param name="studentAcademicPeriods">DTO of the updated studentAcademicPeriods</param>
            <returns>A studentAcademicPeriods object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriods"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodsController.DeleteStudentAcademicPeriodsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentAcademicPeriods
            </summary>
            <param name="guid">GUID to desired studentAcademicPeriods</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController">
            <summary>
            Provides access to StudentAcademicPeriodStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicPeriodStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAcademicPeriodStatusesController class.
            </summary>
            <param name="studentAcademicPeriodStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicPeriodStatusesService">IStudentAcademicPeriodStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController.GetStudentAcademicPeriodStatusesAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentAcademicPeriodStatuses
            </summary>
            <returns>List of StudentAcademicPeriodStatuses <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodStatuses"/> objects representing matching studentAcademicPeriodStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController.GetStudentAcademicPeriodStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentAcademicPeriodStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired studentAcademicPeriodStatuses</param>
            <returns>A studentAcademicPeriodStatuses object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController.PostStudentAcademicPeriodStatusesAsync(Ellucian.Colleague.Dtos.StudentAcademicPeriodStatuses)">
            <summary>
            Create (POST) a new studentAcademicPeriodStatuses
            </summary>
            <param name="studentAcademicPeriodStatuses">DTO of the new studentAcademicPeriodStatuses</param>
            <returns>A studentAcademicPeriodStatuses object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController.PutStudentAcademicPeriodStatusesAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicPeriodStatuses)">
            <summary>
            Update (PUT) an existing studentAcademicPeriodStatuses
            </summary>
            <param name="guid">GUID of the studentAcademicPeriodStatuses to update</param>
            <param name="studentAcademicPeriodStatuses">DTO of the updated studentAcademicPeriodStatuses</param>
            <returns>A studentAcademicPeriodStatuses object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPeriodStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicPeriodStatusesController.DeleteStudentAcademicPeriodStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentAcademicPeriodStatuses
            </summary>
            <param name="guid">GUID to desired studentAcademicPeriodStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController">
            <summary>
            Provides access to StudentAcademicStandings
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController.#ctor(Ellucian.Colleague.Coordination.Student.IStudentAcademicStandingsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAcademicStandingsController class.
            </summary>
            <param name="studentAcademicStandingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.IStudentAcademicStandingsService">IStudentAcademicStandingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController.GetStudentAcademicStandingsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all studentAcademicStandings
            </summary>
            <returns>List of StudentAcademicStandings <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicStandings"/> objects representing matching studentAcademicStandings</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController.GetStudentAcademicStandingsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentAcademicStandings using a GUID
            </summary>
            <param name="guid">GUID to desired studentAcademicStandings</param>
            <returns>A studentAcademicStandings object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicStandings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController.PostStudentAcademicStandingsAsync(Ellucian.Colleague.Dtos.StudentAcademicStandings)">
            <summary>
            Create (POST) a new studentAcademicStandings
            </summary>
            <param name="studentAcademicStandings">DTO of the new studentAcademicStandings</param>
            <returns>A studentAcademicStandings object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicStandings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController.PutStudentAcademicStandingsAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicStandings)">
            <summary>
            Update (PUT) an existing studentAcademicStandings
            </summary>
            <param name="guid">GUID of the studentAcademicStandings to update</param>
            <param name="studentAcademicStandings">DTO of the updated studentAcademicStandings</param>
            <returns>A studentAcademicStandings object <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicStandings"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAcademicStandingsController.DeleteStudentAcademicStandingsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentAcademicStandings
            </summary>
            <param name="guid">GUID to desired studentAcademicStandings</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController">
            <summary>
            Controller for Student Admission Decisions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdmissionDecisionController class.
            </summary>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController.GetStudentAdmissionDecisionsAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Student Admission Decisions
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.StudentAdmissionDecisions">StudentAdmissionDecisions.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController.GetStudentAdmissionDecisionByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing Student Admission Decision
            </summary>
            <param name="guid">GUID of the studentAdmissionDecision to get</param>
            <returns>A studentAdmissionDecision object <see cref="T:Ellucian.Colleague.Dtos.StudentAdmissionDecisions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController.PutStudentAdmissionDecisionsAsync(Ellucian.Colleague.Dtos.StudentAdmissionDecisions)">
            <summary>
            Updates an StudentAdmissionDecisions.
            </summary>
            <param name="studentAdmissionDecisions"><see cref="T:Ellucian.Colleague.Dtos.StudentAdmissionDecisions">StudentAdmissionDecisions</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.StudentAdmissionDecisions">StudentAdmissionDecisions</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController.PostStudentAdmissionDecisionsAsync(Ellucian.Colleague.Dtos.StudentAdmissionDecisions)">
            <summary>
            Creates a StudentAdmissionDecisions.
            </summary>
            <param name="studentAdmissionDecisions"><see cref="T:Ellucian.Colleague.Dtos.StudentAdmissionDecisions">StudentAdmissionDecisions</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAdmissionDecisions">StudentAdmissionDecisions</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdmissionDecisionsController.DeleteStudentAdmissionDecisionsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing StudentAdmissionDecisions
            </summary>
            <param name="guid">Id of the StudentAdmissionDecisions to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController">
            <summary>
            Provides access to StudentAdvisorRelationships
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAdvisorRelationshipsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAdvisorRelationshipsController class.
            </summary>
            <param name="studentAdvisorRelationshipsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAdvisorRelationshipsService">IStudentAdvisorRelationshipsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController.GetStudentAdvisorRelationshipsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentAdvisorRelationships
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">Filters to be used within this API. They must be in JSON and contain the following fields: student,advisor, advisorType and startAcademicPeriod</param>
            <returns>List of StudentAdvisorRelationships <see cref="T:Ellucian.Colleague.Dtos.StudentAdvisorRelationships"/> objects representing matching studentAdvisorRelationships</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController.GetStudentAdvisorRelationshipsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentAdvisorRelationships using a GUID
            </summary>
            <param name="guid">GUID to desired studentAdvisorRelationships</param>
            <returns>A studentAdvisorRelationships object <see cref="T:Ellucian.Colleague.Dtos.StudentAdvisorRelationships"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController.PostStudentAdvisorRelationshipsAsync(Ellucian.Colleague.Dtos.StudentAdvisorRelationships)">
            <summary>
            Create (POST) a new studentAdvisorRelationships
            </summary>
            <param name="studentAdvisorRelationships">DTO of the new studentAdvisorRelationships</param>
            <returns>A studentAdvisorRelationships object <see cref="T:Ellucian.Colleague.Dtos.StudentAdvisorRelationships"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController.PutStudentAdvisorRelationshipsAsync(System.String,Ellucian.Colleague.Dtos.StudentAdvisorRelationships)">
            <summary>
            Update (PUT) an existing studentAdvisorRelationships
            </summary>
            <param name="guid">GUID of the studentAdvisorRelationships to update</param>
            <param name="studentAdvisorRelationships">DTO of the updated studentAdvisorRelationships</param>
            <returns>A studentAdvisorRelationships object <see cref="T:Ellucian.Colleague.Dtos.StudentAdvisorRelationships"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAdvisorRelationshipsController.DeleteStudentAdvisorRelationshipsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentAdvisorRelationships
            </summary>
            <param name="guid">GUID to desired studentAdvisorRelationships</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController">
            <summary>
            Provides access to StudentAptitudeAssessments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAptitudeAssessmentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAptitudeAssessmentsController class.
            </summary>
            <param name="studentAptitudeAssessmentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAptitudeAssessmentsService">IStudentAptitudeAssessmentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.GetStudentAptitudeAssessmentsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all studentAptitudeAssessments
            </summary>
            <returns>List of StudentAptitudeAssessments <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> objects representing matching studentAptitudeAssessments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.GetStudentAptitudeAssessments2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentAptitudeAssessments
            </summary>
            <returns>List of StudentAptitudeAssessments <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> objects representing matching studentAptitudeAssessments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.GetStudentAptitudeAssessments3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentAptitudeAssessments
            </summary>
            <returns>List of StudentAptitudeAssessments <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> objects representing matching studentAptitudeAssessments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.GetStudentAptitudeAssessmentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentAptitudeAssessments using a GUID
            </summary>
            <param name="guid">GUID to desired studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.GetStudentAptitudeAssessmentsByGuid2Async(System.String)">
            <summary>
            Read (GET) a studentAptitudeAssessments using a GUID
            </summary>
            <param name="guid">GUID to desired studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.GetStudentAptitudeAssessmentsByGuid3Async(System.String)">
            <summary>
            Read (GET) a studentAptitudeAssessments using a GUID
            </summary>
            <param name="guid">GUID to desired studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.PutStudentAptitudeAssessmentsAsync(System.String,Ellucian.Colleague.Dtos.StudentAptitudeAssessments)">
            <summary>
            Update (PUT) an existing studentAptitudeAssessments
            </summary>
            <param name="guid">GUID of the studentAptitudeAssessments to update</param>
            <param name="studentAptitudeAssessments">DTO of the updated studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.PutStudentAptitudeAssessments2Async(System.String,Ellucian.Colleague.Dtos.StudentAptitudeAssessments)">
            <summary>
            Update (PUT) an existing StudentAptitudeAssessments
            </summary>
            <param name="guid">GUID of the studentAptitudeAssessments to update</param>
            <param name="studentAptitudeAssessments">DTO of the updated studentAptitudeAssessments</param>
            <returns>A StudentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.PutStudentAptitudeAssessments3Async(System.String,Ellucian.Colleague.Dtos.StudentAptitudeAssessments2)">
            <summary>
            Update (PUT) an existing StudentAptitudeAssessments
            </summary>
            <param name="guid">GUID of the studentAptitudeAssessments to update</param>
            <param name="studentAptitudeAssessments">DTO of the updated studentAptitudeAssessments</param>
            <returns>A StudentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.PostStudentAptitudeAssessmentsAsync(Ellucian.Colleague.Dtos.StudentAptitudeAssessments)">
            <summary>
            Create (POST) a new studentAptitudeAssessments
            </summary>
            <param name="studentAptitudeAssessments">DTO of the new studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.PostStudentAptitudeAssessments2Async(Ellucian.Colleague.Dtos.StudentAptitudeAssessments)">
            <summary>
            Create (POST) a new studentAptitudeAssessments
            </summary>
            <param name="studentAptitudeAssessments">DTO of the new studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.PostStudentAptitudeAssessments3Async(Ellucian.Colleague.Dtos.StudentAptitudeAssessments2)">
            <summary>
            Create (POST) a new studentAptitudeAssessments
            </summary>
            <param name="studentAptitudeAssessments">DTO of the new studentAptitudeAssessments</param>
            <returns>A studentAptitudeAssessments object <see cref="T:Ellucian.Colleague.Dtos.StudentAptitudeAssessments"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAptitudeAssessmentsController.DeleteStudentAptitudeAssessmentsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentAptitudeAssessments
            </summary>
            <param name="guid">GUID to desired studentAptitudeAssessments</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentAttendanceController">
            <summary>
            Provides information about student attendances data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAttendanceController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentAttendanceService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            constructor
            </summary>
            <param name="studentAttendanceService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAttendanceController.QueryStudentAttendancesAsync(Ellucian.Colleague.Dtos.Student.StudentAttendanceQueryCriteria)">
            <summary>
            Query by post method used to get student attendance information based on criteria
            </summary>
            <remarks>If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database; otherwise, cached data is returned from the repository.</remarks>
            <param name="criteria">Object containing the section for which attendances are requested and other parameter choices.</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentAttendance">Student Attendance</see> DTOs.</returns>
            <accessComments>
            1. Only a faculty user who is assigned to the requested course section can view student attendance data for that course section
            2. A departmental oversight member assigned to the section may retrieve student attendance information with any of the following permission code
            VIEW.SECTION.ATTENDANCE
            CREATE.SECTION.ATTENDANCE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentAttendanceController.PutStudentAttendanceAsync(Ellucian.Colleague.Dtos.Student.StudentAttendance)">
            <summary>
            Add new or update an existing student attendance for a student, section and meeting instance.
            </summary>
            <param name="studentAttendance">Object containing the section for which attendances are requested and other parameter choices.</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Student.StudentAttendance">Student Attendance</see> DTO.</returns>
            <accessComments>1) faculty user who is assigned to the requested course section can update student attendance data for that course section
            2)A departmental oversight person for this section who has CREATE.SECTION.ATTENDANCE permission</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController">
            <summary>
            The controller for student charges for the Ellucian Data Model.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentChargeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the StudentChargeController object
            </summary>
            <param name="studentChargeService">student charges service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.GetByIdAsync(System.String)">
            <summary>
            Retrieves a specified student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <returns>A StudentCharge DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.GetAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves all student charges for the data model version 6
            </summary>
            <returns>A Collection of StudentCharges</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.StudentCharge)">
            <summary>
            Update a single student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <param name="studentChargeDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentCharge</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.CreateAsync(Ellucian.Colleague.Dtos.StudentCharge)">
            <summary>
            Create a single student charge for the data model version 6
            </summary>
            <param name="studentChargeDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentCharge</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.GetByIdAsync1(System.String)">
            <summary>
            Retrieves a specified student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <returns>A StudentCharge DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.GetAsync1(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student charges for the data model version 11
            </summary>
            <returns>A Collection of StudentCharges</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.UpdateAsync1(System.String,Ellucian.Colleague.Dtos.StudentCharge1)">
            <summary>
            Update a single student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <param name="studentChargeDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentCharge</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.CreateAsync1(Ellucian.Colleague.Dtos.StudentCharge1)">
            <summary>
            Create a single student charge for the data model version 6
            </summary>
            <param name="studentChargeDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentCharge</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.GetStudentChargesByIdAsync(System.String)">
            <summary>
            Retrieves a specified student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <returns>A StudentCharge DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.GetStudentChargesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student charges for the data model version 11
            </summary>
            <returns>A Collection of StudentCharges</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.UpdateStudentChargesAsync(System.String,Ellucian.Colleague.Dtos.StudentCharge2)">
            <summary>
            Update a single student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <param name="studentChargeDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentCharge</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.CreateStudentChargesAsync(Ellucian.Colleague.Dtos.StudentCharge2)">
            <summary>
            Create a single student charge for the data model version 6
            </summary>
            <param name="studentChargeDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentCharge</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentChargesController.DeleteAsync(System.String)">
            <summary>
            Delete a single student charge for the data model version 6
            </summary>
            <param name="id">The requested student charge GUID</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController">
            <summary>
            Provides access to StudentCohortAssignments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentCohortAssignmentsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentCohortAssignmentsController class.
            </summary>
            <param name="studentCohortAssignmentsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentCohortAssignmentsService">IStudentCohortAssignmentsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController.GetStudentCohortAssignmentsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentCohortAssignments.
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">JSON formatted selection criteria.</param>
            <returns>List of StudentCohortAssignments <see cref="T:Ellucian.Colleague.Dtos.StudentCohortAssignments"/> objects representing matching studentCohortAssignments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController.GetStudentCohortAssignmentsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentCohortAssignments using a GUID
            </summary>
            <param name="guid">GUID to desired studentCohortAssignments</param>
            <returns>A studentCohortAssignments object <see cref="T:Ellucian.Colleague.Dtos.StudentCohortAssignments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController.PostStudentCohortAssignmentsAsync(Ellucian.Colleague.Dtos.StudentCohortAssignments)">
            <summary>
            Create (POST) a new studentCohortAssignments
            </summary>
            <param name="studentCohortAssignments">DTO of the new studentCohortAssignments</param>
            <returns>A studentCohortAssignments object <see cref="T:Ellucian.Colleague.Dtos.StudentCohortAssignments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController.PutStudentCohortAssignmentsAsync(System.String,Ellucian.Colleague.Dtos.StudentCohortAssignments)">
            <summary>
            Update (PUT) an existing studentCohortAssignments
            </summary>
            <param name="guid">GUID of the studentCohortAssignments to update</param>
            <param name="studentCohortAssignments">DTO of the updated studentCohortAssignments</param>
            <returns>A studentCohortAssignments object <see cref="T:Ellucian.Colleague.Dtos.StudentCohortAssignments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCohortAssignmentsController.DeleteStudentCohortAssignmentsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentCohortAssignments
            </summary>
            <param name="guid">GUID to desired studentCohortAssignments</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController">
            <summary>
            Provides access to get student parameters and settings.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.#ctor(Ellucian.Colleague.Domain.Student.Repositories.IStudentConfigurationRepository,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Student.Services.IStudentConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            StudentConfigurationController class constructor
            </summary>
            <param name="configurationRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentConfigurationRepository">IStudentConfigurationRepository</see></param>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="configurationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentConfigurationService">IStudentConfigurationService</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetGraduationConfigurationAsync">
            <summary>
            Retrieves the configuration information needed to render a new graduation application asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.GraduationConfiguration">Graduation Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. NotFound if the required setup is not complete or available.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>GraduationConfiguration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetGraduationConfiguration2Async">
            <summary>
            Retrieves the configuration information needed to render a new graduation application asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.GraduationConfiguration2">Graduation Configuration2</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. NotFound if the required setup is not complete or available.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>GraduationConfiguration is cached for  24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetStudentRequestConfigurationAsync">
            <summary>
            Retrieves the configuration information needed to render a new transcript request or enrollment verification in self-service asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.StudentRequestConfiguration">StudentRequestConfiguration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Student request configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetFacultyGradingConfigurationAsync">
            <summary>
            Retrieves the configuration information needed for faculty grading asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.FacultyGradingConfiguration">Faculty Grading Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. NotFound if the required setup is not complete or available.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Faculty grading configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetFacultyGradingConfiguration2Async">
            <summary>
            Retrieves the configuration information needed for faculty grading asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.FacultyGradingConfiguration2">Faculty Grading Configuration2</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. NotFound if the required setup is not complete or available.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Faculty grading configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetStudentProfileConfigurationAsync">
            <summary>
            Retrieves the student profile configuration information needed for student profile asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.StudentProfileConfiguration">Student Profile Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. NotFound if the required setup is not complete or available.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>StudentProfileConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetCourseCatalogConfigurationAsync">
            <summary>
            Retrieves the configuration information needed for course catalog searches asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.CourseCatalogConfiguration">Course Catalog Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Course Catalog Configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetCourseCatalogConfiguration2Async">
            <summary>
            Retrieves the configuration information needed for course catalog searches asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.CourseCatalogConfiguration2">Course Catalog Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Course Catalog Configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetRegistrationConfigurationAsync">
            <summary>
            Retrieves the configuration information needed for registration processing asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationConfiguration">Registration Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Registration configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetInstantEnrollmentConfigurationAsync">
            <summary>
            Retrieves the configuration information needed for Colleague Self-Service instant enrollment
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentConfiguration"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Instant enrollment configuration information is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetCourseCatalogConfiguration3Async">
            <summary>
            Retrieves the configuration information needed for course catalog searches asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.CourseCatalogConfiguration3">Course Catalog Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Course Catalog Configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetCourseCatalogConfiguration4Async">
            <summary>
            Retrieves the configuration information needed for course catalog searches asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.CourseCatalogConfiguration4">Course Catalog Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Course Catalog Configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetMyProgressConfigurationAsync">
            <summary>
            Retrieves the configuration information needed for My Progress evaluation asynchronously.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.MyProgressConfiguration">MyProgress Configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. NotFound if the required setup is not complete or available.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>My Progress Configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetSectionCensusConfigurationAsync">
            <summary>
            Retrieves the section census configuration information needed for Colleague Self-Service
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.SectionCensusConfiguration"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Section census configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetSectionCensusConfiguration2Async">
            <summary>
            Retrieves the section census configuration2 information needed for Colleague Self-Service
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.SectionCensusConfiguration2"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Section census configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetCourseDelimiterConfigurationAsync">
            <summary>
            Returns course delimiter defined on CDEF
            </summary>
            <returns>The Course Delimiter string</returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetAcademicRecordConfigurationAsync">
            <summary>
            Retrieves the academic record configuration information needed for Colleague Self-Service
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicRecordConfiguration"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>AcademicRecordConfiguration is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetSectionAvailabilityInformationConfigurationAsync">
            <summary>
            Retrieves course section availability information configuration
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.SectionAvailabilityInformationConfiguration">Section availability information configuration</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can retrieve section availability information configuration data.</accessComments>
            <note>Section availability information configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetFacultyAttendanceConfigurationAsync">
            <summary>
            Retrieves the configuration information needed for Colleague Self-Service faculty attendance
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.FacultyAttendanceConfiguration"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.</exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Faculty attendance configuration data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentConfigurationController.GetSectionDeadlineDatesConfigurationAsync">
            <summary>
            Retrieves the section deadline dates configuration information
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.SectionDeadlineDatesConfiguration"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>Section Deadline Dates Configuration data is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController">
            <summary>
            Provides access to StudentCourseTransfer
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentCourseTransferService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentCourseTransferController class.
            </summary>
            <param name="StudentCourseTransferService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentCourseTransferService">IStudentCourseTransferService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.GetStudentCourseTransfersAsync(Ellucian.Web.Http.Models.Paging,System.Boolean)">
            <summary>
            Return all StudentCourseTransfer
            </summary>
            <returns>List of StudentCourseTransfer <see cref="T:Ellucian.Colleague.Dtos.StudentCourseTransfer"/> objects representing matching StudentCourseTransfer</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.GetStudentCourseTransferByGuidAsync(System.String)">
            <summary>
            Read (GET) a StudentCourseTransfer using a GUID
            </summary>
            <param name="guid">GUID to desired StudentCourseTransfer</param>
            <returns>A StudentCourseTransfer object <see cref="T:Ellucian.Colleague.Dtos.StudentCourseTransfer"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.GetStudentCourseTransfers2Async(Ellucian.Web.Http.Models.Paging,System.Boolean)">
            <summary>
            Return all StudentCourseTransfer
            </summary>
            <returns>List of StudentCourseTransfer <see cref="T:Ellucian.Colleague.Dtos.StudentCourseTransfer"/> objects representing matching StudentCourseTransfer</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.GetStudentCourseTransfer2ByGuidAsync(System.String)">
            <summary>
            Read (GET) a StudentCourseTransfer using a GUID
            </summary>
            <param name="guid">GUID to desired StudentCourseTransfer</param>
            <returns>A StudentCourseTransfer object <see cref="T:Ellucian.Colleague.Dtos.StudentCourseTransfer"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.PostStudentCourseTransferAsync(Ellucian.Colleague.Dtos.StudentCourseTransfer)">
            <summary>
            Create (POST) a new StudentCourseTransfer
            </summary>
            <param name="StudentCourseTransfer">DTO of the new StudentCourseTransfer</param>
            <returns>A StudentCourseTransfer object <see cref="T:Ellucian.Colleague.Dtos.StudentCourseTransfer"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.PutStudentCourseTransferAsync(System.String,Ellucian.Colleague.Dtos.StudentCourseTransfer)">
            <summary>
            Update (PUT) an existing StudentCourseTransfer
            </summary>
            <param name="guid">GUID of the StudentCourseTransfer to update</param>
            <param name="StudentCourseTransfer">DTO of the updated StudentCourseTransfer</param>
            <returns>A StudentCourseTransfer object <see cref="T:Ellucian.Colleague.Dtos.StudentCourseTransfer"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentCourseTransferController.DeleteStudentCourseTransferAsync(System.String)">
            <summary>
            Delete (DELETE) a StudentCourseTransfer
            </summary>
            <param name="guid">GUID to desired StudentCourseTransfer</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController">
            <summary>
            Provides access to get and update Degree Plans.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentDegreePlanService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            StudentDegreePlansController class constructor
            </summary>
            <param name="studentDegreePlanService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentDegreePlanService">IStudentDegreePlanService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.GetAsync(System.Int32)">
            <summary>
            Retrieves a student's degree plan using the unique DegreePlanId.
            </summary>
            <param name="id">id of the degree plan</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">Degree Plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            A person may retrieve their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Get2Async(System.Int32)">
            <summary>
            Retrieves a student's degree plan using the unique DegreePlanId.
            </summary>
            <remarks>This is the current version.</remarks>
            <param name="id">id of the degree plan</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan2">Degree Plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            A person may retrieve their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Get3Async(System.Int32)">
            <summary>
            Retrieves a student's degree plan using the unique DegreePlanId.
            </summary>
            <remarks>This is the current version.</remarks>
            <param name="id">id of the degree plan</param>
            <returns>The student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3">Degree Plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            A person may retrieve their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Get4Async(System.Int32,System.Boolean)">
            <summary>
            Retrieves a student's degree plan using the unique DegreePlanId, which will be validated by default. A validated degree plan checks the student's academic history and planned coursework as follows:
            - Planned courses are evaluated against course-based rules from any requisites on the student's planned courses and sections
            - Academic credits are evaluated against credit-based rules from any requisites on the student's planned courses and sections
            - Planned courses and academic credits are evaluated for any session and yearly cycle restrictions by location
            - All student coursework is evaluated for unsatisfied prerequisites
            - All student coursework is evaluated for missing corequisites
            - All student planned courses are evaluated to determine if they are planned in an academic term where they are not offered
            - All student coursework is evaluated for scheduling conflicts
            - All student planned courses are evaluated for invalid credits based on course and/or section minimum/maximum/increment credit values
            When retrieving a degree plan, you can choose to skip the aforementioned degree plan validation using the 'validate' parameter
            </summary>
            <remarks>This is not the current version.</remarks>
            <param name="id">id of the degree plan</param>
            <param name="validate">Defaults to true. If false, returns a non-validated degree plan (use when planned course warnings are not needed to improve performance)</param>
            <returns>A combined dto <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlanAcademicHistory">DegreePlanAcademicHistory</see> which includes the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3">Degree Plan</see> and <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory2">AcademicHistory</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            A person may retrieve their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Get5Async(System.Int32,System.Boolean)">
            <summary>
            Retrieves a student's degree plan using the unique DegreePlanId, which will be validated by default. A validated degree plan checks the student's academic history and planned coursework as follows:
            - Planned courses are evaluated against course-based rules from any requisites on the student's planned courses and sections
            - Academic credits are evaluated against credit-based rules from any requisites on the student's planned courses and sections
            - Planned courses and academic credits are evaluated for any session and yearly cycle restrictions by location
            - All student coursework is evaluated for unsatisfied prerequisites
            - All student coursework is evaluated for missing corequisites
            - All student planned courses are evaluated to determine if they are planned in an academic term where they are not offered
            - All student coursework is evaluated for scheduling conflicts
            - All student planned courses are evaluated for invalid credits based on course and/or section minimum/maximum/increment credit values
            When retrieving a degree plan, you can choose to skip the aforementioned degree plan validation using the 'validate' parameter 
            </summary>
            <remarks>This is the current version.</remarks>
            <param name="id">id of the degree plan</param>
            <param name="validate">Defaults to true. If false, returns a non-validated degree plan (use when planned course warnings are not needed to improve performance)</param>
            <returns>A combined dto <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlanAcademicHistory2">DegreePlanAcademicHistory2</see> which includes the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">Degree Plan</see> and <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory3">AcademicHistory</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            A person may retrieve their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Get6Async(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieves a student's degree plan using the unique DegreePlanId, which will be validated by default. A validated degree plan checks the student's academic history and planned coursework as follows:
            a. Planned courses are evaluated against course-based rules from any requisites on the student's planned courses and sections
            b. Academic credits are evaluated against credit-based rules from any requisites on the student's planned courses and sections
            c. Planned courses and academic credits are evaluated for any session and yearly cycle restrictions by location
            d. All student coursework is evaluated for unsatisfied prerequisites
            e. All student coursework is evaluated for missing corequisites
            f. All student planned courses are evaluated to determine if they are planned in an academic term where they are not offered
            g. All student coursework is evaluated for scheduling conflicts
            h. All student planned courses are evaluated for invalid credits based on course and/or section minimum/maximum/increment credit values
            When retrieving a degree plan, you can choose to skip the aforementioned degree plan validation using the 'validate' parameter
            </summary>
            <remarks>This is the current version.</remarks>
            <param name="id">id of the degree plan</param>
            <param name="validate">Defaults to true. If false, returns a non-validated degree plan (use when planned course warnings are not needed to improve performance)</param>
            <param name="includeDrops">Defaults to false, If true, includes dropped academic credits in the degree plan</param>
            <param name="byPassGradeRestrictionsCache">This is to retrieve grade restrictions from cache or make a CTX call to get real time restrictions. Default is true which means cache will be bypassed hence CTX will be called</param>
            <returns>A combined dto <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlanAcademicHistory3">DegreePlanAcademicHistory3</see> which includes the student's <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">Degree Plan</see> and <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory3">AcademicHistory</see>
            Header X-Content-Restricted with a value of "partial" will be returned if the caller is a student retrieving their own plan. It indicates that any RestrictedNotes are removed from the 
            return object.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            A person may retrieve their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            When the caller is a student retrieving their own plan, header X-Content-Restricted with a value of "partial" will be returned 
            to indicate that any RestrictedNotes are removed from the return object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.PutAsync(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan)">
            <summary>
            Updates an existing degree plan.
            </summary>
            <param name="degreePlan">The degree plan in its entirety</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may make any updates to their own degree plan.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES permission may perform review type of updates on a degree plan for one of their assigned advisees.
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE permission may perform review type of updates on a degree plan for any advisee.
            Review types of updates include approving or denying planned courses, setting protection level for planned courses, adding advising notes, marking a plan as review complete or advisment complete.
            
            In addition to the above review actions, an advisor with any of the following permission codes may make any change to the plan for either their assigned advisees or any
            advisee based on the specific permission code:
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            Additional update actions include adding, moving or removing planned courses and adding or removing terms from the plan. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Put2Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan2)">
            <summary>
            Updates an existing degree plan.
            </summary>
            <param name="degreePlan">The degree plan in its entirety (DegreePlan2)</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan2">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may update their own degree plan but are not allowed to move or remove a protected planned course item.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES permission may perform review type of updates on a degree plan for one of their assigned advisees.
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE permission may perform review type of updates on a degree plan for any advisee.
            Review types of updates include approving or denying planned courses, setting protection level for planned courses, adding advising notes, marking a plan as review complete or advisment complete.
            
            In addition to the above review actions, an advisor with any of the following permission codes may make any change to the plan for either their assigned advisees or any
            advisee based on the specific permission code:
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            Additional update actions include adding, moving or removing planned courses and adding or removing terms from the plan. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Put3Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3)">
            <summary>
            Updates an existing degree plan.
            </summary>
            <param name="degreePlan">The degree plan in its entirety (DegreePlan3)</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may update their own degree plan but are not allowed to move or remove a protected planned course item.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES permission may perform review type of updates on a degree plan for one of their assigned advisees.
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE permission may perform review type of updates on a degree plan for any advisee.
            Review types of updates include approving or denying planned courses, setting protection level for planned courses, adding advising notes, marking a plan as review complete or advisment complete.
            
            In addition to the above review actions, an advisor with any of the following permission codes may make any change to the plan for either their assigned advisees or any
            advisee based on the specific permission code:
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            Additional update actions include adding, moving or removing planned courses and adding or removing terms from the plan. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Put4Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4)">
            <summary>
            Updates an existing degree plan.
            </summary>
            <param name="degreePlan">The degree plan in its entirety (DegreePlan3)</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may update their own degree plan but are not allowed to move or remove a protected planned course item.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES permission may perform review type of updates on a degree plan for one of their assigned advisees.
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE permission may perform review type of updates on a degree plan for any advisee.
            Review types of updates include approving or denying planned courses, setting protection level for planned courses, adding advising notes, marking a plan as review complete or advisment complete.
            
            In addition to the above review actions, an advisor with any of the following permission codes may make any change to the plan for either their assigned advisees or any
            advisee based on the specific permission code:
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            Additional update actions include adding, moving or removing planned courses and adding or removing terms from the plan. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Put5Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4)">
            <summary>
            Updates an existing degree plan.
            </summary>
            <param name="degreePlan">The degree plan in its entirety (DegreePlan4)</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlanAcademicHistory2">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may update their own degree plan but are not allowed to move or remove a protected planned course item.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES permission may perform review type of updates on a degree plan for one of their assigned advisees.
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE permission may perform review type of updates on a degree plan for any advisee.
            Review types of updates include approving or denying planned courses, setting protection level for planned courses, adding advising notes, marking a plan as review complete or advisment complete.
            
            In addition to the above review actions, an advisor with any of the following permission codes may make any change to the plan for either their assigned advisees or any
            advisee based on the specific permission code:
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            Additional update actions include adding, moving or removing planned courses and adding or removing terms from the plan. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Put6Async(Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4,System.Boolean)">
            <summary>
            Updates an existing degree plan.
            </summary>
            <param name="degreePlan">The degree plan in its entirety (DegreePlan4)</param>
            <param name="byPassGradeRestrictionsCache">The degree plan in its entirety (DegreePlan4)</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlanAcademicHistory3">degree plan</see> Header X-Content-Restricted with a value of "partial" will be returned if the caller is a student
            updating their own plan. It indicates that any RestrictedNotes are removed from the return object.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if version number of passed degree plan object does not match the version in the database, indicating that an update has occurred on the degree plan by another user and this action has not been saved.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may update their own degree plan but are not allowed to move or remove a protected planned course item.
            
            An authenticated user (advisor) with REVIEW.ASSIGNED.ADVISEES permission may perform review type of updates on a degree plan for one of their assigned advisees.
            An authenticated user (advisor) with REVIEW.ANY.ADVISEE permission may perform review type of updates on a degree plan for any advisee.
            Review types of updates include approving or denying planned courses, setting protection level for planned courses, adding advising notes, marking a plan as review complete or advisment complete.
            
            In addition to the above review actions, an advisor with any of the following permission codes may make any change to the plan for either their assigned advisees or any
            advisee based on the specific permission code:
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            Additional update actions include adding, moving or removing planned courses and adding or removing terms from the plan. 
            
            When the caller is a student updating their own plan, header X-Content-Restricted with a value of "partial" will be returned 
            to indicate that any RestrictedNotes are removed from the return object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.PostAsync(System.String)">
            <summary>
            Creates a new degree plan for the specified student. The plan will be created with any applicable terms based on 
            the Default on Plan attribute of the terms and the student's anticipated completion date.
            </summary>
            <remarks>In MVC4 RC the [FromBody] attribute is required on the studentId parameter. Without this
            the parameter is always mapped as null and the call will fail since by default, simple types line
            strings are pulled from the Uri and not the body.</remarks>
            <param name="studentId">The ID of the student for whom to create a new degree plan</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create a degree plan for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if a degree plan already exists for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            A person may create their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Note: Advisor view only permissions are included because when accessing an advisee for the first time, even to view it, it must exist.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Post2Async(System.String)">
            <summary>
            Creates a new degree plan for the specified student.
            </summary>
            <remarks>This is the current version. In MVC4 RC the [FromBody] attribute is required on the studentId parameter. Without this
            the parameter is always mapped as null and the call will fail since by default, simple types line
            strings are pulled from the Uri and not the body.</remarks>
            <param name="studentId">The ID of the student for whom to create a new degree plan</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create a degree plan for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if a degree plan already exists for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            A person may create their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Note: Advisor view only permissions are included because when accessing an advisee for the first time, even to view it, it must exist.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Post3Async(System.String)">
            <summary>
            Creates a new degree plan for the specified student.
            </summary>
            <remarks>This is the current version. In MVC4 RC the [FromBody] attribute is required on the studentId parameter. Without this
            the parameter is always mapped as null and the call will fail since by default, simple types line
            strings are pulled from the Uri and not the body.</remarks>
            <param name="studentId">The ID of the student for whom to create a new degree plan</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan">degree plan</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create a degree plan for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if a degree plan already exists for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            A person may create their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Note: Advisor view only permissions are included because when accessing an advisee for the first time, even to view it, it must exist.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Post4Async(System.String)">
            <summary>
            Creates a new degree plan for the specified student.
            </summary>
            <remarks>This is the current version. In MVC4 RC the [FromBody] attribute is required on the studentId parameter. Without this
            the parameter is always mapped as null and the call will fail since by default, simple types line
            strings are pulled from the Uri and not the body.</remarks>
            <param name="studentId">The ID of the student for whom to create a new degree plan</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan3">degree plan</see> and the <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory2">student's AcademicHistory</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create a degree plan for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if a degree plan already exists for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            A person may create their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Note: Advisor view only permissions are included because when accessing an advisee for the first time, even to view it, it must exist.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Post5Async(System.String)">
            <summary>
            Creates a new degree plan for the specified student.
            </summary>
            <remarks>This is the current version. In MVC4 RC the [FromBody] attribute is required on the studentId parameter. Without this
            the parameter is always mapped as null and the call will fail since by default, simple types line
            strings are pulled from the Uri and not the body.</remarks>
            <param name="studentId">The ID of the student for whom to create a new degree plan</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">degree plan</see> and the <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory3">student's AcademicHistory</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create a degree plan for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if a degree plan already exists for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            A person may create their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Note: Advisor view only permissions are included because when accessing an advisee for the first time, even to view it, it must exist.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.Post6Async(System.String)">
            <summary>
            Creates a new degree plan for the specified student. Depending on your institution's Self-Service registration parameters, the plan may be created with any applicable terms based on 
            the Default on Plan attribute of the terms and the student's anticipated completion date.
            </summary>
            <remarks>This is the current version. In MVC4 RC the [FromBody] attribute is required on the studentId parameter. Without this
            the parameter is always mapped as null and the call will fail since by default, simple types line
            strings are pulled from the Uri and not the body.</remarks>
            <param name="studentId">The ID of the student for whom to create a new degree plan</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.DegreePlans.DegreePlan4">degree plan</see> and the <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory3">student's AcademicHistory</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to create a degree plan for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Conflict returned if a degree plan already exists for this student</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if invalid student id or student locked or any other creation problem.</exception>
            <accessComments>
            A person may create their own degree plan.
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may create the degree plan for any advisee
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            
            Note: Advisor view only permissions are included because when accessing an advisee for the first time, even to view it, it must exist.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.PutRegistrationAsync(System.Int32,System.String)">
            <summary>
            Given a degree plan and a term, submit a registration request.
            Any sections selected on the plan should be submitted to registration
            </summary>
            <param name="degreePlanId">The degree plan, which contains the sections the student has planned and now wishes to register for </param>
            <param name="termId">The term for which the student is registering</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationMessage">registration messages</see> returned from the registration system.
            </returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if either the degreePlanId or termId argument is not specified</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the student's degree plan</exception>
            <accessComments>
            A person may perform registration actions (register, drop, waitlist, etc) for themselves.  
            An advisor with ALL.ACCESS.ANY.ADVISEE may perform registration actions for any student.
            An advisor with ALL.ACCESS.ASSIGNED.ADVISEES may perform registration actions for one of their assigned advisees.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.PutRegistration2Async(System.Int32,System.String)">
            <summary>
            Given a degree plan and a term, submit a registration request.
            Any sections selected on the plan should be submitted to registration
            </summary>
            <param name="degreePlanId">The degree plan, which contains the sections the student has planned and now wishes to register for </param>
            <param name="termId">The term for which the student is registering</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationResponse">response</see> returned from the registration system.
            </returns>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if either the degreePlanId or termId argument is not specified</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the student's degree plan</exception>
            <accessComments>
            A person may perform registration actions (register, drop, waitlist, etc) for themselves.  
            An advisor with ALL.ACCESS.ANY.ADVISEE may perform registration actions for any student.
            An advisor with ALL.ACCESS.ASSIGNED.ADVISEES may perform registration actions for one of their assigned advisees.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.PutSectionRegistrationAsync(System.Int32,System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Student.SectionRegistration})">
            <summary>
            Takes registration action (add drop waitlist) on specified course sections.
            </summary>
            <param name="degreePlanId">Id of the degree plan for which section registration actions are being taken</param>
            <param name="sectionRegistrations">List of <see cref="T:Ellucian.Colleague.Dtos.Student.SectionRegistration">section registration actions</see> to take</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationMessage">registration messages</see> from the registration process indicating success or failure</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if either the degreePlanId argument or the sectionRegistration information is not specified</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may perform registration actions (register, drop, waitlist, etc) for themselves.  
            An advisor with ALL.ACCESS.ANY.ADVISEE may perform registration actions for any student.
            An advisor with ALL.ACCESS.ASSIGNED.ADVISEES may perform registration actions for one of their assigned advisees.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentDegreePlansController.PutSectionRegistration2Async(System.Int32,System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Student.SectionRegistration})">
            <summary>
            Takes registration action (add drop waitlist) on specified course sections.
            </summary>
            <param name="degreePlanId">Id of the degree plan for which section registration actions are being taken</param>
            <param name="sectionRegistrations">List of <see cref="T:Ellucian.Colleague.Dtos.Student.SectionRegistration">section registration actions</see> to take</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationResponse">response</see> returned from the registration system.</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if either the degreePlanId argument or the sectionRegistration information is not specified</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to update the degree plan</exception>
            <accessComments>
            A person may perform registration actions (register, drop, waitlist, etc) for themselves.  
            An advisor with ALL.ACCESS.ANY.ADVISEE may perform registration actions for any student.
            An advisor with ALL.ACCESS.ASSIGNED.ADVISEES may perform registration actions for one of their assigned advisees.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController">
            <summary>
            Provides access to StudentFinancialAidAcademicProgressStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentFinancialAidAcademicProgressStatusesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentFinancialAidAcademicProgressStatusesController class.
            </summary>
            <param name="studentFinancialAidAcademicProgressStatusesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentFinancialAidAcademicProgressStatusesService">IStudentFinancialAidAcademicProgressStatusesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController.GetStudentFinancialAidAcademicProgressStatusesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentFinancialAidAcademicProgressStatuses
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>        
            <param name="criteria">StudentFinancialAidAcademicProgressStatuses search criteria in JSON format.</param>  
            <returns>List of StudentFinancialAidAcademicProgressStatuses <see cref="T:Ellucian.Colleague.Dtos.StudentFinancialAidAcademicProgressStatuses"/> objects representing matching studentFinancialAidAcademicProgressStatuses</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController.GetStudentFinancialAidAcademicProgressStatusesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentFinancialAidAcademicProgressStatuses using a GUID
            </summary>
            <param name="guid">GUID to desired studentFinancialAidAcademicProgressStatuses</param>
            <returns>A studentFinancialAidAcademicProgressStatuses object <see cref="T:Ellucian.Colleague.Dtos.StudentFinancialAidAcademicProgressStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController.PostStudentFinancialAidAcademicProgressStatusesAsync(Ellucian.Colleague.Dtos.StudentFinancialAidAcademicProgressStatuses)">
            <summary>
            Create (POST) a new studentFinancialAidAcademicProgressStatuses
            </summary>
            <param name="studentFinancialAidAcademicProgressStatuses">DTO of the new studentFinancialAidAcademicProgressStatuses</param>
            <returns>A studentFinancialAidAcademicProgressStatuses object <see cref="T:Ellucian.Colleague.Dtos.StudentFinancialAidAcademicProgressStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController.PutStudentFinancialAidAcademicProgressStatusesAsync(System.String,Ellucian.Colleague.Dtos.StudentFinancialAidAcademicProgressStatuses)">
            <summary>
            Update (PUT) an existing studentFinancialAidAcademicProgressStatuses
            </summary>
            <param name="guid">GUID of the studentFinancialAidAcademicProgressStatuses to update</param>
            <param name="studentFinancialAidAcademicProgressStatuses">DTO of the updated studentFinancialAidAcademicProgressStatuses</param>
            <returns>A studentFinancialAidAcademicProgressStatuses object <see cref="T:Ellucian.Colleague.Dtos.StudentFinancialAidAcademicProgressStatuses"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAcademicProgressStatusesController.DeleteStudentFinancialAidAcademicProgressStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentFinancialAidAcademicProgressStatuses
            </summary>
            <param name="guid">GUID to desired studentFinancialAidAcademicProgressStatuses</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController">
            <summary>
            Provides access to FinancialAidApplications
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentFinancialAidApplicationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FinancialAidApplicationsController class.
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>   
            <param name="studentFinancialAidApplicationService">StudentFinancialAidApplicationService</param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController.GetAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all financialAidApplications
            </summary>
            <returns>List of FinancialAidApplications <see cref="T:Ellucian.Colleague.Dtos.FinancialAidApplication"/> objects representing matching financialAidApplications</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController.GetByIdAsync(System.String)">
            <summary>
            Read (GET) a financialAidApplications using a GUID
            </summary>
            <param name="id">GUID to desired financialAidApplications</param>
            <returns>A financialAidApplications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidApplication"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController.CreateAsync(Ellucian.Colleague.Dtos.FinancialAidApplication)">
            <summary>
            Create (POST) a new financialAidApplications
            </summary>
            <param name="financialAidApplications">DTO of the new financialAidApplications</param>
            <returns>A financialAidApplications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidApplication"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidApplication)">
            <summary>
            Update (PUT) an existing financialAidApplications
            </summary>
            <param name="id">GUID of the financialAidApplications to update</param>
            <param name="financialAidApplications">DTO of the updated financialAidApplications</param>
            <returns>A financialAidApplications object <see cref="T:Ellucian.Colleague.Dtos.FinancialAidApplication"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidApplicationsController.DeleteAsync(System.String)">
            <summary>
            Delete (DELETE) a financialAidApplications
            </summary>
            <param name="id">GUID to desired financialAidApplications</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController">
            <summary>
            The controller for student financial aid awards for the Ellucian Data Model.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentFinancialAidAwardService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Web.Adapters.IAdapterRegistry)">
            <summary>
            This constructor initializes the StudentFinancialAidAwardController object
            </summary>
            <param name="studentFinancialAidAwardService">student financial aid awards service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
            <param name="adapterRegistry"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetByIdAsync(System.String)">
            <summary>
            Retrieves a specified student financial aid award for the data model version 7
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the non-restricted version using student-financial-aid-awards.
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <returns>A StudentFinancialAidAward DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetById2Async(System.String)">
            <summary>
            Retrieves a specified student financial aid award for the data model version 11.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the non-restricted version using student-financial-aid-awards.
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <returns>A StudentFinancialAidAward DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Retrieves all student financial aid awards for the data model version 7
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the non-restricted version using student-financial-aid-awards.
            </summary>
            <returns>A Collection of StudentFinancialAidAwards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.Get2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student financial aid awards for the data model version 11.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the non-restricted version using student-financial-aid-awards.
            </summary>
            <returns>A Collection of StudentFinancialAidAwards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.Get3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student financial aid awards for the data model version 11.1.0.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the non-restricted version using student-financial-aid-awards.
            </summary>
            <returns>A Collection of StudentFinancialAidAwards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetRestrictedByIdAsync(System.String)">
            <summary>
            Retrieves a specified student financial aid award for the data model version 7
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the restricted version using restricted-student-financial-aid-awards.
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <returns>A StudentFinancialAidAward DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetRestrictedById2Async(System.String)">
            <summary>
            Retrieves a specified student financial aid award for the data model version 11.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the restricted version using restricted-student-financial-aid-awards.
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <returns>A StudentFinancialAidAward DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetRestrictedAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Retrieves all student financial aid awards for the data model version 7
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the restricted version using restricted-student-financial-aid-awards.
            </summary>
            <returns>A Collection of StudentFinancialAidAwards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetRestricted2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student financial aid awards for the data model version 11.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the restricted version using restricted-student-financial-aid-awards.
            </summary>
            <returns>A Collection of StudentFinancialAidAwards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetRestricted3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student financial aid awards for the data model version 11.1.0.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the restricted version using restricted-student-financial-aid-awards.
            </summary>
            <returns>A Collection of StudentFinancialAidAwards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.StudentFinancialAidAward2)">
            <summary>
            Update a single student financial aid award for the data model version 7 or 11
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <param name="studentFinancialAidAwardDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentFinancialAidAward</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.CreateAsync(Ellucian.Colleague.Dtos.StudentFinancialAidAward2)">
            <summary>
            Create a single student financial aid award for the data model version 7 or 11
            </summary>
            <param name="studentFinancialAidAwardDto">Student Financial Aid Award DTO from Body of request</param>
            <returns>A single StudentFinancialAidAward</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.DeleteAsync(System.String)">
            <summary>
            Delete a single student financial aid award for the data model version 6
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidAwardsController.GetAnticipatedFAByIdAsync(System.String)">
            <summary>
            Retrieves a specified student financial aid award for the data model version 11.
            There is a restricted and a non-restricted view of financial aid awards.  This
            is the non-restricted version using student-financial-aid-awards.
            </summary>
            <param name="id">The requested student financial aid award GUID</param>
            <returns>A StudentFinancialAidAward DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController">
            <summary>
            Provides access to StudentFinancialAidNeedSummaries
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentFinancialAidNeedSummaryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentFinancialAidNeedSummariesController class.
            </summary>
            <param name="StudentFinancialAidNeedSummaryService">StudentFinancialAidNeedSummaryService</param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController.GetStudentFinancialAidNeedSummariesAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all StudentFinancialAidNeedSummaries
            </summary>
            <returns>List of StudentFinancialAidNeedSummaries</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController.GetStudentFinancialAidNeedSummariesByGuidAsync(System.String)">
            <summary>
            Read (GET) a StudentFinancialAidNeedSummaries using a GUID
            </summary>
            <param name="id">GUID to desired StudentFinancialAidNeedSummaries</param>
            <returns>A single StudentFinancialAidNeedSummaries object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController.CreateAsync(Ellucian.Colleague.Dtos.StudentFinancialAidNeedSummary)">
            <summary>
            Create (POST) a new StudentFinancialAidNeedSummaries
            </summary>
            <param name="StudentFinancialAidNeedSummaries">DTO of the new StudentFinancialAidNeedSummaries</param>
            <returns>A single StudentFinancialAidNeedSummaries object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.StudentFinancialAidNeedSummary)">
            <summary>
            Update (PUT) an existing StudentFinancialAidNeedSummaries
            </summary>
            <param name="id">GUID of the StudentFinancialAidNeedSummaries to update</param>
            <param name="StudentFinancialAidNeedSummaries">DTO of the updated StudentFinancialAidNeedSummarys</param>
            <returns>A single StudentFinancialAidNeedSummaries object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidNeedSummariesController.DeleteAsync(System.String)">
            <summary>
            Delete (DELETE) a StudentFinancialAidNeedSummaries
            </summary>
            <param name="id">GUID to desired StudentFinancialAidNeedSummaries</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController">
            <summary>
            Exposes FinancialAidOffice and FinancialAidConfiguration Data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentFinancialAidOfficeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor for FinancialAidOfficesController
            </summary>
            <param name="adapterRegistry">AdapterRegistry</param>
            <param name="financialAidOfficeService">FinancialAidOfficeService</param>
            <param name="logger">Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController.GetEedmFinancialAidOfficesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all financial aid offices.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All FinancialAidOffice objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController.GetFinancialAidOfficeByGuidAsync(System.String)">
            <summary>
            Retrieves an Financial Aid Offices by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.FinancialAidOffice">FinancialAidOffice</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController.PostFinancialAidOfficeAsync(Ellucian.Colleague.Dtos.FinancialAidOffice)">
            <summary>
            Creates a Financial Aid Office.
            </summary>
            <param name="financialAidOffice"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidOffice">FinancialAidOffice</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.FinancialAidOffice">FinancialAidOffice</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController.PutFinancialAidOfficeAsync(System.String,Ellucian.Colleague.Dtos.FinancialAidOffice)">
            <summary>
            Updates a Financial Aid Office.
            </summary>
            <param name="guid">Id of the Financial Aid Office to update</param>
            <param name="financialAidOffice"><see cref="T:Ellucian.Colleague.Dtos.FinancialAidOffice">FinancialAidOffice</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.FinancialAidOffice">FinancialAidOffice</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentFinancialAidOfficesController.DeleteFinancialAidOfficeAsync(System.String)">
            <summary>
            Deletes a Financial Aid Office.
            </summary>
            <param name="guid">ID of the Financial Aid Office to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController">
            <summary>
            Provides access to StudentGradePointAverages
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentGradePointAveragesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentGradePointAveragesController class.
            </summary>
            <param name="studentGradePointAveragesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentGradePointAveragesService">IStudentGradePointAveragesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController.GetStudentGradePointAveragesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentGradePointAverages
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <param name="gradeDate"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController.GetStudentGradePointAveragesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentGradePointAverages using a GUID
            </summary>
            <param name="guid">GUID to desired studentGradePointAverages</param>
            <returns>A studentGradePointAverages object <see cref="T:Ellucian.Colleague.Dtos.StudentGradePointAverages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController.PostStudentGradePointAveragesAsync(Ellucian.Colleague.Dtos.StudentGradePointAverages)">
            <summary>
            Create (POST) a new studentGradePointAverages
            </summary>
            <param name="studentGradePointAverages">DTO of the new studentGradePointAverages</param>
            <returns>A studentGradePointAverages object <see cref="T:Ellucian.Colleague.Dtos.StudentGradePointAverages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController.PutStudentGradePointAveragesAsync(System.String,Ellucian.Colleague.Dtos.StudentGradePointAverages)">
            <summary>
            Update (PUT) an existing studentGradePointAverages
            </summary>
            <param name="guid">GUID of the studentGradePointAverages to update</param>
            <param name="studentGradePointAverages">DTO of the updated studentGradePointAverages</param>
            <returns>A studentGradePointAverages object <see cref="T:Ellucian.Colleague.Dtos.StudentGradePointAverages"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentGradePointAveragesController.DeleteStudentGradePointAveragesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentGradePointAverages
            </summary>
            <param name="guid">GUID to desired studentGradePointAverages</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController">
            <summary>
            Provides access to StudentMealPlans
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentMealPlansService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentMealPlansController class.
            </summary>
            <param name="studentMealPlansService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentMealPlansService">IStudentMealPlansService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.GetStudentMealPlansAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentMealPlans
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            /// <param name="criteria">mealplan  search criteria in JSON format</param>
            <returns>List of StudentMealPlans <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans"/> objects representing matching studentMealPlans</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.GetStudentMealPlans2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentMealPlans
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            /// <param name="criteria">mealplan  search criteria in JSON format</param>
            <returns>List of StudentMealPlans <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans2"/> objects representing matching studentMealPlans</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.GetStudentMealPlansByGuid2Async(System.String)">
            <summary>
            Read (GET) a studentMealPlans using a GUID
            </summary>
            <param name="guid">GUID to desired studentMealPlans</param>
            <returns>A studentMealPlans object <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.PutStudentMealPlans2Async(System.String,Ellucian.Colleague.Dtos.StudentMealPlans2)">
            <summary>
            Update (PUT) an existing studentMealPlans
            </summary>
            <param name="guid">GUID of the studentMealPlans to update</param>
            <param name="studentMealPlans2">DTO of the updated studentMealPlans</param>
            <returns>A studentMealPlans object <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.PostStudentMealPlans2Async(Ellucian.Colleague.Dtos.StudentMealPlans2)">
            <summary>
            Create (POST) a new studentMealPlans
            </summary>
            <param name="studentMealPlans2">DTO of the new studentMealPlans</param>
            <returns>A studentMealPlans object <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.GetStudentMealPlansByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentMealPlans using a GUID
            </summary>
            <param name="guid">GUID to desired studentMealPlans</param>
            <returns>A studentMealPlans object <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.PostStudentMealPlansAsync(Ellucian.Colleague.Dtos.StudentMealPlans)">
            <summary>
            Create (POST) a new studentMealPlans
            </summary>
            <param name="studentMealPlans">DTO of the new studentMealPlans</param>
            <returns>A studentMealPlans object <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans2"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.PutStudentMealPlansAsync(System.String,Ellucian.Colleague.Dtos.StudentMealPlans)">
            <summary>
            Update (PUT) an existing studentMealPlans
            </summary>
            <param name="guid">GUID of the studentMealPlans to update</param>
            <param name="studentMealPlans">DTO of the updated studentMealPlans</param>
            <returns>A studentMealPlans object <see cref="T:Ellucian.Colleague.Dtos.StudentMealPlans"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentMealPlansController.DeleteStudentMealPlansAsync(System.String)">
            <summary>
            Delete (DELETE) a studentMealPlans
            </summary>
            <param name="guid">GUID to desired studentMealPlans</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController">
            <summary>
            The controller for student payments for the Ellucian Data Model.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentPaymentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            This constructor initializes the StudentPaymentController object
            </summary>
            <param name="studentPaymentService">student payments service object</param>
            <param name="logger">Logger object</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.GetByIdAsync(System.String)">
            <summary>
            Retrieves a specified student payment for the data model version 6
            </summary>
            <param name="id">The requested student payment GUID</param>
            <returns>A StudentPayment DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.GetAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves all student payments for the data model version 6
            </summary>
            <returns>A Collection of StudentPayments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.UpdateAsync(System.String,Ellucian.Colleague.Dtos.StudentPayment)">
            <summary>
            Update a single student payment for the data model version 6
            </summary>
            <param name="id">The requested student payment GUID</param>
            <param name="studentPaymentDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentPayment</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.CreateAsync(Ellucian.Colleague.Dtos.StudentPayment)">
            <summary>
            Create a single student payment for the data model version 6
            </summary>
            <param name="studentPaymentDto">General Ledger DTO from Body of request</param>
            <returns>A single StudentPayment</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.ValidateStudentPayments(Ellucian.Colleague.Dtos.StudentPayment)">
            <summary>
            Helper method to validate Student Payments.
            </summary>
            <param name="studentPayment">student payment DTO object of type <see cref="T:Ellucian.Colleague.Dtos.StudentPayment"/></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.GetByIdAsync2(System.String)">
            <summary>
            Retrieves a specified student payment for the data model version 6
            </summary>
            <param name="id">The requested student payment GUID</param>
            <returns>A StudentPayment DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.GetAsync2(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student payments for the data model version 11
            </summary>
            <returns>A Collection of StudentPayments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.CreateAsync2(Ellucian.Colleague.Dtos.StudentPayment2)">
            <summary>
            Create a single student payment 
            </summary>
            <param name="studentPaymentDto">StudentPayment2 DTO from Body of request</param>
            <returns>A single StudentPayment</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.ValidateStudentPayments2(Ellucian.Colleague.Dtos.StudentPayment2)">
            <summary>
            Helper method to validate Student Payments.
            </summary>
            <param name="studentPayment">student payment DTO object of type <see cref="T:Ellucian.Colleague.Dtos.StudentPayment2"/></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.GetByIdAsync3(System.String)">
            <summary>
            Retrieves a specified student payment for the data model version 6
            </summary>
            <param name="id">The requested student payment GUID</param>
            <returns>A StudentPayment DTO</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.GetAsync3(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Retrieves all student payments for the data model version 11
            </summary>
            <returns>A Collection of StudentPayments</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.CreateAsync3(Ellucian.Colleague.Dtos.StudentPayment3)">
            <summary>
            Create a single student payment 
            </summary>
            <param name="studentPaymentDto">StudentPayment2 DTO from Body of request</param>
            <returns>A single StudentPayment</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.ValidateStudentPayments3(Ellucian.Colleague.Dtos.StudentPayment3)">
            <summary>
            Helper method to validate Student Payments.
            </summary>
            <param name="studentPayment">student payment DTO object of type <see cref="T:Ellucian.Colleague.Dtos.StudentPayment3"/></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPaymentsController.DeleteAsync(System.String)">
            <summary>
            Delete a single student payment for the data model version 6
            </summary>
            <param name="id">The requested student payment GUID</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionReasonsController">
            <summary>
            Provides access to Petition Statuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionReasonsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            StudentPetitionReasonsController constructor
            </summary>
            <param name="adapterRegistry">adapterRegistry</param>
            <param name="studentReferenceDataRepository">studentReferenceDataRepository</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionReasonsController.GetAsync">
            <summary>
            Get a list of all Student Petition Reasons
            </summary>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentPetitionReason">StudentPetitionReason</see> codes and descriptions</returns>
            <note>StudentPetitionReason is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController">
            <summary>
            Provide access to faculty Consent and student petition data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ISectionPermissionService,Ellucian.Colleague.Coordination.Student.Services.IStudentPetitionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            constructor
            </summary>
            <param name="service"></param>
            <param name="studentPetitionService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController.PostStudentPetitionAsync(Ellucian.Colleague.Dtos.Student.StudentPetition)">
            <summary>
            Creates a new Student Petition.
            </summary>
            <param name="studentPetition">StudentPetition dto object</param>
            <returns>
            If successful, returns the newly created Student Petition in an http response with resource locator information. 
            If failure, returns the exception information. If failure due to existing Student Petition found for the given student and section,
            also returns resource locator to use to retrieve the existing item.
            </returns>
            <accessComments>
            User must have correct permission code, depending on petition type:
            1.A faculty member assigned to the section can add student petition with any of the following permission codes
            CREATE.STUDENT.PETITION
            CREATE.FACULTY.CONSENT
            2.A departmental oversight member assigned to the section can add student petition with any of the following permission codes
            CREATE.SECTION.STUDENT.PETITION
            CREATE.SECTION.FACULTY.CONSENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController.PutStudentPetitionAsync(Ellucian.Colleague.Dtos.Student.StudentPetition)">
            <summary>
            Update Student Petition
            </summary>
            <param name="studentPetition">StudentPetition dto object</param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to update student petitions.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>
            If successful, returns the updated Student Petition in an http response with resource locator information. 
            If failure, returns the exception information. 
            </returns>
            <accessComments>
            User must have correct permission code, depending on petition type:
            1.A faculty member assigned to the section can update student petition with any of the following permission codes
            CREATE.STUDENT.PETITION
            CREATE.FACULTY.CONSENT
            2.A departmental oversight member assigned to the section can update student petition with any of the following permission codes
            CREATE.SECTION.STUDENT.PETITION
            CREATE.SECTION.FACULTY.CONSENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController.GetAsync(System.String,System.String,Ellucian.Colleague.Dtos.Student.StudentPetitionType)">
            <summary>
            Returns the requested student petition based on the student petition Id, section Id, and type.
            The user making this request must be an instructor of the section for which the petition is being requested or it will generate a permission exception.
            </summary>
            <param name="studentPetitionId">Id of the student Petition (Required)</param>
            <param name="sectionId">Id of the section for which the petition is requested. (Required)</param>
            <param name="type">Type of student petition desired since same ID can yield either type. If not provided it will default to a petition of type StudentPetition.</param>
            <returns>Student Petition object</returns>
            <accessComments>
            1.User must be faculty in specified section to get data.
            2.A departmental oversight member assigned to the section may retrieve student petition with any of the following permission codes
            VIEW.SECTION.STUDENT.PETITIONS
            CREATE.SECTION.STUDENT.PETITION
            VIEW.SECTION.FACULTY.CONSENTS
            CREATE.SECTION.FACULTY.CONSENT
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController.GetAsync(System.String)">
            <summary>
            Returns the student petitions and faculty consents.
            </summary>
            <param name="studentId">Id of the student </param>
            <returns>Collection of Student Petition object</returns>
            <accessComments>
            1. A student can access their own data
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentPetitionsController.GetStudentOverloadPetitionsAsync(System.String)">
            <summary>
            Returns the student overload petitions
            </summary>
            <param name="studentId">Id of the student </param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve overload petitions.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentOverloadPetition">StudentOverloadPetition</see> object</returns>
            <accessComments>
            1. A student can access their own data
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentQuickRegistrationController">
            <summary>
            Controller for student Colleague Self-Service Quick Registration operations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentQuickRegistrationController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentQuickRegistrationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentQuickRegistrationController class.
            </summary>
            <param name="studentQuickRegistrationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentQuickRegistrationService">IStudentQuickRegistrationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentQuickRegistrationController.GetStudentQuickRegistrationSectionsAsync(System.String)">
            <summary>
            Retrieves a given student's Colleague Self-Service Quick Registration information for the provided academic term codes. 
            If the Colleague Self-Service Quick Registration workflow is disabled then no quick registration sections will be returned for any academic terms.
            If the Colleague Self-Service Quick Registration workflow is enabled then planned course sections will be returned for any academic terms designated for quick registration. 
            </summary>
            <param name="studentId">ID of the student for whom Colleague Self-Service Quick Registration data will be retrieved</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.QuickRegistration.StudentQuickRegistration"/> object</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to access this degree plan</exception>
            <accessComments>
            Authenticated users may retrieve their own Colleague Self-Service Quick Registration information.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController">
            <summary>
            Provides access to student release access data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Domain.Student.Repositories.IStudentConfigurationRepository,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Student.Services.IStudentRecordsReleaseService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentReleaseAccessCodeController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="configurationRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentConfigurationRepository">IStudentConfigurationRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="studentRecordsReleaseService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentRecordsReleaseService">IStudentRecordsReleaseService</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.GetStudentReleaseAccessCodesAsync">
            <summary>
            Any authenticated user can retrieves all student release access codes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentReleaseAccess">student release access codes,descriptions and comments.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.GetStudentRecordsReleaseConfigAsync">
            <summary>
            Retrieves the configuration information needed for Colleague Self-Service student records release.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseConfig"/></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this information.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.GetStudentRecordsReleaseDenyAccessAsync(System.String)">
            <summary>
            Returns the student records release deny access for the specified student. 
            </summary>
            <param name="studentId">The student Id to retrieve student records release deny access</param>
            <returns>The<see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseDenyAccess">StudentRecordsReleaseDenyAccess</see>object</returns>
            <accessComments>Only student can retrieve information for self.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.GetStudentRecordsReleaseInformationAsync(System.String)">
            <summary>
            Returns the student records release information for the specified student. 
            </summary>
            <param name="studentId">The student Id to retrieve student records release information</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">StudentRecordsReleaseInfo</see>object</returns>
            <accessComments>Only student can retrieve information for self.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.DeleteStudentRecordsReleaseInfoAsync(System.String,System.String)">
            <summary>
            Delete a student records release information for a student
            </summary>
            <param name="studentId">Student Id</param>
            <param name="studentReleaseId">Student Release Id</param>
            <returns>The<see cref= "T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo"> StudentRecordsReleaseInfo </see> object after deletion </returns >
            <accessComments>Only student can delete information for self.</accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to delete a student records release information</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other deletion problem.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.PostStudentRecordsReleaseInformationAsync(Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo)">
            <summary>
            Create a new student records release information for student.
            </summary>
            <param name="studentRecordsRelease"><see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">Student Records Release</see> information for creating a new relationship record.</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">student Records Release</see>.</returns>
            <accessComments>
            This action can only be performed by a student and can add the student records release information to self.
            </accessComments>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">Student Records Release</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to add a student records release relationship</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other creation problem.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.DenyStudentRecordsReleaseAccessAsync(Ellucian.Colleague.Dtos.Student.DenyStudentRecordsReleaseAccessInformation)">
            <summary>
            Deny access to student records release information
            </summary>
            <param name="studentRecordsRelDenyAccess"><see cref="T:Ellucian.Colleague.Dtos.Student.DenyStudentRecordsReleaseAccessInformation">Student Records Release Deny Access</see> information for denying access to student records release</param>
            <returns>The Updated<see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">StudentRecordsReleaseInfo</see>object</returns>
            <accessComments>
            This action can only be performed by a student and can deny the student records release access information to self.
            </accessComments>
            <returns>An HttpResponseMessage which includes the updated<see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">student records release information</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to deny the student records release access information</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other denying problem.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRecordsReleaseController.PutStudentRecordsReleaseInformationAsync(Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo)">
             <summary>
             Updates a student records release information for student.
             </summary>
             <param name="studentRecordsRelease"><see cref="T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo">Student Records Release</see> information for updating the relationship record.</param>
            <returns>The Updated<see cref= "T:Ellucian.Colleague.Dtos.Student.StudentRecordsReleaseInfo"> StudentRecordsReleaseInfo </see> object </returns >
             <accessComments>
             This action can only be performed by a student and can update the student records release information to self.
             </accessComments>
             <returns>An HttpResponseMessage which includes true on successful operation</returns>
             <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required to add a student records release relationship</exception>
             <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if any other creation problem.</exception>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController">
            <summary>
            Provides access to StudentRegistrationEligibilities
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentRegistrationEligibilitiesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentRegistrationEligibilitiesController class.
            </summary>
            <param name="studentRegistrationEligibilitiesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentRegistrationEligibilitiesService">IStudentRegistrationEligibilitiesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController.GetStudentRegistrationEligibilitiesAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a single studentRegistrationEligibilities matching required filters of
            Student and Academic Period.
            </summary>
            <returns>StudentRegistrationEligibilities <see cref="T:Ellucian.Colleague.Dtos.StudentRegistrationEligibilities"/> object representing matching studentRegistrationEligibilities</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController.GetStudentRegistrationEligibilitiesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentRegistrationEligibilities using a GUID
            </summary>
            <param name="guid">GUID to desired studentRegistrationEligibilities</param>
            <returns>A studentRegistrationEligibilities object <see cref="T:Ellucian.Colleague.Dtos.StudentRegistrationEligibilities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController.PostStudentRegistrationEligibilitiesAsync(Ellucian.Colleague.Dtos.StudentRegistrationEligibilities)">
            <summary>
            Create (POST) a new studentRegistrationEligibilities
            </summary>
            <param name="studentRegistrationEligibilities">DTO of the new studentRegistrationEligibilities</param>
            <returns>A studentRegistrationEligibilities object <see cref="T:Ellucian.Colleague.Dtos.StudentRegistrationEligibilities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController.PutStudentRegistrationEligibilitiesAsync(System.String,Ellucian.Colleague.Dtos.StudentRegistrationEligibilities)">
            <summary>
            Update (PUT) an existing studentRegistrationEligibilities
            </summary>
            <param name="guid">GUID of the studentRegistrationEligibilities to update</param>
            <param name="studentRegistrationEligibilities">DTO of the updated studentRegistrationEligibilities</param>
            <returns>A studentRegistrationEligibilities object <see cref="T:Ellucian.Colleague.Dtos.StudentRegistrationEligibilities"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRegistrationEligibilitiesController.DeleteStudentRegistrationEligibilitiesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentRegistrationEligibilities
            </summary>
            <param name="guid">GUID to desired studentRegistrationEligibilities</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController">
            <summary>
            Provides access to student request data for transcript requests and enrollment verification requests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentRequestService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initiatlize controller for StudentRequests.
            </summary>
            <param name="requestService">Student request service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentRequestService"/></param>
            <param name="logger">logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger"/>ILogger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.PostStudentTranscriptRequestAsync(Ellucian.Colleague.Dtos.Student.StudentTranscriptRequest)">
            <summary>
            Create a transcript request for a student
            </summary>
            <param name="transcriptRequest">The transcript request being added</param>
            <returns>Added <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTranscriptRequest">transcript request</see></returns>
             <accessComments>
            Only the current user can create its own transcript request.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.PostStudentEnrollmentRequestAsync(Ellucian.Colleague.Dtos.Student.StudentEnrollmentRequest)">
            <summary>
            create enrollment verification requests
            </summary>
            <param name="enrollmentRequest"></param>
            <returns>Added <see cref="T:Ellucian.Colleague.Dtos.Student.StudentEnrollmentRequest"/>Enrollment Request</returns>
            <accessComments>
            Only the current user can create its own enrollment request.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.GetStudentTranscriptRequestAsync(System.String)">
            <summary>
            Get student transcript request
            </summary>
            <param name="requestId"></param>
            <returns> <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTranscriptRequest"/>Student Transcript Request</returns>
             <accessComments>
            Only a student to which request applies can access its own transcript request.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.GetStudentEnrollmentRequestAsync(System.String)">
            <summary>
            Get student enrollment request
            </summary>
            <param name="requestId"></param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentEnrollmentRequest"/> Student Enrollment Request </returns>
            <accessComments>
            Only a student to which request applies can access its own enrollment request.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.GetStudentEnrollmentRequestsAsync(System.String)">
            <summary>
            Get all student enrollment requests for a student
            </summary>
            <param name="studentId">ID of the student</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentEnrollmentRequest">Enrollment Verification Request</see> objects for the student</returns>
             <accessComments>
            Only a student can retrieve its own enrollment requests.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.GetStudentTranscriptRequestsAsync(System.String)">
            <summary>
            Get all student transcript requests for a student
            </summary>
            <param name="studentId">ID of the student</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTranscriptRequest">Transcript Request</see> objects for the student</returns>
             <accessComments>
            Only a student can retrieve its own transcript requests.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentRequestsController.GetStudentRequestFeeAsync(System.String,System.String)">
            <summary>
            Retrieves student request fee and distribution code for a specific student Id and request Id
            </summary>
            <param name="studentId">Id of the student to retrieve</param>
            <param name="requestId">Request Id for the specified student request</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentRequestFee">Student Request Fee</see> object.</returns>
            <accessComments>
            Only a student to which request applies can access its own request fees. 
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController">
            <summary>
            Provides access to StudentResidentialCategories
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentResidentialCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentResidentialCategoriesController class.
            </summary>
            <param name="studentResidentialCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentResidentialCategoriesService">IStudentResidentialCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController.GetStudentResidentialCategoriesAsync">
            <summary>
            Return all studentResidentialCategories
            </summary>
            <returns>List of StudentResidentialCategories <see cref="T:Ellucian.Colleague.Dtos.StudentResidentialCategories"/> objects representing matching studentResidentialCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController.GetStudentResidentialCategoriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentResidentialCategories using a GUID
            </summary>
            <param name="guid">GUID to desired studentResidentialCategories</param>
            <returns>A studentResidentialCategories object <see cref="T:Ellucian.Colleague.Dtos.StudentResidentialCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController.PostStudentResidentialCategoriesAsync(Ellucian.Colleague.Dtos.StudentResidentialCategories)">
            <summary>
            Create (POST) a new studentResidentialCategories
            </summary>
            <param name="studentResidentialCategories">DTO of the new studentResidentialCategories</param>
            <returns>A studentResidentialCategories object <see cref="T:Ellucian.Colleague.Dtos.StudentResidentialCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController.PutStudentResidentialCategoriesAsync(System.String,Ellucian.Colleague.Dtos.StudentResidentialCategories)">
            <summary>
            Update (PUT) an existing studentResidentialCategories
            </summary>
            <param name="guid">GUID of the studentResidentialCategories to update</param>
            <param name="studentResidentialCategories">DTO of the updated studentResidentialCategories</param>
            <returns>A studentResidentialCategories object <see cref="T:Ellucian.Colleague.Dtos.StudentResidentialCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentResidentialCategoriesController.DeleteStudentResidentialCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentResidentialCategories
            </summary>
            <param name="guid">GUID to desired studentResidentialCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentSectionAttendancesController">
            <summary>
            Provides information about student attendances data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionAttendancesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentSectionAttendancesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            constructor
            </summary>
            <param name="studentSectionAttendancesService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionAttendancesController.QueryStudentSectionAttendancesAsync(Ellucian.Colleague.Dtos.Student.StudentSectionAttendancesQueryCriteria)">
             <summary>
             Query by post method used to get student attendance information based on criteria.
             Criteria must have a studentId. SectionIds in criteria is optional.
            This returns student attendances for the given studentId and for the sections provided.
            If no section is provided in criteria then by default attendances for all the sections that belong to given studentId are returned.
             </summary>
             <param name="criteria">Object containing the studentId and then section for which attendances are requested.</param>
             <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentAttendance">Student Attendance</see> DTOs.</returns>
             <accessComments>Only an authenticated user can retrieve its own attendances.</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController">
            <summary>
            Provides access to StudentSectionWaitlists
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentSectionWaitlistsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentSectionWaitlistsController class.
            </summary>
            <param name="studentSectionWaitlistsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentSectionWaitlistsService">IStudentSectionWaitlistsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController.GetStudentSectionWaitlistsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all studentSectionWaitlists
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of StudentSectionWaitlists <see cref="T:Ellucian.Colleague.Dtos.StudentSectionWaitlist"/> objects representing matching studentSectionWaitlists</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController.GetStudentSectionWaitlistsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentSectionWaitlists using a GUID
            </summary>
            <param name="guid">GUID to desired studentSectionWaitlists</param>
            <returns>A studentSectionWaitlists object <see cref="T:Ellucian.Colleague.Dtos.StudentSectionWaitlist"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController.PostStudentSectionWaitlistsAsync(Ellucian.Colleague.Dtos.StudentSectionWaitlist)">
            <summary>
            Create (POST) a new studentSectionWaitlists
            </summary>
            <param name="studentSectionWaitlists">DTO of the new studentSectionWaitlists</param>
            <returns>A studentSectionWaitlists object <see cref="!:Dtos.StudentSectionWaitlists"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController.PutStudentSectionWaitlistsAsync(System.String,Ellucian.Colleague.Dtos.StudentSectionWaitlist)">
            <summary>
            Update (PUT) an existing studentSectionWaitlists
            </summary>
            <param name="guid">GUID of the studentSectionWaitlists to update</param>
            <param name="studentSectionWaitlists">DTO of the updated studentSectionWaitlists</param>
            <returns>A studentSectionWaitlists object <see cref="!:Dtos.StudentSectionWaitlists"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentSectionWaitlistsController.DeleteStudentSectionWaitlistsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentSectionWaitlists
            </summary>
            <param name="guid">GUID to desired studentSectionWaitlists</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController">
            <summary>
            Provides access to StudentTagAssignments
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentTagAssignmentsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController.GetStudentTagAssignmentsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all student-tag-assignments
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.StudentTagAssignments">StudentTagAssignments</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController.GetStudentTagAssignmentsByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing student-tag-assignments
            </summary>
            <param name="guid">GUID of the student-tag-assignments to get</param>
            <returns>A studentTagAssignments object <see cref="T:Ellucian.Colleague.Dtos.StudentTagAssignments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController.PostStudentTagAssignmentsAsync(Ellucian.Colleague.Dtos.StudentTagAssignments)">
            <summary>
            Create (POST) a new studentTagAssignments
            </summary>
            <param name="studentTagAssignments">DTO of the new studentTagAssignments</param>
            <returns>A studentTagAssignments object <see cref="T:Ellucian.Colleague.Dtos.StudentTagAssignments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController.PutStudentTagAssignmentsAsync(System.String,Ellucian.Colleague.Dtos.StudentTagAssignments)">
            <summary>
            Update (PUT) an existing studentTagAssignments
            </summary>
            <param name="guid">GUID of the studentTagAssignments to update</param>
            <param name="studentTagAssignments">DTO of the updated studentTagAssignments</param>
            <returns>A studentTagAssignments object <see cref="T:Ellucian.Colleague.Dtos.StudentTagAssignments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagAssignmentsController.DeleteStudentTagAssignmentsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentTagAssignments
            </summary>
            <param name="guid">GUID to desired studentTagAssignments</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController">
            <summary>
            Provides access to StudentTags
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentTagsController class.
            </summary>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController.GetStudentTagsAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all student-tags
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTag">StudentTags</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController.GetStudentTagByGuidAsync(System.String)">
            <summary>
            Retrieve (GET) an existing student-tags
            </summary>
            <param name="guid">GUID of the student-tags to get</param>
            <returns>A StudentTags object <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTag"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController.PostStudentTagAsync(Ellucian.Colleague.Dtos.Student.StudentTag)">
            <summary>
            Create (POST) a new StudentTags
            </summary>
            <param name="StudentTag">DTO of the new StudentTags</param>
            <returns>A StudentTag object <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTag"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController.PutStudentTagAsync(System.String,Ellucian.Colleague.Dtos.Student.StudentTag)">
            <summary>
            Update (PUT) an existing StudentTags
            </summary>
            <param name="guid">GUID of the StudentTags to update</param>
            <param name="StudentTag">DTO of the updated StudentTag</param>
            <returns>A StudentTag object <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTag"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTagsController.DeleteStudentTagAsync(System.String)">
            <summary>
            Delete (DELETE) a StudentTags
            </summary>
            <param name="guid">GUID to desired StudentTag</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController">
            <summary>
            This is the controller for tax form pdf.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Student.Services.IStudentTaxFormPdfService,Ellucian.Colleague.Coordination.Base.Services.ITaxFormConsentService,Ellucian.Colleague.Coordination.Base.Services.IConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the Tax Form pdf controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController.Get1098TaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1098 tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1098.</param>
            <param name="recordId">The record ID where the 1098 pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.1098 for the student.
            Requires permission VIEW.1098 for someone who currently has permission to proxy for the student requested.
            Requires permission VIEW.STUDENT.1098 for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController.GetPdfTemplatePath(Ellucian.Colleague.Domain.Student.Entities.Form1098PdfData)">
            <summary>
            Get the appropriate tax form template. 
            Updated in 2023 to use FastReport (.frx) instead of Microsoft RDLC Report Designer (.rdlc) and 
            keep only tax years up to 2016.
            </summary>
            <param name="pdfData"></param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">Cannot find a templae for the year.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController.GetT2202aTaxFormPdf2Async(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the T2202a tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the T2202a.</param>
            <param name="recordId">The record ID where the T2202a pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.T2202A for the student.
            Requires permission VIEW.T2202A for someone who currently has permission to proxy for the student requested.
            Requires permission VIEW.STUDENT.T2202A for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController.Get1098TaxFormPdf(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the 1098 tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the 1098.</param>
            <param name="recordId">The record ID where the 1098 pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.1098 for the student.
            Requires permission VIEW.1098 for someone who currently has permission to proxy for the student requested.
            Requires permission VIEW.STUDENT.1098 for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormPdfsController.GetT2202aTaxFormPdf(System.String,System.String)">
            <summary>
            Returns the data to be printed on the pdf for the T2202a tax form.
            </summary>
            <param name="personId">ID of the person assigned to and requesting the T2202a.</param>
            <param name="recordId">The record ID where the T2202a pdf data is stored</param>
            <accessComments>
            Requires permission VIEW.T2202A for the student.
            Requires permission VIEW.T2202A for someone who currently has permission to proxy for the student requested.
            Requires permission VIEW.STUDENT.T2202A for admin view.
            The tax form record requested must belong to the person ID requested.
            </accessComments>
            <returns>An HttpResponseMessage containing a byte array representing a PDF.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormStatementsController">
            <summary>
            This is the controller for the type of Student Tax Form Statements.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormStatementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Student.Services.IStudentTaxFormStatementService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initialize the Student Tax Form Statement controller.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormStatementsController.Get10982Async(System.String)">
            <summary>
            Returns a set of 1098 tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1098 tax form statements</returns>
            <accessComments>
            In order to access 1098 statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewStudent1098
            2. Have the View1098 permission, and be requesting their own data
            3. Be acting as a Person Proxy for the person whose data they are requesting
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormStatementsController.GetT2202a2Async(System.String)">
            <summary>
            Returns a set of T2202A tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of T2202A tax form statements</returns>
            <accessComments>
            In order to access T2202A statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewStudentT2202A
            2. Have the ViewT2202A permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormStatementsController.Get1098Async(System.String)">
            <summary>
            Returns a set of 1098 tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of 1098 tax form statements</returns>
            <accessComments>
            In order to access 1098 statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewStudent1098
            2. Have the View1098 permission, and be requesting their own data
            3. Be acting as a Person Proxy for the person whose data they are requesting
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTaxFormStatementsController.GetT2202aAsync(System.String)">
            <summary>
            Returns a set of T2202A tax form statements for the specified person.
            </summary>
            <param name="personId">Person ID</param>
            <returns>Set of T2202A tax form statements</returns>
            <accessComments>
            In order to access T2202A statement data, the user must meet one of the following conditions:
            1. Have the admin permission, ViewStudentT2202A
            2. Have the ViewT2202A permission, and be requesting their own data
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController">
            <summary>
            Provides access to StudentTranscriptGrades
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentTranscriptGradesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentTranscriptGradesController class.
            </summary>
            <param name="studentTranscriptGradesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentTranscriptGradesService">IStudentTranscriptGradesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.GetStudentTranscriptGradesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentTranscriptGrades
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">filter criteria</param>
            <returns>List of StudentTranscriptGrades <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGrades"/> objects representing matching studentTranscriptGrades</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.GetStudentTranscriptGradesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentTranscriptGrades using a GUID
            </summary>
            <param name="guid">GUID to desired studentTranscriptGrades</param>
            <returns>A studentTranscriptGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.PostStudentTranscriptGradesAsync(Ellucian.Colleague.Dtos.StudentTranscriptGrades)">
            <summary>
            Create (POST) a new studentTranscriptGrades
            </summary>
            <param name="studentTranscriptGrades">DTO of the new studentTranscriptGrades</param>
            <returns>A studentTranscriptGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.PutStudentTranscriptGradesAsync(System.String,Ellucian.Colleague.Dtos.StudentTranscriptGrades)">
            <summary>
            Update (PUT) an existing studentTranscriptGrades
            </summary>
            <param name="guid">GUID of the studentTranscriptGrades to update</param>
            <param name="studentTranscriptGrades">DTO of the updated studentTranscriptGrades</param>
            <returns>A studentTranscriptGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.DeleteStudentTranscriptGradesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentTranscriptGrades
            </summary>
            <param name="guid">GUID to desired studentTranscriptGrades</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.GetStudentTranscriptGradesAdjustmentsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all studentTranscriptGradesAdjustments
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of StudentTranscriptGradesAdjustments <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesAdjustments"/> objects representing matching studentTranscriptGrades</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.GetStudentTranscriptGradesAdjustmentsByGuidAsync(System.String)">
            <summary>
            Get a studentTranscriptGradesAdjustments
            </summary>
            <param name="guid">GUID to desired studentTranscriptGradesAdjustments</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.PutStudentTranscriptGradesAdjustmentsAsync(System.String,Ellucian.Colleague.Dtos.StudentTranscriptGradesAdjustments)">
            <summary>
            Update (PUT) an existing StudentTranscriptGradesAdjustments
            </summary>
            <param name="guid">GUID of the studentTranscriptGradesAdjustments to update</param>
            <param name="studentTranscriptGradesAdjustments">DTO of the updated studentTranscriptGradesAdjustments</param>
            <returns>A StudentTranscriptGradesAdjustments object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesAdjustments"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesController.PostStudentTranscriptGradesAdjustmentsAsync(Ellucian.Colleague.Dtos.StudentTranscriptGradesAdjustments)">
            <summary>
            Create (POST) a new studentTranscriptGrades
            </summary>
            <param name="studentTranscriptGradesAdjustments">DTO of the new studentTranscriptGrades</param>
            <returns>A studentTranscriptGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesAdjustments"/> in EEDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesOptionsController">
            <summary>
            Provides access to StudentTranscriptGradesOptions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesOptionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentTranscriptGradesOptionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentTranscriptGradesOptionsController class.
            </summary>
            <param name="StudentTranscriptGradesOptionsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentTranscriptGradesOptionsService">IStudentTranscriptGradesOptionsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesOptionsController.GetStudentTranscriptGradesOptionsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all StudentTranscriptGradesOptions
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="student">filter student</param>
            <returns>List of StudentTranscriptGradesOptions <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesOptions"/> objects representing matching StudentTranscriptGradesOptions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesOptionsController.GetStudentTranscriptGradesOptionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a StudentTranscriptGradesOptions using a GUID
            </summary>
            <param name="guid">GUID to desired StudentTranscriptGradesOptions</param>
            <returns>A StudentTranscriptGradesOptions object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesOptionsController.PostStudentTranscriptGradesOptionsAsync(Ellucian.Colleague.Dtos.StudentTranscriptGradesOptions)">
            <summary>
            Create (POST) a new StudentTranscriptGradesOptions
            </summary>
            <param name="StudentTranscriptGradesOptions">DTO of the new StudentTranscriptGradesOptions</param>
            <returns>A StudentTranscriptGradesOptions object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesOptions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentTranscriptGradesOptionsController.PutStudentTranscriptGradesOptionsAsync(System.String,Ellucian.Colleague.Dtos.StudentTranscriptGradesOptions)">
            <summary>
            Update (PUT) an existing StudentTranscriptGradesOptions
            </summary>
            <param name="guid">GUID of the StudentTranscriptGradesOptions to update</param>
            <param name="StudentTranscriptGradesOptions">DTO of the updated studentTranscriptGrades</param>
            <returns>A StudentTranscriptGradesOptions object <see cref="T:Ellucian.Colleague.Dtos.StudentTranscriptGradesOptions"/> in EEDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController">
            <summary>
            Provides access to StudentUnverifiedGrades
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentUnverifiedGradesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentUnverifiedGradesController class.
            </summary>
            <param name="studentUnverifiedGradesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentUnverifiedGradesService">IStudentUnverifiedGradesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController.GetStudentUnverifiedGradesAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all studentUnverifiedGrades
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <param name="criteria">filter criteria</param>
            <param name="section">filter section</param>
            <returns>List of StudentUnverifiedGrades <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGrades"/> objects representing matching studentUnverifiedGrades</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController.GetStudentUnverifiedGradesByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentUnverifiedGrades using a GUID
            </summary>
            <param name="guid">GUID to desired studentUnverifiedGrades</param>
            <returns>A studentUnverifiedGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController.PostStudentUnverifiedGradesAsync(Ellucian.Colleague.Dtos.StudentUnverifiedGrades)">
            <summary>
            Create (POST) a new studentUnverifiedGrades
            </summary>
            <param name="studentUnverifiedGrades">DTO of the new studentUnverifiedGrades</param>
            <returns>A studentUnverifiedGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController.PutStudentUnverifiedGradesAsync(System.String,Ellucian.Colleague.Dtos.StudentUnverifiedGrades)">
            <summary>
            Update (PUT) an existing studentUnverifiedGrades
            </summary>
            <param name="guid">GUID of the studentUnverifiedGrades to update</param>
            <param name="studentUnverifiedGrades">DTO of the updated studentUnverifiedGrades</param>
            <returns>A studentUnverifiedGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesController.DeleteStudentUnverifiedGradesAsync(System.String)">
            <summary>
            Delete (DELETE) a studentUnverifiedGrades
            </summary>
            <param name="guid">GUID to desired studentUnverifiedGrades</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController">
            <summary>
            Provides access to StudentUnverifiedGradesSubmissions
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentUnverifiedGradesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentUnverifiedGradesSubmissionsController class.
            </summary>
            <param name="studentUnverifiedGradesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentUnverifiedGradesService">IStudentUnverifiedGradesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController.GetStudentUnverifiedGradesSubmissionsAsync(Ellucian.Web.Http.Models.Paging)">
            <summary>
            Return all studentUnverifiedGradesSubmissions
            </summary>
            <param name="page">API paging info for used to Offset and limit the amount of data being returned.</param>
            <returns>List of StudentUnverifiedGradesSubmissions <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGradesSubmissions"/> objects representing matching studentUnverifiedGradesSubmissions</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController.GetStudentUnverifiedGradesSubmissionsByGuidAsync(System.String)">
            <summary>
            Read (GET) a studentUnverifiedGradesSubmissions using a GUID
            </summary>
            <param name="guid">GUID to desired studentUnverifiedGradesSubmissions</param>
            <returns>A studentUnverifiedGradesSubmissions object <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGradesSubmissions"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController.PutStudentUnverifiedGradesSubmissionsAsync(System.String,Ellucian.Colleague.Dtos.StudentUnverifiedGradesSubmissions)">
            <summary>
            Update (PUT) an existing StudentUnverifiedGradesSubmissions
            </summary>
            <param name="guid">GUID of the studentUnverifiedGradesSubmissions to update</param>
            <param name="studentUnverifiedGradesSubmissions">DTO of the updated studentUnverifiedGradesSubmissions</param>
            <returns>A StudentUnverifiedGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGrades"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController.PostStudentUnverifiedGradesSubmissionsAsync(Ellucian.Colleague.Dtos.StudentUnverifiedGradesSubmissions)">
            <summary>
            Create (POST) a new studentUnverifiedGradesSubmissions
            </summary>
            <param name="studentUnverifiedGradesSubmissions">DTO of the new studentUnverifiedGradesSubmissions</param>
            <returns>A studentUnverifiedGrades object <see cref="T:Ellucian.Colleague.Dtos.StudentUnverifiedGrades"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentUnverifiedGradesSubmissionsController.DeleteStudentUnverifiedGradesSubmissionsAsync(System.String)">
            <summary>
            Delete (DELETE) a studentUnverifiedGradesSubmissions
            </summary>
            <param name="guid">GUID to desired studentUnverifiedGradesSubmissions</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentWaiverReasonsController">
            <summary>
            Provides access to Waiver Reasons
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiverReasonsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            WaiverReasonsController constructor
            </summary>
            <param name="adapterRegistry">adapterRegistry</param>
            <param name="studentReferenceDataRepository">studentReferenceDataRepository</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiverReasonsController.GetAsync">
            <summary>
            Get a list of all Waiver Reasons
            </summary>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentWaiverReason">WaiverReason</see> codes and descriptions</returns>
            <note>StudentWaiverReason is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController">
            <summary>
            Provides access to Waiver data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentWaiverService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Provides access to Student Waivers.
            </summary>
            <param name="waiverService"></param>
            <param name="actionContextAccessor"></param>
            <param name="logger"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController.GetStudentWaiverAsync(System.String)">
            <summary>
            This route is obsolete as of API 1.21. 
            Returns the requested section waiver
            </summary>
            <param name="waiverId">Id of waiver to retrieve</param>
            <returns>Student Waiver</returns>
            <accessComments>
            Only an assigned faculty for the section to which waiver applies can retrieve the waiver.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController.GetStudentWaiver2Async(System.String)">
            <summary>
            Returns the requested section waiver
            </summary>
            <param name="id">Id of waiver to retrieve</param>
            <returns>Student Waiver</returns>
            <accessComments>
            Only an assigned faculty for the section to which waiver applies can retrieve the waiver.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController.GetSectionStudentWaiversAsync(System.String)">
            <summary>
            Returns the waivers found for the specified section. Requestor must have proper permissions to access
            the waivers for a section.
            </summary>
            <param name="sectionId">The section Id to use to retrieve waivers</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentWaiver">Waiver</see> objects</returns>
            <accessComments>
            1. Only an assigned faculty for the section can retrieve student waivers.
            2. A departmental oversight member assigned to the section may retrieve student waivers with any of the following permission codes
            VIEW.SECTION.PREREQUISITE.WAIVER
            CREATE.SECTION.REQUISITE.WAIVER
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController.PostStudentWaiverAsync(Ellucian.Colleague.Dtos.Student.StudentWaiver)">
            <summary>
            Creates a new Section Requisite waiver.
            </summary>
            <param name="waiver">Section requisite waiver dto object</param>
            <returns>
            If successful, returns the newly created section requisite waiver in an http response with resource locator information. 
            If failure, returns the exception information. If failure due to existing waiver found for the given student and section,
            also returns resource locator to use to retrieve the existing item.
            </returns>
            <accessComments>
            1. A faculty member assigned to the section with CREATE.PREREQUISITE.WAIVER permission can create a new Section Requisite Waiver.
            2. A departmental oversight member assigned to the section with CREATE.SECTION.REQUISITE.WAIVER permission can create a new Section Requisite Waiver.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.StudentWaiversController.GetStudentWaiversAsync(System.String)">
            <summary>
            Returns the waivers found for the specified student. 
            </summary>
            <param name="studentId">The section Id to use to retrieve waivers</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentWaiver">Waiver</see> objects</returns>
            <accessComments>
            1. User must be requesting their own data.
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.Student.YearlyCyclesController">
            <summary>
            Provides access to the yearly cycle data for courses.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.YearlyCyclesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the YearlyCyclesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.Student.YearlyCyclesController.GetAsync">
            <summary>
            Retrieves all Yearly Cycles.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.YearlyCycle">Yearly Cycle</see> codes and descriptions.</returns>
            <accessComments>Any authenticated user can retrieve yearly cycles.</accessComments>
            <note>Yearly cycles are cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicHistoryController">
            <summary>
            Provides access to AcademicHistory data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IAcademicHistoryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CoursesController class.
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseService">ICourseService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicHistoryAsync(Ellucian.Colleague.Dtos.Student.AcademicHistoryQueryCriteria)">
            <summary>
            get Academic History from a list of Student Ids
            </summary>
            <param name="criteria">Contains selection criteria:
            Student Ids: List of IDs.
            BestFit: (Optional) If true, non-term credit is fitted into terms based on dates.
            Filter: (Optional) If true, then filter to only active credits.
            Term: (Optional) Term filter for academic history</param>
            <returns>AcademicHistory DTO Objects</returns>
            <accessComments>
            A person may only query academic history if they have VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicHistory2Async(Ellucian.Colleague.Dtos.Student.AcademicHistoryQueryCriteria)">
            <summary>
            get Academic History from a list of Student Ids
            </summary>
            <param name="criteria">Contains selection criteria:
            Student Ids: List of IDs.
            BestFit: (Optional) If true, non-term credit is fitted into terms based on dates.
            Filter: (Optional) If true, then filter to only active credits.
            Term: (Optional) Term filter for academic history</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistoryBatch2"/> DTO Objects</returns>
            <accessComments>
            A person may only query academic history if they have VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicHistoryLevelAsync(Ellucian.Colleague.Dtos.Student.AcademicHistoryQueryCriteria)">
            <summary>
            Get Academic History for a specific Academic Level from a list of Student Ids.
            Academic Level is wrapped around Academic History therefore giving a picture
            of only those AcademicCredits which are within the same level.
            </summary>
            <param name="criteria">Contains selection criteria:
            Student Ids: List of IDs.
            BestFit: (Optional) If true, non-term credit is fitted into terms based on dates.
            Filter: (Optional) If true, then filter to only active credits.
            Term: (Optional) Term filter for academic history</param>
            <returns>AcademicHistoryLevel DTO Objects</returns>
            <accessComments>
            A person may only query academic history levels if they have VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicHistoryLevel2Async(Ellucian.Colleague.Dtos.Student.AcademicHistoryQueryCriteria)">
            <summary>
            Get Academic History for a specific Academic Level from a list of Student Ids.
            Academic Level is wrapped around Academic History therefore giving a picture
            of only those AcademicCredits which are within the same level.
            </summary>
            <param name="criteria">Contains selection criteria:
            Student Ids: List of IDs.
            BestFit: (Optional) If true, non-term credit is fitted into terms based on dates.
            Filter: (Optional) If true, then filter to only active credits.
            Term: (Optional) Term filter for academic history</param>
            <returns>AcademicHistoryLevel2 DTO Objects</returns>
            <accessComments>
            A person may only query academic history levels if they have VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicHistoryLevel3Async(Ellucian.Colleague.Dtos.Student.AcademicHistoryQueryCriteria)">
            <summary>
            Get Academic History for a specific Academic Level from a list of Student Ids.
            Academic Level is wrapped around Academic History therefore giving a picture
            of only those AcademicCredits which are within the same level.
            </summary>
            <param name="criteria">Contains selection criteria:
            Student Ids: List of IDs.
            BestFit: (Optional) If true, non-term credit is fitted into terms based on dates.
            Filter: (Optional) If true, then filter to only active credits.
            Term: (Optional) Term filter for academic history</param>
            <returns>AcademicHistoryLevel2 DTO Objects</returns>
            <accessComments>
            A person may only query academic history levels if they have VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryPilotAcademicHistoryLevelAsync(Ellucian.Colleague.Dtos.Student.AcademicHistoryQueryCriteria)">
            <summary>
            Get Academic History for a specific Academic Level from a list of Student Ids.
            Academic Level is wrapped around Academic History therefore giving a picture
            of only those AcademicCredits which are within the same level.
            </summary>
            <param name="criteria">Contains selection criteria:
            Student Ids: List of IDs.
            BestFit: (Optional) If true, non-term credit is fitted into terms based on dates.
            Filter: (Optional) If true, then filter to only active credits.
            Term: (Optional) Term filter for academic history.
            IncludeStudentSections: (Optional) If true, credits are returned as student sections.</param>
            <returns>PilotAcademicHistoryLevel DTO Objects</returns>
            <accessComments>Users with the VIEW.STUDENT.INFORMATION permission can query students' academic history levels.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.GetInvalidStudentEnrollmentAsync(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Student.StudentEnrollment})">
            <summary>
            Validate existing student Enrollment by passing in a list of keys for each student and returning
            a list of keys which are either invalid.
            </summary>
            <param name="enrollmentKeys">Student Enrollment key structure and return structure<see cref="T:Ellucian.Colleague.Dtos.Student.StudentEnrollment">StudentEnrollment</see></param>
            <returns>List of StudentEnrollment DTOs</returns>
            <accessComments>User with permission of VIEW.STUDENT.INFORMATION can validate existing Student Enrollment.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicCreditsAsync(Ellucian.Colleague.Dtos.Student.AcademicCreditQueryCriteria)">
            <summary>
            Get Academic Credits for a list of sections
            </summary>
            <param name="criteria">Contains selection criteria:
            Section Ids: List of section IDs. Must include at least 1.
            CreditStatuses: (Optional) If no statuses are specified all statuses will be included.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicCredit2">Academic Credit</see> DTO objects. </returns>
            <accessComments>
            The faculty assigned to a section may query academic credits for their sections. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicCredits2Async(Ellucian.Colleague.Dtos.Student.AcademicCreditQueryCriteria)">
            <summary>
            Get Academic Credits for a list of sections
            </summary>
            <param name="criteria">Contains selection criteria:
            Section Ids: List of section IDs. Must include at least 1.
            CreditStatuses: (Optional) If no statuses are specified all statuses will be included.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicCredit3">Academic Credit</see> DTO objects. </returns>
            <accessComments>
            The faculty assigned to a section may query academic credits for their sections. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicHistoryController.QueryAcademicCreditsWithInvalidKeysAsync(Ellucian.Colleague.Dtos.Student.AcademicCreditQueryCriteria)">
            <summary>
            Get Academic Credits with Invalid Keys for the list of sections.
            This returns collection of Academic Credits for the given sections and list of Invalid Academic Credit Ids that were not found in a file.
            </summary>
            <remarks>If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database; otherwise, cached data is returned from the repository.</remarks>
            <param name="criteria">Contains selection criteria:
            Section Ids: List of section IDs. Must include at least 1.
            CreditStatuses: (Optional) If no statuses are specified all statuses will be included.</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.AcademicCreditsWithInvalidKeys">Academic Credit with Invalid Keys</see> DTO objects. </returns>
            <accessComments>
            1. The faculty assigned to a section may query academic credits for their sections.
            2. A departmental oversight member assigned to the section may query academic credits for their sections with any of the following permission codes
            VIEW.SECTION.ROSTER
            VIEW.SECTION.GRADING
            CREATE.SECTION.GRADING
            VIEW.SECTION.DROP.ROSTER
            CREATE.SECTION.DROP.STUDENT
            VIEW.SECTION.CENSUS
            CREATE.SECTION.CENSUS
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController">
            <summary>
            Provides access to AcademicPeriodEnrollmentStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AcademicPeriodEnrollmentStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController.GetAcademicPeriodEnrollmentStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Retrieves all AcademicPeriodEnrollmentStatus.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriodEnrollmentStatus">EnrollmentStatus.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController.GetAcademicPeriodEnrollmentStatusByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Retrieves a AcademicPeriodEnrollmentStatus by ID.
            </summary>
            <param name="id">ID to desired AcademicPeriodEnrollmentStatus</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriodEnrollmentStatus">AcademicPeriodEnrollmentStatus</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController.PutAcademicPeriodEnrollmentStatusAsync(System.String,Ellucian.Colleague.Dtos.AcademicPeriodEnrollmentStatus)">
            <summary>
            Updates a AcademicPeriodEnrollmentStatus.
            </summary>
            <param name="id"><see cref="!:id">id</see></param>
            <param name="academicPeriodEnrollmentStatus"><see cref="!:AcademicPeriodEnrollmentStatus">AcademicPeriodEnrollmentStatus</see> to update</param>
            <returns>Newly updated <see cref="!:AcademicPeriodEnrollmentStatus">AcademicPeriodEnrollmentStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController.PostAcademicPeriodEnrollmentStatusAsync(Ellucian.Colleague.Dtos.AcademicPeriodEnrollmentStatus)">
            <summary>
            Creates a AcademicPeriodEnrollmentStatus.
            </summary>
            <param name="academicPeriodEnrollmentStatus"><see cref="!:AcademicPeriodEnrollmentStatus">AcademicPeriodEnrollmentStatus</see> to create</param>
            <returns>Newly created <see cref="!:AcademicPeriodEnrollmentStatus">AcademicPeriodEnrollmentStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodEnrollmentStatusesController.DeleteAcademicPeriodEnrollmentStatusAsync(System.String)">
            <summary>
            Delete (DELETE) an existing AcademicPeriodEnrollmentStatus.
            </summary>
            <param name="id">Id of the AcademicPeriodEnrollmentStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController">
            <summary>
            Provides access to Academic Period data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IAcademicPeriodService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AcademicPeriodsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="academicPeriodService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAcademicPeriodService">IAcademicPeriodService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.GetAcademicPeriods2Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all Academic Periods.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod2">AcademicPeriod</see>objects.</returns>        
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.GetAcademicPeriods3Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all Academic Periods
            including census dates and registration status.
            </summary>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod3">AcademicPeriod</see>objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.GetAcademicPeriods4Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN HEDM v16.0.0</remarks>
            <summary>
            Retrieves all Academic Periods
            including census dates and registration status.
            </summary>
            <param name="criteria"> - JSON formatted selection criteria.  Can contain:</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod4">AcademicPeriod</see>objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.GetAcademicPeriodByGuid2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves an academic period by id.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod2">AcademicPeriod</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.GetAcademicPeriodByGuid3Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves an academic period by id
            including census dates and registration status.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod3">AcademicPeriod</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.GetAcademicPeriodByGuid4Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM v16.0.0</remarks>
            <summary>
            Retrieves an academic period by id
            including census dates and registration status.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod4">AcademicPeriod</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.PostAcademicPeriodAsync(Ellucian.Colleague.Dtos.AcademicPeriod2)">
            <summary>
            Create an academic period
            </summary>
            <param name="academicPeriod">academicPeriod</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod2"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.PutAcademicPeriodAsync(System.String,Ellucian.Colleague.Dtos.AcademicPeriod2)">
            <summary>
            Update an academic period
            </summary>
            <param name="id">desired id for an academic period</param>
            <param name="academicPeriod">academicPeriod</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod2"/> in HEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicPeriodsController.DeleteAcademicPeriodByIdAsync(System.String)">
            <summary>
            Delete (DELETE) an academic period
            </summary>
            <param name="id">id to desired academic period</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.AcademicPeriod2"/> in HEDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicProgramsController">
            <summary>
            Provides access to AcademicProgram data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IAcademicProgramService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AcademicProgramController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="academicProgramService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAcademicProgramService">IAcademicPeriodService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAsync">
            <summary>
            Get all academicPrograms.
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicProgram">AcademicProgram</see> data.</returns>
            <note>AcademicProgram is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAcademicProgramByIdV6Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EeDM</remarks>
            <summary>
            Retrieves an academic program by GUID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAcademicProgramsV6Async">
            <summary>
            Get all academicPrograms for HeDM version 6.
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicProgram">AcademicProgram</see> data.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAcademicProgramById3Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EeDM</remarks>
            <summary>
            Retrieves an academic program by GUID in V10 format.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAcademicPrograms3Async">
            <summary>
            Get all academicPrograms for HeDM version 10.
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicProgram">AcademicProgram</see> data.</returns>        
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAcademicProgramById4Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EeDM</remarks>
            <summary>
            Read (GET) a academicPrograms using a GUID
            </summary>
            <param name="id">GUID to desired academicPrograms</param>
            <returns>A academicPrograms object <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram4"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.GetAcademicPrograms4Async(Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return all academicPrograms
            </summary>
            <returns>List of AcademicPrograms <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram4"/> objects representing matching academicPrograms</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.PostAcademicProgram(Ellucian.Colleague.Dtos.AcademicProgram)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Creates a AcademicProgram.
            </summary>
            <param name="academicProgram"><see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.PutAcademicProgram(System.String,Ellucian.Colleague.Dtos.AcademicProgram)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Updates a Academic Program.
            </summary>
            <param name="id">Id of the Academic Program to update</param>
            <param name="academicProgram"><see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.PostAcademicProgram3(Ellucian.Colleague.Dtos.AcademicProgram3)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Creates a AcademicProgram.
            </summary>
            <param name="academicProgram"><see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicProgram3">AcademicProgram</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.PutAcademicProgram3(System.String,Ellucian.Colleague.Dtos.AcademicProgram3)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Updates a Academic Program.
            </summary>
            <param name="id">Id of the Academic Program to update</param>
            <param name="academicProgram"><see cref="T:Ellucian.Colleague.Dtos.AcademicProgram">AcademicProgram</see> to create</param>
            <returns>Updated <see cref="!:Dtos.AcademicProgra3m">AcademicProgram</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicProgramsController.DeleteAcademicProgram(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete (DELETE) an existing Academic Program
            </summary>
            <param name="id">Id of the Academic Program to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AcademicStandingsController">
            <summary>
            Provides access to Academic Standing Code data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IAcademicStandingsService,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AcademicStandingsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="academicStandingsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAcademicStandingsService">IAcademicStandingsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.GetAsync">
            <summary>
            Gets all of the Academic Standings Codes
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicStanding">AcademicStandings</see></returns>
            <note>AcademicStanding is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.GetAcademicStandingsAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all accounting codes.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All accounting codes objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.GetAcademicStandingByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a accounting code by ID.
            </summary>
            <param name="id">Id of accounting code to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AcademicStanding">accounting code.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.PostAcademicStandingAsync(Ellucian.Colleague.Dtos.AcademicStanding)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a AcademicStanding.
            </summary>
            <param name="academicStanding"><see cref="T:Ellucian.Colleague.Dtos.AcademicStanding">AcademicStanding</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AcademicStanding">AcademicStanding</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.PutAcademicStandingAsync(System.String,Ellucian.Colleague.Dtos.AcademicStanding)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a accounting code.
            </summary>
            <param name="id">Id of the AcademicStanding to update</param>
            <param name="academicStanding"><see cref="T:Ellucian.Colleague.Dtos.AcademicStanding">AcademicStanding</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AcademicStanding">AcademicStanding</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AcademicStandingsController.DeleteAcademicStandingAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing academicStanding
            </summary>
            <param name="id">Id of the academicStanding to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AccountingCodesController">
            <summary>
            Provides access to AccountingCodes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IAccountingCodesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AccountingCodesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="accountingCodesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAccountingCodesService">IAccountingCodesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.GetAccountingCodesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all accounting codes.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All accounting codes objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.GetAccountingCodes2Async(Ellucian.Web.Http.Models.QueryStringFilter)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves all accounting codes.
            </summary>
            <param name="criteria">filters</param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.GetAccountingCodeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a accounting code by ID.
            </summary>
            <param name="id">Id of accounting code to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.AccountingCode">accounting code.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.GetAccountingCodeById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a accounting code2 by ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.PostAccountingCode(Ellucian.Colleague.Dtos.AccountingCode)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Creates a AccountingCode.
            </summary>
            <param name="accountingCode"><see cref="T:Ellucian.Colleague.Dtos.AccountingCode">AccountingCode</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.AccountingCode">AccountingCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.PutAccountingCode(System.String,Ellucian.Colleague.Dtos.AccountingCode)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Updates a accounting code.
            </summary>
            <param name="id">Id of the AccountingCode to update</param>
            <param name="accountingCode"><see cref="T:Ellucian.Colleague.Dtos.AccountingCode">AccountingCode</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.AccountingCode">AccountingCode</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AccountingCodesController.DeleteAccountingCode(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Delete (DELETE) an existing accountingCode
            </summary>
            <param name="id">Id of the accountingCode to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AdmittedStatusesController">
            <summary>
            Provides access to AdmittedStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdmittedStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdmittedStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdmittedStatusesController.GetAsync">
            <summary>
            Retrieves all Admitted Statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.AdmittedStatus">Admitted Status</see> codes and descriptions.</returns>
            <note>AdmittedStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AdvisorTypesController">
            <summary>
            Provides access to Advisor Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.IAdvisorTypesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the AdvisorTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="advisorTypesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdvisorTypesService">IAdvisorTypesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.GetAsync">
            <summary>
            Gets all of the Advisor Types
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.AdvisorType">AdvisorTypes</see></returns>
            <note>AdvisorType is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.GetAdvisorTypesAsync">
            <summary>
            Return all advisorTypes
            </summary>
            <returns>List of AdvisorTypes <see cref="T:Ellucian.Colleague.Dtos.AdvisorTypes"/> objects representing matching advisorTypes</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.GetAdvisorTypesByGuidAsync(System.String)">
            <summary>
            Read (GET) a advisorTypes using a GUID
            </summary>
            <param name="guid">GUID to desired advisorTypes</param>
            <returns>A advisorTypes object <see cref="T:Ellucian.Colleague.Dtos.AdvisorTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.PostAdvisorTypesAsync(Ellucian.Colleague.Dtos.AdvisorTypes)">
            <summary>
            Create (POST) a new advisorTypes
            </summary>
            <param name="advisorTypes">DTO of the new advisorTypes</param>
            <returns>A advisorTypes object <see cref="T:Ellucian.Colleague.Dtos.AdvisorTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.PutAdvisorTypesAsync(System.String,Ellucian.Colleague.Dtos.AdvisorTypes)">
            <summary>
            Update (PUT) an existing advisorTypes
            </summary>
            <param name="guid">GUID of the advisorTypes to update</param>
            <param name="advisorTypes">DTO of the updated advisorTypes</param>
            <returns>A advisorTypes object <see cref="T:Ellucian.Colleague.Dtos.AdvisorTypes"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AdvisorTypesController.DeleteAdvisorTypesAsync(System.String)">
            <summary>
            Delete (DELETE) a advisorTypes
            </summary>
            <param name="guid">GUID to desired advisorTypes</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.AffiliationsController">
            <summary>
            Provides access to Affiliations
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AffiliationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            AdmittedStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.AffiliationsController.GetAsync">
            <summary>
            Retrieves all Affiliations with PilotFlag set to Yes or True.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Affiliation">Affiliation</see> codes and descriptions.</returns>
            <note>Affiliation is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController">
            <summary>
            Provides access to application influence data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationInfluencesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ApplicationInfluencesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="admissionApplicationInfluencesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAdmissionApplicationInfluencesService">IAdmissionApplicationInfluencesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.GetAdmissionApplicationInfluencesAsync">
            <summary>
            Return all admissionApplicationInfluences
            </summary>
            <returns>List of AdmissionApplicationInfluences <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationInfluences"/> objects representing matching admissionApplicationInfluences</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.GetAdmissionApplicationInfluencesByGuidAsync(System.String)">
            <summary>
            Read (GET) a admissionApplicationInfluences using a GUID
            </summary>
            <param name="guid">GUID to desired admissionApplicationInfluences</param>
            <returns>A admissionApplicationInfluences object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationInfluences"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.PostAdmissionApplicationInfluencesAsync(Ellucian.Colleague.Dtos.AdmissionApplicationInfluences)">
            <summary>
            Create (POST) a new admissionApplicationInfluences
            </summary>
            <param name="admissionApplicationInfluences">DTO of the new admissionApplicationInfluences</param>
            <returns>A admissionApplicationInfluences object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationInfluences"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.PutAdmissionApplicationInfluencesAsync(System.String,Ellucian.Colleague.Dtos.AdmissionApplicationInfluences)">
            <summary>
            Update (PUT) an existing admissionApplicationInfluences
            </summary>
            <param name="guid">GUID of the admissionApplicationInfluences to update</param>
            <param name="admissionApplicationInfluences">DTO of the updated admissionApplicationInfluences</param>
            <returns>A admissionApplicationInfluences object <see cref="T:Ellucian.Colleague.Dtos.AdmissionApplicationInfluences"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.DeleteAdmissionApplicationInfluencesAsync(System.String)">
            <summary>
            Delete (DELETE) a admissionApplicationInfluences
            </summary>
            <param name="guid">GUID to desired admissionApplicationInfluences</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationInfluencesController.GetAsync">
            <summary>
            Retrieves all Application Influences.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.ApplicationInfluence">Application Influence</see> codes and descriptions.</returns>
            <note>ApplicationInfluence is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ApplicationStatusCategoriesController">
            <summary>
            Provides access to application status category data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationStatusCategoriesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ApplicationStatusCategoryController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationStatusCategoriesController.GetAsync">
            <summary>
            Retrieves all Application Status Categories.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.ApplicationStatusCategory">Application Status Category</see> codes and descriptions.</returns>
            <note>ApplicationStatusCategory is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ApplicationStatusesController">
            <summary>
            Provides access to ApplicationStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            ApplicationStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ApplicationStatusesController.GetAsync">
            <summary>
            Retrieves all Application Statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.ApplicationStatus">Application Status</see> codes and descriptions.</returns>
            <note>ApplicationStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BookOptionsController">
            <summary>
            Provides access to book option data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BookOptionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the BookOptionsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BookOptionsController.GetAsync">
            <summary>
            Retrieves all Book Options.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.BookOption">Book Option</see> codes and descriptions.</returns>
            <note>Data is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.BooksController">
            <summary>
            Provides access to Book information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BooksController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IBookRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            BooksController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="bookRepository"></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BooksController.GetAsync(System.String)">
            <summary>
            Retrieves information about a specific book.
            </summary>
            <param name="id">Unique system Id of the book</param>
            <returns>Information about a specific <see cref="T:Ellucian.Colleague.Dtos.Student.Book">Book</see></returns>
            <note>Book information is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.BooksController.QueryBooksByPostAsync(Ellucian.Colleague.Dtos.Student.BookQueryCriteria)">
            <summary>
            Accepts a list of book IDs and/or a query string to be used against book titles, authors, and International Standard Book Numbers (ISBN) to post a query against books.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Student.BookQueryCriteria">Query Criteria</see> including the list of Book Ids to use to retrieve books.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Book">Book</see> objects. </returns>
            <note>Book information is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController">
            <summary>
            Provides access to CampusInvolvementRoles data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CampusInvolvementRolesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="campusOrganizationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService">ICampusOrganizationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController.GetCampusInvolvementRolesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all campus involvement roles.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All campus involvement roles objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController.GetCampusInvolvementRoleByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a campus involvement role by ID.
            </summary>
            <param name="id">Id of campus involvement role to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CampusInvolvementRole">campus involvement role.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController.PostCampusInvolvementRoleAsync(Ellucian.Colleague.Dtos.CampusInvolvementRole)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a CampusInvolvementRole.
            </summary>
            <param name="campusInvolvementRole"><see cref="T:Ellucian.Colleague.Dtos.CampusInvolvementRole">CampusInvolvementRole</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CampusInvolvementRole">CampusInvolvementRole</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController.PutCampusInvolvementRoleAsync(System.String,Ellucian.Colleague.Dtos.CampusInvolvementRole)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a accounting code.
            </summary>
            <param name="id">Id of the CampusInvolvementRole to update</param>
            <param name="campusInvolvementRole"><see cref="T:Ellucian.Colleague.Dtos.CampusInvolvementRole">CampusInvolvementRole</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CampusInvolvementRole">CampusInvolvementRole</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementRolesController.DeleteCampusInvolvementRoleAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing campusInvolvementRole
            </summary>
            <param name="id">Id of the campusInvolvementRole to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController">
            <summary>
            Provides access to CampusInvolvement data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CampusInvolvementController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="campusOrganizationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService">ICampusOrganizationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController.GetCampusInvolvementsAsync(Ellucian.Web.Http.Models.Paging)">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Retrieves all campus involvement.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, 
            otherwise cached data is returned.
            </summary>
            <returns>All campus involvement  objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController.GetCampusInvolvementByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Retrieves a campus involvement by ID.
            </summary>
            <param name="id">Id of campus involvement  to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CampusInvolvement">campus involvement.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController.PostCampusInvolvementAsync(Ellucian.Colleague.Dtos.CampusInvolvement)">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Creates a CampusInvolvement.
            </summary>
            <param name="campusInvolvement"><see cref="T:Ellucian.Colleague.Dtos.CampusInvolvement">CampusInvolvement</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CampusInvolvement">CampusInvolvement</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController.PutCampusInvolvementAsync(System.String,Ellucian.Colleague.Dtos.CampusInvolvement)">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Updates a accounting code.
            </summary>
            <param name="id">Id of the CampusInvolvement to update</param>
            <param name="campusInvolvement"><see cref="T:Ellucian.Colleague.Dtos.CampusInvolvement">CampusInvolvement</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CampusInvolvement">CampusInvolvement</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusInvolvementsController.DeleteCampusInvolvementAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN Data Model</remarks>
            <summary>
            Delete (DELETE) an existing campusInvolvement
            </summary>
            <param name="id">Id of the campusInvolvement to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController">
            <summary>
            Provides access to CampusOrganization data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CampusOrganizationController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="campusOrganizationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService">ICampusOrganizationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.GetCampusOrganizations2Async(Ellucian.Colleague.Dtos.Student.CampusOrganizationQueryCriteria)">
            <summary>
            A qapi that retrieves CampusOrganization2 records matching the query criteria.
            <param name="criteria">CampusOrganizationQueryCriteria criteria</param>
            </summary>
            <returns>CampusOrganization2 objects.</returns>
            <remarks>This method is NOT intended for use with ELLUCIAN DATA MODEL and hence doesn't deal with GUIDs</remarks>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.GetCampusOrganizationsAsync">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Retrieves all campus organizations.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All campus organizations objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.GetCampusOrganizationByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Retrieves a campus organization by ID.
            </summary>
            <param name="id">Id of campus organization to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CampusOrganization">campus organization.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.PostCampusOrganizationAsync(Ellucian.Colleague.Dtos.CampusOrganization)">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Creates a CampusOrganization.
            </summary>
            <param name="campusOrganization"><see cref="T:Ellucian.Colleague.Dtos.CampusOrganization">CampusOrganization</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CampusOrganizationType">CampusOrganization</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.PutCampusOrganizationAsync(System.String,Ellucian.Colleague.Dtos.CampusOrganization)">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Updates a campus organization.
            </summary>
            <param name="id">Id of the CampusOrganization to update</param>
            <param name="campusOrganization"><see cref="T:Ellucian.Colleague.Dtos.CampusOrganization">CampusOrganization</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CampusOrganization">CampusOrganization</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationsController.DeleteCampusOrganizationAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN DATA MODEL</remarks>
            <summary>
            Delete (DELETE) an existing campusOrganization
            </summary>
            <param name="id">Id of the campusOrganization to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController">
            <summary>
            Provides access to CampusOrganizationTypes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CampusInvolvementRolesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="campusOrganizationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICampusOrganizationService">ICampusOrganizationService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController.GetCampusOrganizationTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all campus organization types.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All campus organization types objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController.GetCampusOrganizationTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a campus organization type by ID.
            </summary>
            <param name="id">Id of campus organization type to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.CampusOrganizationType">campus organization type.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController.PostCampusOrganizationTypeAsync(Ellucian.Colleague.Dtos.CampusOrganizationType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Creates a CampusOrganizationType.
            </summary>
            <param name="campusOrganizationType"><see cref="T:Ellucian.Colleague.Dtos.CampusOrganizationType">CampusOrganizationType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.CampusOrganizationType">CampusOrganizationType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController.PutCampusOrganizationTypeAsync(System.String,Ellucian.Colleague.Dtos.CampusOrganizationType)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Updates a campus organization type.
            </summary>
            <param name="id">Id of the CampusOrganizationType to update</param>
            <param name="campusOrganizationType"><see cref="T:Ellucian.Colleague.Dtos.CampusOrganizationType">CampusOrganizationType</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.CampusOrganizationType">CampusOrganizationType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CampusOrganizationTypesController.DeleteCampusOrganizationTypeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Delete (DELETE) an existing campusOrganizationType
            </summary>
            <param name="id">Id of the campusOrganizationType to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CareerGoalsController">
            <summary>
            Provides access to career goal data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICareerGoalsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CareerGoalsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="careerGoalsService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICareerGoalsService">ICareerGoalsService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.GetAsync">
            <summary>
            Retrieves all Career Goals.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CareerGoal">Career Goal</see> codes and descriptions.</returns>
            <note>CareerGoal is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.GetCareerGoalsAsync">
            <summary>
            Return all careerGoals
            </summary>
            <returns>List of CareerGoals <see cref="T:Ellucian.Colleague.Dtos.CareerGoals"/> objects representing matching careerGoals</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.GetCareerGoalsByGuidAsync(System.String)">
            <summary>
            Read (GET) a careerGoals using a GUID
            </summary>
            <param name="guid">GUID to desired careerGoals</param>
            <returns>A careerGoals object <see cref="T:Ellucian.Colleague.Dtos.CareerGoals"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.PostCareerGoalsAsync(Ellucian.Colleague.Dtos.CareerGoals)">
            <summary>
            Create (POST) a new careerGoals
            </summary>
            <param name="careerGoals">DTO of the new careerGoals</param>
            <returns>A careerGoals object <see cref="T:Ellucian.Colleague.Dtos.CareerGoals"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.PutCareerGoalsAsync(System.String,Ellucian.Colleague.Dtos.CareerGoals)">
            <summary>
            Update (PUT) an existing careerGoals
            </summary>
            <param name="guid">GUID of the careerGoals to update</param>
            <param name="careerGoals">DTO of the updated careerGoals</param>
            <returns>A careerGoals object <see cref="T:Ellucian.Colleague.Dtos.CareerGoals"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CareerGoalsController.DeleteCareerGoalsAsync(System.String)">
            <summary>
            Delete (DELETE) a careerGoals
            </summary>
            <param name="guid">GUID to desired careerGoals</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CcdsController">
            <summary>
            Provides access to CCD data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CcdsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CcdsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CcdsController.GetAsync">
            <summary>
            Retrieves all Certificates, Credentials, Diplomas (Ccds).
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Ccd">CCD</see> codes and descriptions.</returns>
            <note>Ccd is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ClassLevelsController">
            <summary>
            Provides access to Class Level data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ClassLevelsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ClassLevelsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ClassLevelsController.GetAsync">
            <summary>
            Retrieves all Class Levels.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.ClassLevel">Class Level</see> codes and descriptions.</returns>
            <note>ClassLevel is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CourseLevelsController">
            <summary>
            Provides access to Course Level data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CourseLevelsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.GetAsync">
            <summary>
            Retrieves all Course Levels.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CourseLevel">Course Level</see> codes and descriptions.</returns>
            <note>CourseLevel is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.GetCourseLevels2Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4</remarks>
            <summary>
            Retrieves all course levels.
            </summary>
            <returns>All <see cref="!:CourseLevel2">CourseLevels.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.GetCourseLevelById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4</remarks>
            <summary>
            Retrieves a course level by ID.
            </summary>
            <returns>A <see cref="!:CourseLevel2">CourseLevel.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.PostCourseLevelsAsync(Ellucian.Colleague.Dtos.CourseLevel2)">
            <summary>
            Creates a Course Level.
            </summary>
            <param name="courseLevel"><see cref="!:CourseLevel2">CourseLevel</see> to create</param>
            <returns>Newly created <see cref="!:CourseLevel2">InstructionalMethod</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.PutCourseLevelsAsync(System.String,Ellucian.Colleague.Dtos.CourseLevel2)">
            <summary>
            Updates a Course Level.
            </summary>
            <param name="id">Id of the Course Level to update</param>
            <param name="courseLevel"><see cref="!:CourseLevel2">CourseLevel</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Student.CourseLevel">CourseLevel</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseLevelsController.DeleteCourseLevelsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Course Level.
            </summary>
            <param name="id">Id of the Course Level to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CoursesController">
            <summary>
            Provides access to Course data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICourseService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CoursesController class.
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseService">ICourseService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PostSearchAsync(Ellucian.Colleague.Dtos.Student.CourseSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Performs a search of courses in Colleague that are available for registration. 
            The criteria supplies a keyword, requirement, and various filters which may be used to search and narrow a list of courses.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Student.CourseSearchCriteria">Course search criteria</see></param>
            <param name="pageSize">integer page size</param>
            <param name="pageIndex">integer page index</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.CoursePage">page</see> of courses matching criteria with totals and filter information</returns>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PostSearch2Async(Ellucian.Colleague.Dtos.Student.CourseSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Performs a search of courses in Colleague that are available for registration. 
            The criteria supplies a keyword, requirement, and various filters which may be used to search and narrow a list of courses.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Student.CourseSearchCriteria">Course search criteria</see></param>
            <param name="pageSize">integer page size</param>
            <param name="pageIndex">integer page index</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.CoursePage">page</see> of courses matching criteria with totals and filter information.</returns>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PostInstantEnrollmentCourseSearchAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollmentCourseSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Performs a search of sections that are available for Instant Enrollment only.
            The criteria supplied is keyword and various filters which may be used to search and narrow list of sections.
            </summary>
            <param name="criteria"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
            <accessComments>Any authenticated user can perform search on sections and view Instant Enrollment catalog.</accessComments>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetCourseSectionsAsync(System.String)">
            <summary>
            For each course ID specified, this API will return the sections for this course that are offered in terms "open for registration". 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned from the repository.
            </summary>
            <param name="courseIds">a string of course Ids separated by commas</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.Section">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetCourseSections2Async(System.String)">
            <summary>
            For each course Id specified, this API will return the sections for this course that are offered in terms "open for registration". 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned from the repository.
            </summary>
            <param name="courseIds">a string of course Ids separated by commas</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.Section2">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetCourseSections3Async(System.String)">
            <summary>
            For each course Id specified, this API will return the sections for this course that are offered in terms "open for registration". 
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned from the repository.
            </summary>
            <param name="courseIds">a string of course Ids separated by commas</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours but newly added sections and those with a changed status are updated in the cache every 10 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetAsync(System.String)">
            <summary>
            Returns courses given the list of course ids.
            </summary>
            <param name="id">course ID</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.Course">Courses</see></returns>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetCourseAsync(System.String)">
            <summary>
            Returns a course for the provided course id.
            </summary>
            <param name="courseId">course ID</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Course">Course</see></returns>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetCourse2Async(System.String)">
            <summary>
            Returns a course for the provided course id.
            </summary>
            <param name="courseId">course ID</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Course">Course</see></returns>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetHedmCourse3ByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a course for the provided Id.
            </summary>
            <param name="id">The Id of the course</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Course3">Course.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetHedmCourse4ByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a course for the provided Id.
            </summary>
            <param name="id">The GUID of the course</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Course4">Course.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetHedmCourse5ByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM</remarks>
            <summary>
            Retrieves a course for the provided Id. v16
            </summary>
            <param name="id">The GUID of the course</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Course5">Course.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetAllAndFilteredCourses3Async(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns all or filtered list of courses
            </summary>
            <param name="page"></param>
            <param name="subject"></param>
            <param name="number"></param>
            <param name="academicLevels"></param>
            <param name="owningInstitutionUnits"></param>
            <param name="title"></param>
            <param name="instructionalMethods"></param>
            <param name="schedulingStartOn"></param>
            <param name="schedulingEndOn"></param>
            <returns>Filtered <see cref="T:Ellucian.Colleague.Dtos.Course3">Courses.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetAllAndFilteredCourses4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Returns all or filtered list of courses
            </summary>
            <param name="page"></param>
            <param name="criteria"> Can contain: </param>
            subject, number, academicLevels, owningInstitutionUnits, title, instructionalMethods
            schedulingStartOn, schedulingEndOn
            <returns>Filtered <see cref="T:Ellucian.Colleague.Dtos.Course4">Courses.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.GetAllAndFilteredCourses5Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Returns all or filtered list of courses v16
            </summary>
            <param name="page"></param>
            <param name="criteria"> Can contain: </param>
            subject, number, academicLevels, owningInstitutionUnits, title, instructionalMethods
            schedulingStartOn, schedulingEndOn
             <param name="activeOn">named query</param>
            <returns>Filtered <see cref="T:Ellucian.Colleague.Dtos.Course5">Courses.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PostCourse3Async(Ellucian.Colleague.Dtos.Course3)">
            <summary>
            Post the course
            </summary>
            <param name="course">The course to be created</param>
            <returns>The created <see cref="T:Ellucian.Colleague.Dtos.Course3">Course</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to create the course</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the course is not provided.</exception>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PostCourse4Async(Ellucian.Colleague.Dtos.Course4)">
            <summary>
            Post the course
            </summary>
            <param name="course">The course to be created</param>
            <returns>The created <see cref="T:Ellucian.Colleague.Dtos.Course4">Course</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to create the course</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the course is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PostCourse5Async(Ellucian.Colleague.Dtos.Course5)">
            <summary>
            Post the course v16
            </summary>
            <param name="course">The course to be created</param>
            <returns>The created <see cref="T:Ellucian.Colleague.Dtos.Course5">Course</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to create the course</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the course is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PutCourse3Async(System.String,Ellucian.Colleague.Dtos.Course3)">
            <summary>
            Update the course PUT v6
            </summary>
            <param name="id">Id for the course to be updated</param>
            <param name="course">The course to be updated</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Course3">Course</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to update the course</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the course is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PutCourse4Async(System.String,Ellucian.Colleague.Dtos.Course4)">
            <summary>
            Update the course PUT v8
            </summary>
            <param name="id">Id for the course to be updated</param>
            <param name="course">The course to be updated</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Course4">Course</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to update the course</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the course is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.PutCourse5Async(System.String,Ellucian.Colleague.Dtos.Course5)">
            <summary>
            Update the course PUT v16
            </summary>
            <param name="id">Id for the course to be updated</param>
            <param name="course">The course to be updated</param>
            <returns>The updated <see cref="T:Ellucian.Colleague.Dtos.Course4">Course</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if user does not have the required role and permissions to update the course</exception>
            <exception> <see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the course is not provided.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.QueryCoursesByPost2Async(Ellucian.Colleague.Dtos.Student.CourseQueryCriteria)">
            <summary>
            Accepts a list of course Id strings to post a query against courses.
            </summary>
            <param name="criteria"><see cref="T:Ellucian.Colleague.Dtos.Student.CourseQueryCriteria">Query Criteria</see> including the list of Course Ids to use to retrieve courses.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Course2">Course2</see> objects. </returns>
            <note>Course is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CoursesController.DeleteHedmCourseByIdAsync(System.String)">
            <summary>
            Delete (DELETE) a course
            </summary>
            <param name="id">Id to desired course</param>
            <returns>A course object <see cref="T:Ellucian.Colleague.Dtos.Course2"/> in HeDM format</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.CourseTypesController">
            <summary>
            Provides access to Course Types data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICourseCategoriesService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CourseTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
             /// <param name="courseCategoriesService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseCategoriesService">ICourseCategoriesService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.GetAsync">
            <summary>
            Retrieves all Course Types.
            </summary>
            <returns>All Course Type codes and descriptions.</returns>
            <note>CourseType is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.GetCourseCategoriesAsync">
            <summary>
            Return all courseCategories
            </summary>
            <returns>List of CourseCategories <see cref="T:Ellucian.Colleague.Dtos.CourseCategories"/> objects representing matching courseCategories</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.GetCourseCategoriesByGuidAsync(System.String)">
            <summary>
            Read (GET) a courseCategories using a GUID
            </summary>
            <param name="guid">GUID to desired courseCategories</param>
            <returns>A courseCategories object <see cref="T:Ellucian.Colleague.Dtos.CourseCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.PostCourseCategoriesAsync(Ellucian.Colleague.Dtos.CourseCategories)">
            <summary>
            Create (POST) a new courseCategories
            </summary>
            <param name="courseCategories">DTO of the new courseCategories</param>
            <returns>A courseCategories object <see cref="T:Ellucian.Colleague.Dtos.CourseCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.PutCourseCategoriesAsync(System.String,Ellucian.Colleague.Dtos.CourseCategories)">
            <summary>
            Update (PUT) an existing courseCategories
            </summary>
            <param name="guid">GUID of the courseCategories to update</param>
            <param name="courseCategories">DTO of the updated courseCategories</param>
            <returns>A courseCategories object <see cref="T:Ellucian.Colleague.Dtos.CourseCategories"/> in EEDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.CourseTypesController.DeleteCourseCategoriesAsync(System.String)">
            <summary>
            Delete (DELETE) a courseCategories
            </summary>
            <param name="guid">GUID to desired courseCategories</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.DegreesController">
            <summary>
            Degree Controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the DegreesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.DegreesController.GetAsync">
            <summary>
            Retrieves all Degrees.
            </summary>
            <returns>All Degree codes and descriptions.</returns>
            <note>Degree is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.EducationHistoryController">
            <summary>
            Provides access to EducationHistory data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationHistoryController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IEducationHistoryService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the EducationHistoryController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="educationHistoryService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IEducationHistoryService">IEducationHistoryService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EducationHistoryController.QueryEducationHistoryAsync(Ellucian.Colleague.Dtos.Student.EducationHistoryQueryCriteria)">
            <summary>
            Get Education History from a list of Student keys
            </summary>
            <param name="criteria">DTO Object containing a list of Student Keys for selection</param>
            <returns>List of EducationHistory Objects <see cref="T:Ellucian.Colleague.Dtos.Student.EducationHistory">EducationHistory</see></returns>
            <accessComments>
            Users with VIEW.STUDENT.INFORMATION permission can access education history for given student Ids.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController">
            <summary>
            Provides access to EnrollmentStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            EnrollmentStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentReferenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController.GetEnrollmentStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all EnrollmentStatuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.EnrollmentStatus">EnrollmentStatus.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController.GetEnrollmentStatusByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a EnrollmentStatus by ID.
            </summary>
            <param name="id">ID to desired EnrollmentStatus</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.EnrollmentStatus">EnrollmentStatus.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController.PutEnrollmentStatusAsync(Ellucian.Colleague.Dtos.EnrollmentStatus)">
            <summary>
            Updates a EnrollmentStatus.
            </summary>
            <param name="enrollmentStatus"><see cref="!:EnrollmentStatus">EnrollmentStatus</see> to update</param>
            <returns>Newly updated <see cref="!:EnrollmentStatus">EnrollmentStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController.PostEnrollmentStatusAsync(Ellucian.Colleague.Dtos.EnrollmentStatus)">
            <summary>
            Creates a EnrollmentStatus.
            </summary>
            <param name="enrollmentStatus"><see cref="!:EnrollmentStatus">EnrollmentStatus</see> to create</param>
            <returns>Newly created <see cref="!:EnrollmentStatus">EnrollmentStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.EnrollmentStatusesController.DeleteEnrollmentStatusAsync(System.String)">
            <summary>
            Delete (DELETE) an existing EnrollmentStatus.
            </summary>
            <param name="id">Id of the EnrollmentStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ExternalTranscriptStatusesController">
            <summary>
            Provides access to external transcript status data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ExternalTranscriptStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ExternalTranscriptStatusesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ExternalTranscriptStatusesController.GetAsync">
            <summary>
            Retrieves all External Transcript Statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.ExternalTranscriptStatus">External Transcript Status</see> codes and descriptions.</returns>
            <note>ExternalTranscriptStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FacultyController">
            <summary>
            Provides access to Faculty data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IFacultyService,Ellucian.Colleague.Coordination.Student.Services.IFacultyRestrictionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the FacultyController class.
            </summary>
            <param name="facultyService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFacultyService">IFacultyService</see></param>
            <param name="facultyRestrictionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IFacultyRestrictionService">IFacultyRestrictionService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultySectionsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Retrieves sections taught by faculty member.
            </summary>
            <param name="facultyId">A faculty ID</param>
            <param name="startDate">Optional, default to current date.</param>
            <param name="endDate">Optional, default to current date+90 days. Must be greater than start date if specified.</param>
            <param name="bestFit">Optional, true assigns a term to any non-term section based on the section start date. Defaults to false.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Section">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve faculty course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultySections2Async(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Retrieves sections taught by faculty member.
            </summary>
            <param name="facultyId">A faculty ID</param>
            <param name="startDate">Optional, default to current date.</param>
            <param name="endDate">Optional, default to current date+90 days. Must be greater than start date if specified.</param>
            <param name="bestFit">Optional, true assigns a term to any non-term section based on the section start date. Defaults to false.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Section">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve faculty course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>Section is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultySections3Async(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Retrieves sections taught by faculty member.
            </summary>
            <param name="facultyId">A faculty ID - if not supplied an empty list of sections is returned.</param>
            <param name="startDate">Optional, ISO-8601 short date format, yyyy-mm-dd, default to current date.</param>
            <param name="endDate">Optional, ISO-8601 short date format, yyyy-mm-dd, default to current date+90 days. Must be greater than start date if specified.</param>
            <param name="bestFit">Optional, true assigns a term to any non-term section based on the section start date. Defaults to false.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve faculty course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultySections4Async(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Get a list of sections taught by faculty ID based on a date range or system parameters. If a start date is not provided sections will be returned based on 
            the allowed terms defined on Registration Web Parameters (RGWP), Class Schedule Web Parameters (CSWP) and Grading Web Parameters (GRWP).
            </summary>
            <param name="facultyId">A faculty ID. If not supplied, an empty list of sections is returned.</param>
            <param name="startDate">Optional, startDate, ISO-8601, yyyy-mm-dd.</param>
            <param name="endDate">Optional, endDate, ISO-8601, yyyy-mm-dd. If a start date is specified but end date is not, it will default to 90 days past start date. It must be greater than start date if specified, otherwise it will default to 90 days past start.</param>
            <param name="bestFit">Optional, true assigns a term to any non-term section based on the section start date. Defaults to false.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve faculty course section information; however,
            only an assigned faculty user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultySections5Async(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Get a list of sections taught by faculty ID based on a date range or system parameters. If a start date is not provided sections will be returned based on 
            the allowed terms defined on Registration Web Parameters (RGWP), Class Schedule Web Parameters (CSWP) and Grading Web Parameters (GRWP).
            </summary>
            <param name="facultyId">A faculty ID. If not supplied, an empty list of sections is returned.</param>
            <param name="startDate">Optional, startDate, ISO-8601, yyyy-mm-dd.</param>
            <param name="endDate">Optional, endDate, ISO-8601, yyyy-mm-dd. If a start date is specified but end date is not, it will default to 90 days past start date. It must be greater than start date if specified, otherwise it will default to 90 days past start.</param>
            <param name="bestFit">Optional, true assigns a term to any non-term section based on the section start date. Defaults to false.</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Section3">Sections</see></returns>
            <accessComments>
            Any authenticated user can retrieve faculty course section information; however,
            only an assigned faculty or departmental oversight user may retrieve list of active students Ids in a course section.
            For all other users that are not assigned faculty or departmental oversight to a course section cannot retrieve list of active students Ids and
            response object is returned with a X-Content-Restricted header with a value of "partial".
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.PostFacultyAsync(System.String)">
            <summary>
            Retrieves many faculty members at once.
            </summary>
            <param name="ids">comma delimited list of IDs from request body</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Faculty">Faculty</see></returns>
            <accessComments>Any authenticated user can request faculty information.</accessComments>
            <note>Faculty data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultyAsync(System.String)">
            <summary>
            Retrieves a faculty member by ID.
            </summary>
            <param name="id">The ID of the faculty member to retrieve</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.Faculty">Faculty</see> data.</returns>
            <accessComments>Any authenticated user can request faculty information.</accessComments>
            <note>Faculty data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultyRestrictionsAsync(System.String)">
            <summary>
            Retrieves the restrictions for the indicated faculty.
            </summary>
            <param name="facultyId">ID if the faculty</param>
            <returns>The list of <see cref="T:Ellucian.Colleague.Dtos.Base.PersonRestriction">StudentRestrictions</see> found for this faculty.</returns>
            <accessComments>Users may retrieve their own restriction information</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.QueryFacultyByPostAsync(Ellucian.Colleague.Dtos.Student.FacultyQueryCriteria)">
             <summary>
             Retrieves many faculty members at once.
             </summary>
             <param name="criteria">criteria object including a comma delimited list of IDs from request body</param>
             <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.Faculty">Faculty</see></returns>
            <accessComments>Any authenticated user can request faculty information.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.PostFacultyIdsAsync(Ellucian.Colleague.Dtos.Student.FacultyQueryCriteria)">
            <summary>
            Return a list of Faculty IDs for either Advisor Only or Faculty Only. Leave blank for all faculty.
            </summary>
            <param name="criteria">Contains flags for Faculty only and Advisor only.</param>
            <returns>List of faculty IDs</returns>
            <accessComments>Only users with any of the following permissions can retrieve list of Faculty IDs.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetPermissionsAsync">
            <summary>
            Retrieves permissions for the current user to determine which faculty functions the user is allowed, such as ability to create a prerequisite waiver.
            </summary>
            <returns>List of strings representing the faculty permissions of this user</returns>
            <accessComments>Users may retrieve their own faculty permissions</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultyPermissions2Async">
            <summary>
            Returns the faculty permissions for the authenticated user.
            </summary>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.FacultyPermissions">Faculty Permission</see> data.</returns>
            <accessComments>Users may retrieve their own faculty permissions</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FacultyController.GetFacultyOfficeHoursAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the faculty office hours for the list of faculty ids.
            </summary>
            <returns>A list of FacultyOfficeHours for each faculty id</returns>
            <accessComments>Any authenticated user can request faculty information.</accessComments>
            <note>Faculty Office Hours for the specific faculty id is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.FederalCourseClassificationsController">
            <summary>
            Provides access to FederalCourseClassification data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FederalCourseClassificationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            FederalCourseClassificationsController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.FederalCourseClassificationsController.GetAsync">
            <summary>
            Gets all FederalCourseClassification codes and their associated descriptions
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.FederalCourseClassification">FederalCourseClassifications</see></returns>
            <note>FederalCourseClassification is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.GradeSchemesController">
            <summary>
            Provides access to Grade Scheme data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IGradeSchemeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GradeSchemesController class.
            </summary>
            <param name="gradeSchemeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IGradeSchemeService">IGradeSchemeService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.GetGradeSchemesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all grade schemes.
            </summary>
            <returns>All GradeScheme objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.GetNonEthosGradeSchemeByIdAsync(System.String)">
            <summary>
            Retrieves a grade scheme by ID
            </summary>
            <param name="id">ID of the grade scheme</param>
            <returns>A grade scheme</returns>
            <accessComments>Any authenticated user can retrieve grade scheme information.</accessComments>
            <note>Grade scheme data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.GetGradeSchemeByGuidAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves a grade scheme by GUID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.GradeScheme">GradeScheme.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.GetGradeSchemes2Async">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all grade schemes.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All GradeScheme objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.GetGradeSchemeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves a grade scheme by ID.
            </summary>
            <param name="id">Id of Grade Scheme to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.GradeScheme2">GradeScheme.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.PostGradeSchemeAsync(Ellucian.Colleague.Dtos.GradeScheme2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Creates a GradeScheme.
            </summary>
            <param name="gradeScheme"><see cref="T:Ellucian.Colleague.Dtos.GradeScheme2">GradeScheme</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.GradeScheme2">GradeScheme</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.PutGradeSchemeAsync(System.String,Ellucian.Colleague.Dtos.GradeScheme2)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Updates a Grade Scheme.
            </summary>
            <param name="id">Id of the Grade Scheme to update</param>
            <param name="gradeScheme"><see cref="T:Ellucian.Colleague.Dtos.GradeScheme2">GradeScheme</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.GradeScheme2">GradeScheme</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSchemesController.DeleteGradeSchemeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete (DELETE) an existing Grade Scheme
            </summary>
            <param name="id">Id of the Grade Scheme to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.GradesController">
            <summary>
            Provides access to Grade data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IGradeRepository,Ellucian.Colleague.Coordination.Student.Services.IGradeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GradesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="gradeRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IGradeRepository">IGradeRepository</see></param>
            <param name="gradeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IGradeService">IGradeService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.GetAsync">
            <summary>
            Retrieves information for all Grades.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Grade">Grades</see></returns>
            <accessComments>Any authenticated user may retrieve grade code information.</accessComments>
            <note>Grade information is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.QueryPilotGradesAsync(Ellucian.Colleague.Dtos.Student.GradeQueryCriteria)">
            <summary>
            Gets PilotGrades based on query criteria such as studentIds and term.
            Requires VIEW.STUDENT.INFORMATION permission.
            </summary>
            <param name="criteria">A <see cref="T:Ellucian.Colleague.Dtos.Student.GradeQueryCriteria"/> grade criteria object</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.PilotGrade"/>PilotGrades that match the criteria parameters.</returns>
            <accessComments>
            User with permission of VIEW.STUDENT.INFORMATION can access student grades.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.QueryPilotGrades2Async(Ellucian.Colleague.Dtos.Student.GradeQueryCriteria)">
            <summary>
            Gets grades based on query criteria such as studentIds and term.
            Requires VIEW.STUDENT.INFORMATION permission.
            </summary>
            <param name="criteria">A <see cref="T:Ellucian.Colleague.Dtos.Student.GradeQueryCriteria"/> grade criteria object</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.PilotGrade"/>PilotGrades that match the criteria parameters.</returns>
            <accessComments>
            User with permission of VIEW.STUDENT.INFORMATION can access student grades.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.GetHedmAsync">
            <summary>
            Retrieves information for all Grades.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Grade">Grades</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.GetByIdHedmAsync(System.String)">
            <summary>
            Retrieves grade by id
            </summary>
            <param name="id">The Id of the grade</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Grade">Grade</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.PostGradeAsync(Ellucian.Colleague.Dtos.Grade)">
            <summary>
            Create a grade
            </summary>
            <param name="grade">grade</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Grade"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.PutGradeAsync(System.String,Ellucian.Colleague.Dtos.Grade)">
            <summary>
            Update a grade
            </summary>
            <param name="id">desired id for a grade</param>
            <param name="grade">grade</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Grade"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.DeleteGradeByIdAsync(System.String)">
            <summary>
            Delete (DELETE) a grade
            </summary>
            <param name="id">id to desired grade</param>
            <returns>A section object <see cref="T:Ellucian.Colleague.Dtos.Grade"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.GetGradeDefinitionsMaximumAsync">
            <summary>
            Retrieves information for all Grades.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <returns>All <see cref="!:GradeDefinitionsMaximum">GradeDefinitionsMaximum</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.GetGradeDefinitionsMaximumByIdAsync(System.String)">
            <summary>
            Retrieves grade by id
            </summary>
            <param name="id">The Id of the grade</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.GradeDefinitionsMaximum">GradeDefinitionsMaximum</see></returns>                            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.PostGradeDefinitionsMaximumAsync(Ellucian.Colleague.Dtos.GradeDefinitionsMaximum)">
            <summary>
            Create a GradeDefinitionsMaximum
            </summary>
            <param name="grade">grade</param>
            <returns>A GradeDefinitionsMaximum object <see cref="T:Ellucian.Colleague.Dtos.GradeDefinitionsMaximum"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.PutGradeDefinitionsMaximumAsync(System.String,Ellucian.Colleague.Dtos.GradeDefinitionsMaximum)">
            <summary>
            Update a GradeDefinitionsMaximum
            </summary>
            <param name="id">desired id for a grade</param>
            <param name="grade">grade</param>
            <returns>A GradeDefinitionsMaximum object <see cref="T:Ellucian.Colleague.Dtos.GradeDefinitionsMaximum"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.DeleteGradeDefinitionsMaximumByIdAsync(System.String)">
            <summary>
            Delete (DELETE) a GradeDefinitionsMaximum
            </summary>
            <param name="id">id to desired grade</param>
            <returns>A GradeDefinitionsMaximum object <see cref="T:Ellucian.Colleague.Dtos.GradeDefinitionsMaximum"/> in HeDM format</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradesController.QueryAnonymousGradingIdsAsync(Ellucian.Colleague.Dtos.Student.AnonymousGradingQueryCriteria)">
            <summary>
            Retrieves all Anonymous Grading Ids for a student either by terms or by sections.
            </summary>
            <param name="criteria">A <see cref="T:Ellucian.Colleague.Dtos.Student.AnonymousGradingQueryCriteria">AnonymousGradingQueryCriteria</see> used to retrieve Anonymous Grading Ids for a student.</param>
            <returns>A collection of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentAnonymousGrading">Student Anonymous Grading Ids</see> for student</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.NotFound returned if Anonymous Grading Ids are not found, either for specified terms or sections</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned if the student id is not provided.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user does not have the role or permissions required</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned for other errors that may occur</exception>
            <accessComments>
            An authenticated student may view their Anonymous Grading Ids for academic terms or course sections.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.GradeSubschemesController">
            <summary>
            Provides access to Grade Subscheme data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSubschemesController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IGradeSchemeService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the GradeSubschemesController class.
            </summary>
            <param name="gradeSchemeService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IGradeSchemeService">IGradeSchemeService</see></param>
            <param name="logger">Interface to logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.GradeSubschemesController.GetGradeSubschemeByIdAsync(System.String)">
            <summary>
            Retrieves a Grade Subscheme by ID
            </summary>
            <param name="id">ID of the Grade Subscheme</param>
            <returns>A Grade Subscheme</returns>
            <accessComments>Any authenticated user can retrieve Grade Subscheme information.</accessComments>
            <note>Grade subscheme information is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController">
            <summary>
            Instant Enrollment 
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ICourseService,Ellucian.Colleague.Coordination.Student.Services.IInstantEnrollmentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstantEnrollmentController class.
            </summary>
            <param name="courseService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICourseService">ICourseService</see></param>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IInstantEnrollmentService">IInstantEnrollmentService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.PostInstantEnrollmentCourseSearch2Async(Ellucian.Colleague.Dtos.Student.InstantEnrollmentCourseSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Performs a search of sections that are available for Instant Enrollment only.
            The criteria supplied is keyword and various filters which may be used to search and narrow list of sections.
            </summary>
            <param name="criteria"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
            <accessComments>Any authenticated user can perform search on sections and view Instant Enrollment catalog.</accessComments>
            <note>Instant Enrollment course section data is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.PostProposedRegistrationForClassesAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentProposedRegistration)">
            <summary>
            This is to mock registration for classes and return sections registered with the associated cost.
            </summary>
            <param name="proposedRegistration">proposed registration of type <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentProposedRegistration">InstantEnrollmentProposedRegistration</see></param>
            <accessComments>Any authenticated user can complete a proposed registration and retrieve costs for the registered sections for themselves. 
            Additionally, users with the IE.ALLOW.ALL permission can can complete a proposed registration and retrieve costs for the registered sections</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.PostZeroCostRegistrationForClassesAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentZeroCostRegistration)">
            <summary>
            This is to register for classes and return sections registered when the total cost is zero.
            </summary>
            <param name="zeroCostRegistration">zero cost registration of type <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentZeroCostRegistration">InstantEnrollmentZeroCostRegistration</see></param>
            <accessComments>Any authenticated user can register for classes for themselves when the total cost is zero.
            Additionally, users with the IE.ALLOW.ALL permission can register for classes when the total cost is zero.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.PostEcheckRegistrationForClassesAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentEcheckRegistration)">
            <summary>
            This is to register and pay for classes with an electronic transfer.
            </summary>
            <param name="echeckRegistration">echeck registration of type <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentEcheckRegistration">InstantEnrollmentEcheckRegistration</see></param>
            <accessComments>Any authenticated user can register for classes for themselves and pay the costs for the registered sections using an electronic check.
            Additionally, users with the IE.ALLOW.ALL permission can register for classes and pay the costs for the registered sections using an electronic check.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.PostStartInstantEnrollmentPaymentGatewayTransaction(Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentPaymentGatewayRegistration)">
            <summary>
            Start an instant enrollment payment gateway transaction, which includes registering the student and creating the student if needed.
            </summary>
            <param name="proposedRegistration">A <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentPaymentGatewayRegistration">InstantEnrollmentProposedRegistration</see>containing the information needed to start the payment gateway transaction.</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentStartPaymentGatewayRegistrationResult">InstantEnrollmentStartPaymentGatewayRegistrationResult</see> containing the result of the operation.</returns>
            <accessComments>Any authenticated user can register for classes for themselves and pay the costs for the registered sections using a credit card.
            Additionally, users with the IE.ALLOW.ALL permission can register for classes and pay the costs for the registered sections using a credit card.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.GetInstantEnrollmentPaymentAcknowledgementParagraphTextAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentPaymentAcknowledgementParagraphRequest)">
            <summary>
            Retrieves instant enrollment payment acknowledgement paragraph text for a given <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentPaymentAcknowledgementParagraphRequest"/>
            </summary>
            <param name="request">A <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentPaymentAcknowledgementParagraphRequest"/></param>
            <returns>Instant enrollment payment acknowledgement paragraph text</returns>
            <accessComments>Any authenticated user retrieve instant enrollment payment acknowledgement paragraph text for themselves.
            Additionally, any user with the IE.ALLOW.ALL permission can retrieve instant enrollment payment acknowledgement paragraph text</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.QueryPersonMatchResultsInstantEnrollmentByPostAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollment.PersonMatchCriteriaInstantEnrollment)">
            <summary>
            Query persons matching the criteria using the ELF duplicate checking criteria configured for Instant Enrollment.
            </summary>
            <param name="criteria">The <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.PersonMatchCriteriaInstantEnrollment">person attributes for which matching persons in Colleague are searched.</see> </param>
            <returns>Result of a person biographic/demographic matching inquiry for Instant Enrollment</returns>
            <accessComments>Users must have the IE.ALLOW.ALL permission to query person matches for Instant Enrollment</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.GetInstantEnrollmentCashReceiptAcknowledgementAsync(Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentCashReceiptAcknowledgementRequest)">
            <summary>
            Retrieves instant enrollment cash receipt acknowledgement for a given <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentCashReceiptAcknowledgementRequest"/>
            </summary>
            <param name="request">A <see cref="T:Ellucian.Colleague.Dtos.Student.InstantEnrollment.InstantEnrollmentCashReceiptAcknowledgementRequest"/></param>
            <returns>Instant enrollment cash receipt acknowledgement</returns>
            <accessComments>Any authenticated user can retrieve instant enrollment cash receipt acknowledgement data for themselves.
            Additionally, any user with the IE.ALLOW.ALL permission can retrieve cash receipt acknowledgement data</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstantEnrollmentController.GetInstantEnrollmentStudentPrograms2Async(System.String,System.Boolean)">
            <summary>
            Gets information the programs in which the specified student is enrolled.
            </summary>
            <param name="studentId">Student's ID</param>
            <param name="currentOnly">Boolean to indicate whether this request is for active student programs, or ended/past programs as well</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram2">Programs</see> in which the specified student is enrolled.</returns>
            <accessComments>
            Student information can be retrieved only if:
            1. A Student is accessing its own data.
            2. A user with permission of IE.ALLOW.ALL is accessing the student's data.
            </accessComments>
            <note>Student Program is cached for 5 minutes.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.InstructionalEventsController">
            <summary>
            Provides access to course Section data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ISectionCoordinationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="sectionCoordinationService">Coordination service interface for sections</param>
            <param name="logger"> <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.GetHedmInstructionalEventsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of InstructionalEvents objects based on selection criteria.
            </summary>
            <param name="page">page</param>
            <param name="section">Section Id</param>
            <param name="startOn">Start Date and Time</param>
            <param name="endOn">End Date and Time</param>
            <param name="room">Room where class is being held</param>
            <param name="instructor">Instructor ID</param>
            <returns>List of InstructionalEvent2 <see cref="T:Ellucian.Colleague.Dtos.InstructionalEvent2"/> objects representing matching InstructionalEvents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.GetHedmAsync(System.String)">
            <summary>
            Read (GET) a section
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A DTO in the format of the sections LDM</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.PostHedmAsync(Ellucian.Colleague.Dtos.InstructionalEvent2)">
            <summary>
            Create (POST) a new section
            </summary>
            <param name="meeting">DTO of the new section</param>
            <returns>A DTO in the format of the updated section's LDM</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.PutHedmAsync(System.String,Ellucian.Colleague.Dtos.InstructionalEvent2)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="id">GUID of the instructional event</param>
            <param name="meeting">DTO of the updated instructional event</param>
            <returns>A DTO in the format of the CDM sections</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.GetInstructionalEvents3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of InstructionalEvents objects based on selection criteria.
            </summary>
            <param name="page">page</param>
            <param name="criteria">Filter criteria</param>
            <param name="academicPeriod">Filter academicPeriod Named Query</param>
            <returns>List of InstructionalEvent3 <see cref="T:Ellucian.Colleague.Dtos.InstructionalEvent3"/> objects representing matching InstructionalEvents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.GetInstructionalEvent3Async(System.String)">
            <summary>
            Read (GET) a section
            </summary>
            <param name="id">GUID to desired section</param>
            <returns>A DTO in the format of the sections LDM</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.PostInstructionalEvent3Async(Ellucian.Colleague.Dtos.InstructionalEvent3)">
            <summary>
            Create (POST) a new section
            </summary>
            <param name="meeting">DTO of the new section</param>
            <returns>A DTO in the format of the updated section's LDM</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.PutInstructionalEvent3Async(System.String,Ellucian.Colleague.Dtos.InstructionalEvent3)">
            <summary>
            Update (PUT) an existing section
            </summary>
            <param name="id">GUID of the instructional event</param>
            <param name="meeting">DTO of the updated instructional event</param>
            <returns>A DTO in the format of the CDM sections</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.GetInstructionalEvents4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of InstructionalEvents objects based on selection criteria.
            </summary>
            <param name="page">page</param>
            <param name="criteria">Filter criteria</param>
            <param name="academicPeriod">Named Query for academicPeriod</param>
            <param name="instructionalEventInstances">Named Query for instructionalEventInstances</param>
            <returns>List of InstructionalEvent4 <see cref="T:Ellucian.Colleague.Dtos.InstructionalEvent4"/> objects representing matching InstructionalEvents</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.GetInstructionalEvent4Async(System.String)">
            <summary>
            Read (GET) an instructional-event
            </summary>
            <param name="id">GUID to desired instructional-event</param>
            <returns>A DTO in the format of the instructional-event</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.PostInstructionalEvent4Async(Ellucian.Colleague.Dtos.InstructionalEvent4)">
            <summary>
            Create (POST) a new instructional-event
            </summary>
            <param name="meeting">DTO of the new instructional-event</param>
            <returns>A DTO in the format of the updated instructional-event</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.PutInstructionalEvent4Async(System.String,Ellucian.Colleague.Dtos.InstructionalEvent4)">
            <summary>
            Update (PUT) an existing instructional-event V11
            </summary>
            <param name="id">GUID of the instructional event</param>
            <param name="meeting">DTO of the updated instructional event</param>
            <returns>A DTO in the format of InstructionalEvent4</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalEventsController.DeleteHedmAsync(System.String)">
            <summary>
            Delete (DELETE) an existing section meeting
            </summary>
            <param name="id">Unique ID of the Instructional Event to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController">
            <summary>
            Provides access to Instructional Method data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the InstructionalMethodsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.GetAsync">
            <summary>
            Retrieves all Instructional Methods.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.InstructionalMethod">Instructional Method</see> codes and descriptions.</returns>
            <note>InstructionalMethod is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.GetInstructionalMethods2Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM version 4</remarks>
            <summary>
            Retrieves all instructional methods.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.InstructionalMethod2">InstructionalMethods.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.GetInstructionalMethodById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM version 4</remarks>
            <summary>
            Retrieves an instructional method by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.InstructionalMethod2">InstructionalMethod.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.PostInstructionalMethodsAsync(Ellucian.Colleague.Dtos.InstructionalMethod2)">
            <summary>
            Creates a Instructional Method.
            </summary>
            <param name="instructionalMethod"><see cref="T:Ellucian.Colleague.Dtos.InstructionalMethod2">InstructionalMethod</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.InstructionalMethod2">InstructionalMethod</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.PutInstructionalMethodsAsync(System.String,Ellucian.Colleague.Dtos.InstructionalMethod2)">
            <summary>
            Updates a Instructional Method.
            </summary>
            <param name="id">Id of the Instructional Method to update</param>
            <param name="instructionalMethod"><see cref="T:Ellucian.Colleague.Dtos.InstructionalMethod2">InstructionalMethod</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.InstructionalMethod2">InstructionalMethod</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.InstructionalMethodsController.DeleteInstructionalMethodsAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Instructional Method
            </summary>
            <param name="id">Id of the Instructional Method to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.LocalCourseClassificationsController">
            <summary>
            Provides access to Local Government Course Classification Codes data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LocalCourseClassificationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the LocalCourseClassificationsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="localCourseClassificationRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.LocalCourseClassificationsController.GetAsync">
            <summary>
            Gets information for all Local Government Course Classifications
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Domain.Student.Entities.LocalCourseClassification"/></returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>LocalCourseClassification is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.MajorsController">
            <summary>
            Provides access to Majors data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MajorsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MajorsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MajorsController.GetAsync">
            <summary>
            Retrieves all Majors.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Major">Major</see> codes and descriptions.</returns>
            <note>Major is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.MinorsController">
            <summary>
            Provides access to Minors data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MinorsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MajorsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.MinorsController.GetAsync">
            <summary>
            Retrieve all Minors.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Minor">Minor</see> codes and descriptions.</returns>
            <note>Minor is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.NoncourseStatusesController">
            <summary>
            Provides access to Noncourse status data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.NoncourseStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the NoncourseStatusesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentReferenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.NoncourseStatusesController.GetAsync">
            <summary>
            Retrieves all Noncourse Statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Domain.Student.Entities.NoncourseStatus">Noncourse Statuses</see></returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>NoncourseStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.PortalController">
            <summary>
            Portal Controller is introduced to replace Portal Web Part of WebAdvisor. 
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IPortalService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the PortalWebController class.
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IPortalService">IPortalService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.GetCoursesForDeletionAsync">
            <summary>
            This returns the total courses and the list of course ids  that are applicable for deletion from Portal.
            </summary>
            <accessComments>Any authenticated user with PORTAL.CATALOG.ADMIN permissions is allowed to get the list of courses that are applicable for deletion from Portal. </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.GetSectionsForUpdateAsync">
            <summary>
            This returns the list of sections that are applicable for updating from Portal.
            </summary>
            <accessComments>Any authenticated user with PORTAL.CATALOG.ADMIN permissions is allowed to get the list of sections that are applicable for updated from Portal.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.GetSectionsForDeletionAsync">
            <summary>
            This returns the total sections and the list of section ids that are applicable for deletion from Portal.
            </summary>
            <accessComments>Any authenticated user with PORTAL.CATALOG.ADMIN permissions is allowed to get the list of sections that are applicable for deletion from Portal.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.QueryEventsAndRemindersAsync(Ellucian.Colleague.Dtos.Student.Portal.PortalEventsAndRemindersQueryCriteria)">
            <summary>
            Returns event and reminders to be displayed in the Portal for the authenticated user.
            </summary>
            <param name="criteria">Event and reminder selection criteria</param>
            <accessComments>Any authenticated user may retrieve events and reminders to be displayed in the Portal for themselves</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.GetCoursesForUpdateAsync">
            <summary>
            This returns the courses that are applicable for updating from Portal.
            </summary>
            <accessComments>Any authenticated user with PORTAL.CATALOG.ADMIN permissions is allowed to get the list of courses that are applicable for updated from Portal.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PortalController.UpdateStudentPreferredCourseSectionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates a student's list of preferred course sections
            </summary>
            <param name="studentId">ID of the student whose list of preferred course sections is being updated</param>
            <param name="courseSectionIds">IDs of the course sections to be added to the student's list of preferred course sections</param>
            <returns>Collection of <see cref="T:Ellucian.Colleague.Dtos.Student.Portal.PortalStudentPreferredCourseSectionUpdateResult"/></returns>
            <accessComments>Authenticated users may update their own preferred course sections.</accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.PreferredSectionsController">
            <summary>
            Provides access to Preferred Section data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PreferredSectionsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IPreferredSectionService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentPreferredSectionsRepository class.
            </summary>
            <param name="preferredSectionService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PreferredSectionsController.GetPreferredSectionsAsync(System.String)">
            <summary>
            Retrieves the student's list of preferred sections.
            </summary>
            <param name="studentId">The student's ID</param>
            <returns>List of student's current Preferred Sections and applicable messages.</returns>
            <accessComments>
            Student must be requesting their own sections
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PreferredSectionsController.UpdatePreferredSectionsAsync(System.String,System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Student.PreferredSection})">
            <summary>
            Update (create new and/or update existing) the student's list of preferred sections.
            </summary>
            <param name="studentId">The student's ID</param>
            <param name="preferredSections">List of preferred sections to create and/or update.</param>
            <returns>List of student's current Preferred Sections and applicable messages.</returns>
            <accessComments>
            Student must be updating their own section
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.PreferredSectionsController.DeletePreferredSectionsAsync(System.String,System.String)">
            <summary>
            Delete the indicated section from the student's preferred sections list.
            </summary>
            <param name="studentId">The student's ID</param>
            <param name="sectionId">The Section Id to delete.</param>
            <returns></returns>
            <accessComments>
            Student must be deleting their own section
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ProgramsController">
            <summary>
            Provides access to Academic Program data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IProgramRepository,Ellucian.Colleague.Domain.Student.Repositories.IProgramRequirementsRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Colleague.Coordination.Student.Services.IProgramsService)">
            <summary>
            Initializes a new instance of the ProgramsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="programRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IProgramRepository">IProgramRepository</see></param>
            <param name="programRequirementsRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IProgramRequirementsRepository">IProgramRequirementsRepository</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
            <param name="programsService"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.GetAsync">
            <summary>
            Retrieves all Programs
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Program">Programs</see></returns>
            <note>Programs are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.GetActiveProgramsAsync">
            <summary>
            Retrieves all active Programs.
            </summary>
            <returns>All active <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Program">Programs</see></returns>
            <note>Program is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.GetActivePrograms2Async(System.Boolean)">
            <summary>
            Retrieves all active Programs.
            </summary>
            <returns>All active <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Program">Programs</see></returns>
            <note>Programs are cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.GetProgramsById(System.String)">
            <summary>
            Retrieves a single Program by ID.
            </summary>
            <param name="id">Id of program to retrieve</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Program">Program</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.GetProgramsByIdsAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the programs for a list of programs.
            </summary>
            <param name="programCodes">The list of programs to retrieve</param>
            <returns>A collection of <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Program"> Programs</see></returns>
            <accessComments>
            Any authenticated user
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ProgramsController.GetRequirementsAsync(System.String,System.String)">
            <summary>
            Retrieves program requirements.
            </summary>
            <param name="id">Id of the program</param>
            <param name="catalog">Catalog code</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.ProgramRequirements">Program Requirements</see> for the program catalog combination.</returns>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.RegistrationOptionsController">
            <summary>
            Provides access to student registration options data (allowed grading types, etc).
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RegistrationOptionsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IRegistrationOptionsService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ProgramsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="registrationOptionsService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IRegistrationOptionsService">IRegistrationOptionsService</see></param>
            <param name="logger">An instance of a logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RegistrationOptionsController.GetAsync(System.String)">
            <summary>
            Get the registration options for a student 
            </summary>
            <param name="studentId">The student's ID</param>
             <accessComments>
            Registration Options for the student can be retrieved only if:
            1. A Student is accessing its own data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.RequirementsController">
            <summary>
            Provides access to Requirements data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RequirementsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IRequirementRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RequirementsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="requirementRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IRequirementRepository">IRequirementRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RequirementsController.GetAsync(System.String)">
            <summary>
            Retrieves the requirement details for a specific requirement code.
            </summary>
            <param name="id">Requirement Code</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Requirement">Requirement</see></returns>
            <note>This parameter has support for :ref:`urlcharactersubstitution`</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RequirementsController.QueryRequirementsByPostAsync(Ellucian.Colleague.Dtos.Student.RequirementQueryCriteria)">
            <summary>
            Retrieves the requirement details for the provided requirement codes.
            </summary>
            <param name="criteria">Criteria, including Requirement Ids, to use to request Requirements</param>
            <returns>List of the requested <see cref="T:Ellucian.Colleague.Dtos.Student.Requirements.Requirement">Requirement</see> objects</returns>
            <note>Requirement is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.ResidencyTypesController">
            <summary>
            Provides access to ResidencyType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidencyTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the ResidencyTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentService">Service of type<see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentService"> IResidencyTypesService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidencyTypesController.GetResidencyTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves all Residency types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.ResidentType">ResidencyTypes</see> objects.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidencyTypesController.GetResidencyTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Retrieves an Residency type by ID.
            </summary>
            <param name="guid">Unique ID representing the Residency Type to get</param>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.ResidentType">ResidentType</see> object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidencyTypesController.DeleteResidencyTypeAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Delete an existing Residency type in Colleague (Not Supported)
            </summary>
            <param name="guid">Unique guid ID representing the Residency Type to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidencyTypesController.PutResidencyTypeAsync(Ellucian.Colleague.Dtos.ResidentType)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Update a Residency Type Record in Colleague (Not Supported)
            </summary>
            <param name="residencyType"><see cref="T:Ellucian.Colleague.Dtos.ResidentType">ResidencyType</see> to update</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.ResidencyTypesController.PostResidencyTypeAsync(Ellucian.Colleague.Dtos.ResidentType)">
            <remarks>FOR USE WITH ELLUCIAN HeDM</remarks>
            <summary>
            Create a Residency Type Record in Colleague (Not Supported)
            </summary>
            <param name="residencyType"><see cref="T:Ellucian.Colleague.Dtos.ResidentType">ResidencyTypes</see> to create</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.RetentionAlertController">
            <summary>
            Provides access to Retention Alert related data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IRetentionAlertService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the RetentionAlertController class.
            </summary>
            <param name="retentionAlertService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IRetentionAlertService">IRetentionAlertService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetCaseTypesAsync">
            <summary>
            Retrieves all Case Types.
            </summary>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CaseType">Case Types</see></returns>
            <note>AllCaseTypes is cached for 1) 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetCaseCategoriesAsync">
            <summary>
            Retrieves all Case Categories.
            </summary>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CaseCategory">Case Categories</see></returns>
            <note>AllCaseCategories is cached for  1) 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.QueryRetentionAlertCaseCategoryOrgRolesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Get the Org Role settings for Case Categories.
            </summary>
            <param name="caseCategoryIds">Case Category Ids</param>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <returns>A list of RetentionAlertCaseCategoryOrgRoles</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetRetentionAlertPermissionsAsync">
            <summary>
            Gets the retention alert permissions asynchronous.
            </summary>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertPermissions">Retention alert permissions for the current user</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetCaseClosureReasonsAsync">
            <summary>
            Retrieves all Case Closure reasons.
            </summary>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CaseClosureReason">Case Categories</see></returns>
            <note>AllCaseClosureReasons is cached for  1) 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.QueryRetentionAlertWorkCasesByPostAsync(Ellucian.Colleague.Dtos.Student.RetentionAlertQueryCriteria)">
            <summary>
            Retrieves retention alert work cases
            </summary>
            <param name="retentionAlertQueryCriteria">Criteria to retrieve retention alert cases</param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert cases.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCase">RetentionAlertWorkCase</see> object</returns>
            <accessComments>
            An authenticated user may query retention alert cases if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.QueryRetentionAlertWorkCasesByPost2Async(Ellucian.Colleague.Dtos.Student.RetentionAlertQueryCriteria)">
            <summary>
            Retrieves retention alert work cases 2 Async
            </summary>
            <param name="retentionAlertQueryCriteria">Criteria to retrieve retention alert cases</param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert cases.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCase2">RetentionAlertWorkCase2</see> object</returns>
            <accessComments>
            An authenticated user may query retention alert cases if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetRetentionAlertCaseDetailAsync(System.String)">
            <summary>
            Retrieves retention alert case Detail
            </summary>
            <param name="id">Retention alert case id to retrieve case detail</param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the case id is not provided to get the case detail.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert case detail.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertCaseDetail">RetentionAlertCaseDetail</see> object</returns>
            <accessComments>
            An authenticated user may retrieve retention alert case detail if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            CONTRIBUTE.TO.CASES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.QueryRetentionAlertContributionsAsync(Ellucian.Colleague.Dtos.Student.ContributionsQueryCriteria)">
            <summary>
            Query retention alert contributions for the current user
            </summary>
            <param name="contributionsQueryCriteria">Query criteria</param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert contributions.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCase">RetentionAlertWorkCase</see> object</returns>
            <accessComments>
            An authenticated user may retrieve retention alert contributions if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            CONTRIBUTE.TO.CASES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.PostRetentionAlertCaseAsync(Ellucian.Colleague.Dtos.Student.RetentionAlertCase)">
            <summary>
            Creates a retention alert case for student
            </summary>
            <param name="retentionAlertCase">Information for adding a case for student</param>
            <returns>An HttpResponseMessage which includes the newly created <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertCaseCreateResponse">add retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may retrieve retention alert contributions if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            CONTRIBUTE.TO.CASES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.AddRetentionAlertCaseNoteAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseNote)">
            <summary>
            Add a note to a Retention Alert Case
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertCaseNote">Information for adding a note to a case for student</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">add a note to a retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may add a note to a retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            CONTRIBUTE.TO.CASES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.AddRetentionAlertCaseFollowUpAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseNote)">
            <summary>
            Add a FollowUp Note to a Retention Alert Case, this will not add the user to the list of Case Owners.
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertCaseNote">Information for adding a note to a case for student</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">add a note to a retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may add a note to a retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            CONTRIBUTE.TO.CASES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.AddRetentionAlertCaseCommCodeAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseCommCode)">
            <summary>
            Add a communication code to a Retention Alert Case
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertCaseCommCode">Information for adding a communication code to a case for student</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">adding a communication code to a retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may add a communication code to a retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.AddRetentionAlertCaseTypeAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseType)">
            <summary>
            Add a Case Type to a Retention Alert Case
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertCaseType">Information for adding a case type to a case for student</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">adding a case type to a retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may add a case type to a retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.ChangeRetentionAlertCasePriorityAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCasePriority)">
            <summary>
            Change Retention Alert Case Priority
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertCasePriority">Information for changing the priority of a retention alert case</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">changing the priority of a retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may change the priority of a retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.CloseRetentionAlertCaseAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseClose)">
            <summary>
            Close a Retention Alert Case
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertCaseClose">Information for closing a retention alert case</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">closing a retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may close a retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.PutRetentionAlertCaseAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertCase)">
            <summary>
            Updates a retention alert case for student
            </summary>
            <param name="id">Id of the Retention alert case to update</param>
            <param name="retentionAlertCase">Information for updating a case</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertCaseCreateResponse">Reponse of the case update</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>Any authenticated user can get this resource.</accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetRetentionAlertCaseOwnerSummaryAsync(System.String)">
            <summary>
            Get a list of cases for each Org Role and Org Entity owning cases for that category
            </summary>
            <param name="categoryId">Retention Alert Case Category Id</param>
            <returns>A list of cases for each Org Role and Org Entity owning cases for that category</returns>        
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may change the priority of a retention alert case if they have one of the following permissions:
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetCasePrioritiesAsync">
            <summary>
            Get the case priorities
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.CasePriority"/></returns>
            <accessComments>Any authenticated user can get this resource.</accessComments>
            <note>AllCasePriorities is cached for  1) 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.SendRetentionAlertWorkCaseMailAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseSendMail)">
            <summary>
            Sends the retention alert mail for the work case
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertWorkCaseSendMail">Information for sending the mails for the work case</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">send mail for the retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may send mails for retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.AddRetentionAlertCaseReminderAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseSetReminder)">
            <summary>
            Set a reminder for a retention alert case.
            </summary>
            <param name="caseId">Case ID</param>
            <param name="reminder">Information for setting a reminder for a retention alert case</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">setting a reminder for the retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may set a reminder for retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.ManageRetentionAlertCaseRemindersAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseManageReminders)">
            <summary>
            Set a reminder for a retention alert case.
            </summary>
            <param name="caseId">Case ID</param>
            <param name="reminders">Information for setting a reminder for a retention alert case</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating of there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">setting a reminder for the retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. </exception>
            <accessComments>
            An authenticated user may set a reminder for retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetRetentionAlertOpenCasesAsync">
            <summary>
            Retrieves retention alert open cases.
            </summary>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert open cases.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertOpenCase">RetentionAlertOpenCase</see> object</returns>
            <accessComments>
            An authenticated user may retrieve retention alert open cases if they have one of the following permissions:
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetRetentionAlertClosedCasesByReasonAsync(System.String)">
            <summary>
            Get a list of closed retention alert cases grouped by closure reason.
            </summary>
            <param name="categoryId">Retention Alert Category Id</param>
            <returns>a list of closed retention alert cases grouped by closure reason.</returns>
            <accessComments>
            An authenticated user may retrieve retention alert open cases if they have one of the following permissions:
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.ReassignRetentionAlertWorkCaseAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseReassign)">
            <summary>
            Reassigns the retention alert work case
            </summary>
            <param name="caseId">Case ID</param>
            <param name="retentionAlertWorkCaseReassign">Information for reassigning the work case</param>
            <returns>An RetentionAlertWorkCaseActionResponse indicating if there were any errors <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertWorkCaseActionResponse">reassign the retention alert case</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert open cases.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <accessComments>
            An authenticated user can reassign the retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.SetRetentionAlertEmailPreferenceAsync(System.String,Ellucian.Colleague.Dtos.Student.RetentionAlertSendEmailPreference)">
            <summary>
            Set the Send Email Preference 
            </summary>
            <param name="orgEntityId">Org Entity ID</param>
            <param name="sendEmailPreference">Information for setting send email preference</param>
            <returns>An RetentionAlertSendEmailPreference <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertSendEmailPreference">the send email preferences.</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert open cases.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <accessComments>
            An authenticated user can reassign the retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.RetentionAlertController.GetRetentionAlertEmailPreferenceAsync(System.String)">
            <summary>
            Get the Send Email Preference 
            </summary>
            <param name="orgEntityId">Org Entity ID</param>
            <returns>An RetentionAlertSendEmailPreference <see cref="T:Ellucian.Colleague.Dtos.Student.RetentionAlertSendEmailPreference">the send email preferences.</see></returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve retention alert open cases.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <accessComments>
            An authenticated user can reassign the retention alert case if they have one of the following permissions:
            WORK.CASES
            WORK.ANY.CASE
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController">
            <summary>
            Provides access to Section Grade Type data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SectionGradeTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.GetAsync">
            <summary>
            Retrieves all Section Grade Types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">Section Grade Type</see> codes and descriptions.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.GetSectionGradeTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4</remarks>
            <summary>
            Retrieves all section grade types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">SectionGradeTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.GetSectionGradeTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM Version 4</remarks>
            <summary>
            Retrieves a section grade type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">SectionGradeType.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.PostSectionGradeTypesAsync(Ellucian.Colleague.Dtos.SectionGradeType)">
            <summary>
            Creates a Section Grade Type.
            </summary>
            <param name="sectionGradeType"><see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">SectionGradeType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">SectionGradeType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.PutSectionGradeTypesAsync(System.String,Ellucian.Colleague.Dtos.SectionGradeType)">
            <summary>
            Updates a Section Grade Type.
            </summary>
            <param name="id">Id of the Section Grade Type to update</param>
            <param name="sectionGradeType"><see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">SectionGradeType</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.SectionGradeType">SectionGradeType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionGradeTypesController.DeleteSectionGradeTypesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Section Grade Type.
            </summary>
            <param name="id">Id of the Section Grade Type to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController">
            <summary>
            Provides access to SectionRegistrationStatuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            SectionRegistrationStatusesController constructor
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentReferenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.GetSectionRegistrationStatuses2Async">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves all SectionRegistrationStatuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationStatusItem2">SectionRegistrationStatus.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.GetSectionRegistrationStatusById2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN HEDM</remarks>
            <summary>
            Retrieves a SectionRegistrationStatus by ID.
            </summary>
            <param name="id">ID to desired SectionRegistrationStatus</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationStatusItem2">SectionRegistrationStatus.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.GetSectionRegistrationStatuses3Async">
            <remarks>FOR USE WITH EEDM</remarks>
            <summary>
            Retrieves all SectionRegistrationStatuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationStatusItem3">SectionRegistrationStatus.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.GetSectionRegistrationStatusById3Async(System.String)">
            <remarks>FOR USE WITH EEDM</remarks>
            <summary>
            Retrieves a SectionRegistrationStatus by ID.
            </summary>
            <param name="id">ID to desired SectionRegistrationStatus</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.SectionRegistrationStatusItem3">SectionRegistrationStatus.</see></returns>
            
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.PutSectionRegistrationStatusesAsync(Ellucian.Colleague.Dtos.SectionRegistrationStatusItem2)">
            <summary>
            Updates a SectionRegistrationStatus.
            </summary>
            <param name="sectionRegistrationStatus"><see cref="!:SectionRegistrationStatusItem2">SectionRegistrationStatus</see> to update</param>
            <returns>Newly updated <see cref="!:SectionRegistrationStatusItem2">SectionRegistrationStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.PostSectionRegistrationStatusesAsync(Ellucian.Colleague.Dtos.SectionRegistrationStatusItem2)">
            <summary>
            Creates a SectionRegistrationStatus.
            </summary>
            <param name="sectionRegistrationStatus"><see cref="!:SectionRegistrationStatusItem2">SectionRegistrationStatus</see> to create</param>
            <returns>Newly created <see cref="!:SectionRegistrationStatusItem2">SectionRegistrationStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionRegistrationStatusesController.DeleteSectionRegistrationStatusesAsync(System.String)">
            <summary>
            Delete (DELETE) an existing SectionRegistrationStatus.
            </summary>
            <param name="id">Id of the SectioinRegistrationStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SectionTransferStatusesController">
            <summary>
            Provides access to section transfer statuses
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionTransferStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TestsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SectionTransferStatusesController.GetAsync">
            <summary>
            Gets information for all section transfer statuses
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Domain.Student.Entities.SectionTransferStatus">section transfer statuses</see></returns>
            <note>SectionTransferStatus is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SpecializationsController">
            <summary>
            Provides access to Specialization data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SpecializationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MajorsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SpecializationsController.GetAsync">
            <summary>
            Retrieves all Specializations.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Specialization">Specialization</see> codes and descriptions.</returns>
            <note>Specialization is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController">
            <summary>
            Provides access to StudentAcademicPrograms data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicProgramService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAcademicProgramsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="StudentAcademicProgramService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAcademicProgramService">IStudentAcademicProgramService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor">Interface to the action context accessor</param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicProgramsByGuidAsync(System.String)">
            <summary>
            Retrieves an Student Academic Program by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicProgramsByGuid2Async(System.String)">
            <summary>
            Retrieves an Student Academic Program by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicProgramsByGuid3Async(System.String)">
            <summary>
            Retrieves an Student Academic Program by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms3">StudentAcademicPrograms</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicProgramsByGuid4Async(System.String)">
            <summary>
            Retrieves an Student Academic Program by ID.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms4">StudentAcademicPrograms</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicProgramsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of StudentAcademicPrograms objects based on selection criteria.
            </summary>
             <param name="page">page</param>
            <param name="student">Id (GUID) of the student enrolled on the academic program</param>
            <param name="startOn">Student Academic Programs that starts on or after this date</param>
            <param name="endOn">Student Academic Programs that ends on or before this date</param>
            <param name="program">academic program Name Contains ...program...</param>
            <param name="catalog">Student Academic Program catalog  equal to</param>
            <param name="enrollmentStatus">Student Academic Program status equals to </param>
            <param name="programOwner">The owner of the academic program. This property represents the global identifier for the Program Owner.</param>
            <param name="site">	The site (campus) the student enrolls for the program at</param>
            <param name="academicLevel">The academic level associated with the enrollment of the student in the academic program</param>
            <param name="graduatedOn">The date the student graduate from the program.</param>
            <param name="credentials">The academic credentials that can be awarded for completing an academic program</param>
            <param name="graduatedAcademicPeriod">Filter to provide the academic period the student graduated in.</param>
            <returns>List of StudentAcademicPrograms <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms"/> objects representing matching Student Academic Programs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicPrograms2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of StudentAcademicPrograms objects based on selection criteria.
            </summary>
             <param name="page">page</param>
            <param name="criteria">filter criteria</param>
            <returns>List of StudentAcademicPrograms <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2"/> objects representing matching Student Academic Programs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicPrograms3Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of StudentAcademicPrograms objects based on selection criteria.
            </summary>
             <param name="page">page</param>
            <param name="criteria">filter criteria</param>
            <returns>List of StudentAcademicPrograms <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms3"/> objects representing matching Student Academic Programs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetStudentAcademicPrograms4Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of StudentAcademicPrograms objects based on selection criteria.
            </summary>
             <param name="page">page</param>
            <param name="criteria">filter criteria</param>
            <param name="personFilter">person filter criteria</param>
            <returns>List of StudentAcademicPrograms <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms4"/> objects representing matching Student Academic Programs</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.CreateStudentAcademicProgramsAsync(Ellucian.Colleague.Dtos.StudentAcademicPrograms)">
            <summary>
            Creates an Student Academic Program.
            </summary>
            <param name="StudentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.CreateStudentAcademicPrograms2Async(Ellucian.Colleague.Dtos.StudentAcademicPrograms2)">
            <summary>
            Creates an Student Academic Program.
            </summary>
            <param name="StudentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.CreateStudentAcademicPrograms3Async(Ellucian.Colleague.Dtos.StudentAcademicPrograms3)">
            <summary>
            Creates an Student Academic Program.
            </summary>
            <param name="StudentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms3">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.UpdateStudentAcademicProgramsAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicPrograms)">
            <summary>
            Updates an Student Academic Program.
            </summary>
            <param name="id">Id of the Student Academic Program to update</param>
            <param name="studentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.UpdateStudentAcademicPrograms2Async(System.String,Ellucian.Colleague.Dtos.StudentAcademicPrograms2)">
            <summary>
            Updates an Student Academic Program.
            </summary>
            <param name="id">Id of the Student Academic Program to update</param>
            <param name="studentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.UpdateStudentAcademicPrograms3Async(System.String,Ellucian.Colleague.Dtos.StudentAcademicPrograms3)">
            <summary>
            Updates an Student Academic Program.
            </summary>
            <param name="id">Id of the Student Academic Program to update</param>
            <param name="studentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms3">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.DeleteStudentAcademicProgramsAsync(System.String)">
            <summary>
            Delete an existing student academic programs
            </summary>
            <param name="id">Employee GUID for update.</param>
            <returns>Currently not implemented.  Returns default not supported API error message.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.UpdateStudentAcademicProgramsSubmissionsAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicProgramsSubmissions)">
            <summary>
            Updates an Student Academic Program.
            </summary>
            <param name="id">Id of the Student Academic Program to update</param>
            <param name="studentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms">StudentAcademicPrograms</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms4">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.CreateStudentAcademicProgramsSubmissionsAsync(Ellucian.Colleague.Dtos.StudentAcademicProgramsSubmissions)">
            <summary>
            Creates an Student Academic Program.
            </summary>
            <param name="StudentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms2">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.CreateStudentAcademicProgramsReplacementsAsync(Ellucian.Colleague.Dtos.StudentAcademicProgramReplacements)">
            <summary>
            Creates an Student Academic Program.
            </summary>
            <param name="StudentAcademicPrograms"><see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms4">StudentAcademicPrograms</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentAcademicPrograms4">StudentAcademicPrograms</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetAcademicProgramsReplacementsByGuidAsync(System.String)">
            <summary>
            Update academic program replacement.
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.GetAcademicProgramsReplacementsAsync(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Update academic program replacement.
            </summary>
            <param name="page"></param>
            <param name="criteria"></param>
            <param name="personFilter"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.PutAcademicProgramsReplacementsAsync(System.String,Ellucian.Colleague.Dtos.StudentAcademicProgramReplacements)">
            <summary>
            Update academic program replacement.
            </summary>
            <param name="guid"></param>
            <param name="studentAcademicProgramReplacements"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.ValidateStudentAcademicPrograms(Ellucian.Colleague.Dtos.StudentAcademicPrograms)">
            <summary>
            Validates the data in the StudentAcademicPrograms object
            </summary>
            <param name="stuAcadProg">StudentAcademicPrograms from the request</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAcademicProgramsController.ValidateStudentAcademicPrograms2(Ellucian.Colleague.Dtos.StudentAcademicPrograms2)">
            <summary>
            Validates the data in the StudentAcademicPrograms object
            </summary>
            <param name="stuAcadProg">StudentAcademicPrograms from the request</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentAffiliationsController">
            <summary>
            Provides access to Student Affiliation data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAffiliationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentAffiliationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentAffiliationsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentAffiliationService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentAffiliationService">IStudentAffiliationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentAffiliationsController.QueryStudentAffiliationsAsync(Ellucian.Colleague.Dtos.Student.StudentAffiliationQueryCriteria)">
            <summary>
            Get a list of Student Affiliations from a list of Student keys
            </summary>
            <param name="criteria">DTO Object containing List of Student Keys, Affiliation and Term.</param>
            <returns>List of StudentAffiliation Objects <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTerm">StudentAffiliation</see></returns>
            <accessComments>
            API endpoint is secured with the VIEW.STUDENT.INFORMATION permission code
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentClassificationsController">
            <summary>
            Accesses Student classification data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentClassificationsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentsClassificationsController class.
            </summary>
            <param name="adapterRegistry">adapterRegistry</param>
            <param name="studentService">studentService</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentClassificationsController.GetStudentClassificationsAsync">
            <summary>
            Gets all student classification
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentClassificationsController.GetStudentClassificationByIdAsync(System.String)">
            <summary>
            Retrieves a student classification by id.
            </summary>
            <param name="id">Id of students classification to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.StudentClassification">student classification.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentClassificationsController.PostStudentClassificationAsync(Ellucian.Colleague.Dtos.StudentClassification)">
            <summary>
            POST student classification
            </summary>
            <param name="studentClassification"></param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.StudentClassification">student Classification.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentClassificationsController.PutStudentClassificationAsync(System.String,Ellucian.Colleague.Dtos.StudentClassification)">
            <summary>
            PUT student classification
            </summary>
            <param name="id"></param>
            <param name="studentClassification"></param>
            <returns>Dtos.StudentsClassification</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentClassificationsController.DeleteStudentClassificationAsync(System.String)">
            <summary>
            Delete student classification
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentCohortsController">
            <summary>
            Accesses Student cohorts data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentCohortsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentsCohortsController class.
            </summary>
            <param name="adapterRegistry">adapterRegistry</param>
            <param name="studentService">studentService</param>
            <param name="logger">logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentCohortsController.GetStudentCohortsAsync(Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Gets all student cohorts
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentCohortsController.GetStudentCohortByIdAsync(System.String)">
            <summary>
            Retrieves a student cohort by guid.
            </summary>
            <param name="id">Guid of students cohort to retrieve</param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.StudentCohort">student cohort.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentCohortsController.PostStudentCohortAsync(Ellucian.Colleague.Dtos.StudentCohort)">
            <summary>
            POST student cohort
            </summary>
            <param name="studentCohort"></param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.StudentCohort">student cohort.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentCohortsController.PutStudentCohortAsync(System.String,Ellucian.Colleague.Dtos.StudentCohort)">
            <summary>
            PUT student cohort
            </summary>
            <param name="id"></param>
            <param name="studentCohort"></param>
            <returns>Dtos.StudentsCohort</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentCohortsController.DeleteStudentCohortAsync(System.String)">
            <summary>
            Delete student cohort
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentLoadsController">
            <summary>
            Provides access to student load data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentLoadsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentLoadsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentLoadsController.GetAsync">
            <summary>
            Retrieves all Student Loads.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentLoad">Student Load</see> codes and descriptions.</returns>
            <note>StudentLoad is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentProgramsController">
            <summary>
            Provides access to AcademicHistory data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentProgramsController.#ctor(Ellucian.Colleague.Coordination.Student.Services.IStudentProgramService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the CoursesController class.
            </summary>
            <param name="service">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentProgramService">IStudentProgramService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentProgramsController.QueryStudentProgramsAsync(Ellucian.Colleague.Dtos.Student.StudentProgramsQueryCriteria)">
            <summary>
            Retrieves <see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram2">student programs</see> for the specified student IDs
            </summary>
            <param name="criteria">Criteria for retrieving student program information</param>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram2">student programs</see></returns>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes may view student program information for any student:
            
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            VIEW.STUDENT.INFORMATION
            
            An authenticated user with any of the following permission codes who does not have one of the permission codes above may view student program information for assigned advisees only:
            
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentProgramsController.AddStudentProgramAsync(System.String,Ellucian.Colleague.Dtos.Student.StudentAcademicProgram)">
            <summary>
            Create a new academic program for a student.
            </summary>
            <param name="studentId">student id</param>
            <param name="studentAcademicProgram">Information for adding a academic program for student</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram2"> Newly created student program</see></returns>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes can add student program
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            VIEW.STUDENT.INFORMATION
            An authenticated user with any of the following permission codes who does not have one of the permission codes above can add student program:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentProgramsController.UpdateStudentProgramAsync(System.String,Ellucian.Colleague.Dtos.Student.StudentAcademicProgram)">
            <summary>
            Update (PUT) an existing student academic program.
            </summary>
            <param name="studentId">student id</param>
            <param name="studentAcademicProgram">Information for updating a academic program for student</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram2"> Updated student program</see></returns>
            <accessComments>
            An authenticated user (advisor) with any of the following permission codes can update student program
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            VIEW.STUDENT.INFORMATION
            An authenticated user with any of the following permission codes who does not have one of the permission codes above can update student program:
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentsController">
            <summary>
            Accesses Student data
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IAcademicHistoryService,Ellucian.Colleague.Coordination.Student.Services.IStudentService,Ellucian.Colleague.Domain.Student.Repositories.IStudentProgramRepository,Ellucian.Colleague.Coordination.Student.Services.IStudentRestrictionService,Ellucian.Colleague.Domain.Student.Repositories.IRequirementRepository,Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the StudentsController class.
            </summary>
            <param name="adapterRegistry">Adapter Registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="academicHistoryService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IAcademicHistoryService">IAcademicHistoryService</see></param>
            <param name="studentService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentService">IStudentService</see></param>
            <param name="studentProgramRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentProgramRepository">IStudentProgramRepository</see></param>
            <param name="studentRestrictionService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentRestrictionService">IStudentRestrictionService</see></param>
            <param name="requirementRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IRequirementRepository">IRequirementRepository</see></param>
            <param name="emergencyInformationService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IEmergencyInformationService">IEmergencyInformationService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="apiSettings"></param>
            <param name="actionContextAccessor"></param>
            <param name="webHostEnvironment"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.QueryStudentsById4Async(Ellucian.Colleague.Dtos.Student.StudentQueryCriteria)">
            <summary>
            Action to get Students from a list of Ids.
            Marital status can be null.
            Filter out student advisements which ended today or earlier.
            </summary>
            <param name="criteria">Query criteria for retrieving students.</param>
            <returns>StudentBatch3 DTO Objects</returns>
            <accessComments>
            Authenticated users with the VIEW.PERSON.INFORMATION and VIEW.STUDENT.INFORMATION permission can query students.
            
            Student privacy is enforced by this response. If any student has an assigned privacy code that the requestor is not authorized to access, 
            the response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of students. 
            In this situation, all details except the student name are cleared from the specific student object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostStudentIdsAsync(Ellucian.Colleague.Dtos.Student.StudentQuery)">
            <summary>
            Gets list of students keys for a given term only.  Other parameters are ignored.
            </summary>
            <param name="studentQuery">Query parameter object</param>
            <returns>List of students for a term.  Only the termId parameter is used at this time.<see cref="N:Ellucian.Colleague.Api.Controllers.Student">Student IDs</see></returns>
            <accessComments>
            User with permission of VIEW.STUDENT.INFORMATION can retrieve student Ids for given term.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentProgramsAsync(System.String,System.Boolean)">
            <summary>
            Gets information the programs in which the specified student is enrolled.
            </summary>
            <param name="studentId">Student's ID</param>
            <param name="currentOnly">Boolean to indicate whether this request is for active student programs, or ended/past programs as well</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram">Programs</see> in which the specified student is enrolled.</returns>
            <accessComments>
            Student information can be retrieved only when:
            1. A Student is accessing its own data.
            2. Proxy user is accessing the student's data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
            <note>Student Program is cached for 5 minutes.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetAcademicHistoryAsync(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Retrieves the academic history for the student. This groups the information on a term by term basis (separating out the non-term classes).
            </summary>
            <param name="studentId">Id of the student</param>
            <param name="bestFit">(Optional) If true, non-term credit is fitted into terms based on dates</param>
            <param name="filter">(Optional) used to filter to active credit only.</param>
            <param name="term">(Optional) used to return only a specific term of data.</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory">Academic History</see> for the student.</returns>
            <accessComments>
            Student academic history can be retrieved by:
            1. A Student is accessing its own data
            2. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            4. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetAcademicHistory2Async(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Retrieves the academic history for the student. This groups the information on a term by term basis (separating out the non-term classes).
            </summary>
            <param name="studentId">Id of the student</param>
            <param name="bestFit">(Optional) If true, non-term credit is fitted into terms based on dates</param>
            <param name="filter">(Optional) used to filter to active credit only.</param>
            <param name="term">(Optional) used to return only a specific term of data.</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory2">Academic History</see> for the student.</returns>
            <accessComments>
            Student academic history can be retrieved by:
            1. A Student is accessing its own data
            2. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            4. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetAcademicHistory3Async(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Retrieves the academic history for the student. This groups the information on a term by term basis (separating out the non-term classes).
            </summary>
            <param name="studentId">Id of the student</param>
            <param name="bestFit">(Optional) If true, non-term credit is fitted into terms based on dates</param>
            <param name="filter">(Optional) used to filter to active credit only.</param>
            <param name="term">(Optional) used to return only a specific term of data.</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory3">Academic History</see> for the student.</returns>
            <accessComments>
            Student academic history can be retrieved by:
            1. A Student is accessing its own data,
            2. A proxy is accessing data for allowed student,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetAcademicHistory4Async(System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Retrieves the academic history for the student. This groups the information on a term by term basis (separating out the non-term classes).
            </summary>
            <param name="studentId">Id of the student</param>
            <param name="bestFit">(Optional) If true, non-term credit is fitted into terms based on dates</param>
            <param name="filter">(Optional) used to filter to active credit only.</param>
            <param name="term">(Optional) used to return only a specific term of data.</param>
            <param name="includeDrops">(Optional) used to include dropped academic credits</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory4">Academic History</see> for the student.</returns>
            <accessComments>
            Student academic history can be retrieved by:
            1. A Student is accessing its own data,
            2. A proxy is accessing data for allowed student,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetAcademicHistory5Async(System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the academic history for the student. 
            This retrieves all the raw academic credits which includes:
            Academic credits that were imported without student being registered to the section.
            Academic credits that were transfer, dropped, withdrawn or non-course credits based upon filter and includeDrop parameters.
            This groups the information on a term by term basis (separating out the non-term classes).
            </summary>
            <param name="studentId">Id of the student</param>
            <param name="bestFit">(Optional) If true, non-term credit is fitted into terms based on dates</param>
            <param name="filter">(Optional) used to filter to active credit only.</param>
            <param name="term">(Optional) used to return only a specific term of data.</param>
            <param name="includeDrops">(Optional) used to include dropped academic credits</param>
            <param name="retrieveGradeRestrictions">(Optional) Default is true. If false then student's grade view restrictions will not be retrieved and returned with academic credits</param>
            <param name="byPassGradeRestrictionsCache">(Optional) This is to retrieve grade restrictions from cache or make a CTX call to get real time restrictions. Default is true which means cache will be bypassed hence CTX will be called</param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.AcademicHistory4">Academic History</see> for the student.</returns>
            <accessComments>
            Student academic history can be retrieved by:
            1. A Student is accessing its own data,
            2. A proxy is accessing data for allowed student,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentRestrictionsAsync(System.String)">
            <summary>
            Retrieves the Student Restrictions for the provided student. Obsolete as of 1.11 - use GetStudentRestrictionsAsync2
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>All  <see cref="T:Ellucian.Colleague.Dtos.Base.PersonRestriction">Student Restrictions</see> for the provided student.</returns>
            <accessComments>
            Student restrictions can be retrieved by:
            1. A Student is accessing its own data,
            2. A proxy is accessing data for allowed student,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentRestrictionsAsync2(System.String)">
            <summary>
            Retrieves the Student Restrictions for the provided student.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>All  <see cref="T:Ellucian.Colleague.Dtos.Base.PersonRestriction">Student Restrictions</see> for the provided student.</returns>
            <accessComments>
            Student restrictions can be retrieved by:
            1. A Student is accessing its own data,
            2. A proxy is accessing data for allowed student and has 1 or more proxy permissions,
            3. An Advisor with any of the following permissions is accessing any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following permissions is accessing one of his or her assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentRestrictions3Async(System.String)">
            <summary>
            Retrieves the Student Restrictions for the provided student.
            If the request header "Cache-Control" attribute is set to "no-cache" the data returned will be pulled fresh from the database, otherwise cached data is returned.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>All  <see cref="T:Ellucian.Colleague.Dtos.Base.PersonRestriction">Student Restrictions</see> for the provided student.</returns>
            <accessComments>
            Student restrictions can be retrieved by:
            1. A Student is accessing its own data,
            2. A person who has been granted Core Notification workflow proxy access for the student,
            3. A user with permission of VIEW.PERSON.RESTRICTIONS is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostStudentRestrictionsQuery(Ellucian.Colleague.Dtos.Student.StudentRestrictionsQueryCriteria)">
            <summary>
            Retrieves the Student Restrictions for the provided list of students or list of Restriction keys.
            </summary>
            <param name="criteria">DTO object which contains Student keys or Restriction keys for selection</param>
            <returns>Returns a list of <see cref="T:Ellucian.Colleague.Dtos.Base.PersonRestriction">PersonRestriction</see> DTO objects for the provided list of students or restrictions.</returns>    
            <accessComments>
            Only users with VIEW.STUDENT.INFORMATION permission can retrieve student restrictions for the provided list of students or list of restriction keys.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetRegistrationEligibilityAsync(System.String)">
            <summary>
            Check to see if the user is eligible to register for the provided term
            </summary>
            <param name="id">The user's ID</param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationMessage"/>Registration Messages.</returns>
            <accessComments>
            A person may retrieve their own registration eligibility.
            A proxy may retrieve data for allowed student.
            An authenticated user (advisor) with any of the following permission codes may retrieve registration eligibility for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            An authenticated user (advisor) with any of the following permission codes may retrieve registration eligibility for any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetRegistrationEligibility2Async(System.String)">
            <summary>
            Checks to see if the student is eligible to register.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationEligibility">Registration Eligibility </see> information containing messages, which, if present, indicate the student
            is ineligible, in addition to a boolean HasOverride, set to true if the current user has the ability to override ineligibility.</returns>
            <accessComments>
            A person may retrieve their own registration eligibility.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve registration eligibility for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve registration eligibility for any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetRegistrationEligibility3Async(System.String)">
            <summary>
            Checks to see if the student is eligible to register.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationEligibility">Registration Eligibility </see> information containing messages, which, if present, indicate the student
            is ineligible, in addition to a boolean HasOverride, set to true if the current user has the ability to override ineligibility.</returns>
            <accessComments>
            A person may retrieve their own registration eligibility.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve registration eligibility for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve registration eligibility for any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetRegistrationPrioritiesAsync(System.String)">
            <summary>
            Retreive student's registration priority information.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.Student.RegistrationPriority">RegistrationPriority</see> registration priority information specific to a student</returns>
            <accessComments>
            A person may retrieve their own registration priorities.
            
            An authenticated user (advisor) with any of the following permission codes may retrieve registration priorities for one of their assigned advisees
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            
            An authenticated user (advisor) with any of the following permission codes may retrieve registration priorities for any student
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetTranscriptRestrictions2Async(System.String)">
            <summary>
            Retrieves the transcript restrictions for the provided student.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>Information used to determine if a student should be prevented from seeing or requesting their transcript.</returns>
            <accessComments>
            1. User must be requesting their own data.
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetTranscriptRestrictionsAsync(System.String)">
            <summary>
            Retrieves the transcript restrictions for the provided student.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>All transcript restrictions for the provided student.</returns>
            <accessComments>
            User must be requesting their own data, or requesting information for advisee with adequate permissions
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetUngradedTermsAsync(System.String)">
            <summary>
            Retrieves the ungraded Terms for the provided student.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>All ungraded  <see cref="T:Ellucian.Colleague.Dtos.Student.Term">Terms</see> for the student.</returns>
             <accessComments>
            Ungraded terms for a student can be retrieved only if:
            1. A Student is accessing its own data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostSearchStudentAsync(Ellucian.Colleague.Dtos.Student.StudentQuery)">
            <summary>
            Retrieves Students, including references to the student's Degree Plan, Programs and Restrictions and some demographic information, for those students who match the provided query parameters. At a minimum, Date of Birth and Last Name are required parameters.
            </summary>
            <param name="studentQuery">Query parameter object</param>
            <returns>All <see cref="N:Ellucian.Colleague.Api.Controllers.Student">Students</see> who matched the query.</returns>
            <accessComments>
            Only users with permission VIEW.ANY.ADVISEE can perform search on students.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostTranscriptOrderAsync(Ellucian.Colleague.Dtos.Student.Transcripts.TranscriptRequest)">
            <summary>
            Accepts a transcript order and enters it into Colleague.  
            </summary>
            <param name="transcriptRequest">PESC XML Transcript Request</param>
            <returns>HTTP 201 if successful; in the body, the status of the request, and the date, if any, of expected future processing.</returns>
            <accessComments>
            Users must have the VIEW.ANY.ADVISEE permission to create transcript orders
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetTranscriptOrderStatusAsync(System.String,System.String)">
            <summary>
            gets the current status of a transcript order
            </summary>
            <param name="orderId">Third-party-generated order ID</param>
            <param name="currentStatusCode">The cloud's current understanding of the order's status</param>
            <returns>Base-64 encoded PESC XML Transcript Response</returns>
            <accessComments>
            Users must have the VIEW.ANY.ADVISEE permission to check transcript order statuses
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetUnofficialTranscriptAsync(System.String,System.String)">
            <summary>
            Retrieves a pdf of the student's unofficial transcript. 
            </summary>
            <param name="studentId">The system id for the student whose transcript is being requested</param>
            <param name="transcriptGrouping">The transcript grouping of transcript to return. If empty, transcripts of all grouping types will be returned for the student</param>
            <returns>A pdf of the student's unofficial transcript</returns>
            <accessComments>
            1. User must be requesting their own data.
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetEmergencyInformationAsync(System.String)">
            <summary>
            Get all the emergency information for a person.
            </summary>
            <param name="studentId">Pass in a student's ID</param>
            <returns>Returns all the emergency information for the specified person</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PutEmergencyInformation(Ellucian.Colleague.Dtos.Base.EmergencyInformation)">
            <summary>
            Update a person's emergency information.
            </summary>
            <param name="emergencyInformation">An emergency information object</param>
            <returns>The updated emergency information object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.RegisterAsync(System.String,System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.Student.SectionRegistration})">
            <summary>
            Process course section registration requests for a student. 
            </summary>
            <param name="studentId">Id of student</param>
            <param name="sectionRegistrations">Registration requests to process</param>
            <returns>A registration response which includes any messages from registration</returns>
            <accessComments>
            A person may perform registration actions (register, drop, waitlist, etc) for themselves.  
            An advisor with ALL.ACCESS.ANY.ADVISEE may perform registration actions for any student.
            An advisor with ALL.ACCESS.ASSIGNED.ADVISEES may perform registration actions for one of their assigned advisees.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostRegisterValidationOnlyAsync(System.String,Ellucian.Colleague.Dtos.Student.StudentRegistrationValidationOnlyRequest)">
            <summary>
            Execute a set of registration actions to validate success or failure, but do not actually record the registration in the database.
            </summary>
            <param name="studentGuid">GUID of student to register</param>
            <param name="studentRegistrationRequest">A registration request</param>
            <returns>Results of the registration</returns>
            <accessComments>
            The user must have the REGISTER.VALIDATION.ONLY permission
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostRegisterSkipValidationsAsync(System.String,Ellucian.Colleague.Dtos.Student.StudentRegistrationSkipValidationsRequest)">
            <summary>
            Process course section registration requests for a student, bypassing validations. For use with cross-registration.
            </summary>
            <param name="studentGuid">GUID of student to register</param>
            <param name="studentRegistrationRequest">A registration request</param>
            <returns>Results of the registration</returns>
            <accessComments>
            The user must have the REGISTER.SKIP.VALIDATION permission
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.DropRegistrationAsync(System.String,Ellucian.Colleague.Dtos.Student.SectionDropRegistration)">
            <summary>
            Process drop course section requests by faculty for a student. 
            </summary>
            <param name="studentId">Id of student</param>
            <param name="sectionDropRegistration">Section Drop Registration request to process</param>
            <returns>A registration response which includes any messages from drop registration</returns>
            <accessComments>
            Faculty with DROP.STUDENT or a departmental oversight person with CREATE.SECTION.DROP.STUDENT may perform drop section action for students.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentAsync(System.String)">
            <summary>
            Retrieves information for the specified student, including references to the student's DegreePlan, Programs and Restrictions and some demographic information.
            </summary>
            <param name="studentId">Id of the student</param>
            <returns>Information about this <see cref="N:Ellucian.Colleague.Api.Controllers.Student">Student</see></returns>
            <accessComments>
            Student information can be retrieved only if:
            1. A Student is accessing its own data.
            2. Proxy user is accessing the student's data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permissions of VIEW.PERSON.INFORMATION and VIEW.STUDENT.INFORMATION is accessing the student's data.
            
             Privacy is enforced by this response. If any student has an assigned privacy code that the advisor or faculty is not authorized to access, the Student response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned. In this situation, 
            all details except the student name are cleared from the specific Student object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.QueryStudentByPost2Async(Ellucian.Colleague.Dtos.Student.StudentSearchCriteria,System.Int32,System.Int32)">
            <summary>
            Retrieves information for the searched student.
            </summary>
            <param name="criteria">Query criteria for retrieving students.</param>
            <param name="pageSize">Number of records to retrieve per page</param>
            <param name="pageIndex">Page number</param>
            <returns>Information about the queried student(s)</returns>
            <accessComments>
            Authenticated users with the VIEW.PERSON.INFORMATION and VIEW.STUDENT.INFORMATION permissions can query students.
            
            Student privacy is enforced by this response. If any student has an assigned privacy code that the requestor is not authorized to access, 
            the response object is returned with an X-Content-Restricted header with a value of "partial" to indicate only partial information is returned for some subset of students. 
            In this situation, all details except the student name are cleared from the specific student object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentPrograms2Async(System.String,System.Boolean)">
            <summary>
            Gets information the programs in which the specified student is enrolled.
            </summary>
            <param name="studentId">Student's ID</param>
            <param name="currentOnly">Boolean to indicate whether this request is for active student programs, or ended/past programs as well</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentProgram2">Programs</see> in which the specified student is enrolled.</returns>
            <accessComments>
            Student information can be retrieved only if:
            1. A Student is accessing its own data.
            2. Proxy user is accessing the student's data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentsAsync(Ellucian.Web.Http.Models.Paging,System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of Students objects based on page.
            </summary>
             <param name="page">page</param>
            <param name="person">GUID for a reference to link a student to the common HEDM persons entity.</param>
            <param name="type">GUID for the type of the student.</param>
            <param name="cohorts">GUID for the groupings of students for reporting/tracking purposes (cohorts) to which the student is associated.</param>
            <param name="residency">GUID for the residency type for selecting students.</param>
            <returns>List of Students <see cref="T:Ellucian.Colleague.Dtos.Students"/> objects representing matching Students</returns>
            <accessComments>
            Authenticated users with VIEW.STUDENT.INFORMATION can query students.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudents2Async(Ellucian.Web.Http.Models.Paging,Ellucian.Web.Http.Models.QueryStringFilter,Ellucian.Web.Http.Models.QueryStringFilter)">
            <summary>
            Return a list of Students objects based on page.
            </summary>
             <param name="page">page</param>
            <param name="criteria">Person search criteria in JSON format</param>
            <param name="personFilter">Selection from SaveListParms definition or person-filters</param>
            <returns>List of Students <see cref="T:Ellucian.Colleague.Dtos.Students"/> objects representing matching Students</returns>
            <accessComments>
            Authenticated users with VIEW.STUDENT.INFORMATION permission can query students.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentsByGuidAsync(System.String)">
            <summary>
            Retrieves a Student by Guid.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Students">Students</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentsByGuid2Async(System.String)">
            <summary>
            Retrieves a Student by Guid.
            </summary>
            <returns>An <see cref="T:Ellucian.Colleague.Dtos.Students">Students</see>object.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PostStudentAsync(Ellucian.Colleague.Dtos.Students)">
            <summary>        
            Creates a Student
            </summary>
            <param name="student"><see cref="T:Ellucian.Colleague.Dtos.Students">Student</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Students">Student</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PutStudentAsync(System.String,Ellucian.Colleague.Dtos.Students)">
            <summary>        
            Updates a Student.
            </summary>
            <param name="guid">Id of the Student to update</param>
            <param name="student"><see cref="N:Ellucian.Colleague.Dtos.Student">Student</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Students">Student</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.PutStudent2Async(System.String,Ellucian.Colleague.Dtos.Students2)">
            <summary>        
            Updates a Student.
            </summary>
            <param name="guid">Id of the Student to update</param>
            <param name="student"><see cref="N:Ellucian.Colleague.Dtos.Student">Student</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Students">Student</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.DeleteStudentByGuidAsync(System.String)">
            <summary>
            Delete (DELETE) an existing Student
            </summary>
            <param name="guid">Id of the Student to delete</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetPlanningStudentAsync(System.String)">
            <summary>
            Retrieves a student that contains only information needed for degree planning.
            </summary>
            <param name="studentId"></param>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.PlanningStudent">PlanningStudent</see> object.  </returns>
            <accessComments>
            Student information can be retrieved only if:
            1. A Student is accessing its own data.
            2. Proxy user is accessing the student's data.
            3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            5. A user with permissions of VIEW.PERSON.INFORMATION and VIEW.STUDENT.INFORMATION is accessing the student's data.
            
             Privacy is enforced by this response. If any student has an assigned privacy code that the advisor or faculty is not authorized to access, the PlanningStudent response object is returned with a
            X-Content-Restricted header with a value of "partial" to indicate only partial information is returned. In this situation, 
            all details except the student name are cleared from the specific planning student object.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentsController.GetStudentAcademicLevelsAsync(System.String)">
             <summary>
             This retrieves student's academic levels.
             </summary>
             <param name="studentId">Student Id</param>
             <returns>List of Student's Academic Levels</returns>
            <accessComments>
             Student Academic Levels can be retrieved only if:
             1. A Student is accessing its own data.
             2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
             VIEW.ANY.ADVISEE
             REVIEW.ANY.ADVISEE
             UPDATE.ANY.ADVISEE
             ALL.ACCESS.ANY.ADVISEE
             3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
             VIEW.ASSIGNED.ADVISEES
             REVIEW.ASSIGNED.ADVISEES
             UPDATE.ASSIGNED.ADVISEES
             ALL.ACCESS.ASSIGNED.ADVISEES
             4. A user with permission of VIEW.STUDENT.INFORMATION is accessing the student's data. 
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentStandingsController">
            <summary>
            Provides access to Address data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStandingsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentStandingService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentStandingsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentStandingService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentStandingService">IStudentStandingService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStandingsController.QueryStudentStandingsAsync(Ellucian.Colleague.Dtos.Student.StudentStandingsQueryCriteria)">
            <summary>
            Get a list of Student Standings from a list of Student keys
            </summary>
            <param name="criteria">DTO Object containing List of Student Keys and Term.</param>
            <returns>List of StudentStanding Objects <see cref="T:Ellucian.Colleague.Dtos.Student.StudentStanding">StudentStanding</see></returns>
            <accessComments>
            API endpoint is secured with VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStandingsController.GetStudentAcademicStandingsAsync(System.String)">
             <summary>
             This retrieves student's academic standings.
             </summary>
             <param name="studentId">Student Id</param>
             <returns>List of Student's Academic Standings</returns>
            <accessComments>
             Student Academic Standings can be retrieved only if:
             1. A Student is accessing its own data.
             3. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
             VIEW.ANY.ADVISEE
             REVIEW.ANY.ADVISEE
             UPDATE.ANY.ADVISEE
             ALL.ACCESS.ANY.ADVISEE
             4. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
             VIEW.ASSIGNED.ADVISEES
             REVIEW.ASSIGNED.ADVISEES
             UPDATE.ASSIGNED.ADVISEES
             ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentStatusesController">
            <summary>
            Provides access to StudentStatus data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStatusesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentStatusesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStatusesController.GetStudentStatusesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 6</remarks>
            <summary>
            Retrieves all student statuses.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.StudentStatus">StudentStatuses.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStatusesController.GetStudentStatusByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 6</remarks>
            <summary>
            Retrieves an student status by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.StudentStatus">StudentStatus.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStatusesController.PutStudentStatusAsync(Ellucian.Colleague.Dtos.StudentStatus)">
            <summary>
            Updates a StudentStatus.
            </summary>
            <param name="studentStatus"><see cref="T:Ellucian.Colleague.Dtos.StudentStatus">StudentStatus</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.StudentStatus">StudentStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStatusesController.PostStudentStatusAsync(Ellucian.Colleague.Dtos.StudentStatus)">
            <summary>
            Creates a StudentStatus.
            </summary>
            <param name="studentStatus"><see cref="T:Ellucian.Colleague.Dtos.StudentStatus">StudentStatus</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.StudentStatus">StudentStatus</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentStatusesController.DeleteStudentStatusAsync(System.String)">
            <summary>
            Delete (DELETE) an existing StudentStatus
            </summary>
            <param name="id">Id of the StudentStatus to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentTermsController">
            <summary>
            Provides access to Student Academic term data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTermsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.IStudentTermService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentStandingsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="studentTermService">Repository of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.IStudentTermService">IStudentTermService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTermsController.QueryStudentTermsAsync(Ellucian.Colleague.Dtos.Student.StudentTermsQueryCriteria)">
            <summary>
            Get a list of Student Terms from a list of Student keys
            </summary>
            <param name="criteria">DTO Object containing List of Student Keys, Academic Level and Term.</param>
            <returns>List of StudentTerm Objects <see cref="T:Ellucian.Colleague.Dtos.Student.StudentTerm">StudentTerm</see></returns>
            <accessComments>
            API endpoint is secured with VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTermsController.QueryPilotStudentTermsGpaAsync(Ellucian.Colleague.Dtos.Student.StudentTermsQueryCriteria)">
            <summary>
            Gets Pilot student term GPA based on query criteria of studentIds and term.
            </summary>
            <param name="criteria">Contains selection criteria:
            StudentIds: List of IDs.
            Term: Term filter for academic history</param>
            <returns>PilotAcademicHistoryLevel DTO Objects, including cumulative term GPA for selected credits</returns>
            <accessComments>
            Users with VIEW.STUDENT.INFORMATION permission can retrieve Pilot student term GPA.
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentTransferWorkController">
            <summary>
            Provides access to Student Transfer Work related data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTransferWorkController.#ctor(Ellucian.Colleague.Coordination.Student.Services.ITransferWorkService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentTransferWorkController class.
            </summary>
            <param name="transferWorkService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ITransferWorkService">ITransferWorkServices</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTransferWorkController.GetStudentTransferWorkAsync(System.String)">
            <summary>
            Get student transfer equivalency work for a student
            </summary>
            <param name="studentId">Student ID</param>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the student id is not provided to get the transfer summary data.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. Forbidden returned if the user is not allowed to retrieve transfer summary data.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>. BadRequest returned if the DTO is not present in the request or any unexpected error has occured.</exception>
            <accessComments>
            1. User must be requesting their own data.
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
            <returns>Returns a list of transfer equivalencies for a student.</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.StudentTypesController">
            <summary>
            Provides access to StudentType data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the StudentTypesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.GetAsync">
            <summary>
            Get all studentTypes.
            </summary>
            <returns>List of <see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentType</see> data.</returns>
            <note>StudentType is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.GetStudentTypesAsync">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 6</remarks>
            <summary>
            Retrieves all student types.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentTypes.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.GetStudentTypeByIdAsync(System.String)">
            <remarks>FOR USE WITH ELLUCIAN EEDM Version 6</remarks>
            <summary>
            Retrieves an student type by ID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentType.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.PutStudentTypeAsync(Ellucian.Colleague.Dtos.StudentType)">
            <summary>
            Updates a StudentType.
            </summary>
            <param name="studentType"><see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentType</see> to update</param>
            <returns>Newly updated <see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.PostStudentTypeAsync(Ellucian.Colleague.Dtos.StudentType)">
            <summary>
            Creates a StudentType.
            </summary>
            <param name="studentType"><see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentType</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Student.StudentType">StudentType</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.StudentTypesController.DeleteStudentTypeAsync(System.String)">
            <summary>
            Delete (DELETE) an existing StudentType
            </summary>
            <param name="id">Id of the StudentType to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.SubjectsController">
            <summary>
            Provides access to Subject data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Ellucian.Colleague.Coordination.Student.Services.ICurriculumService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the SubjectsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="curriculumService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ICurriculumService">ICurriculumService</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.GetAsync">
            <summary>
            Retrieves all Subjects. Includes an indicator as to whether to show the subject in the course catalog.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Subject">Subject</see> codes and descriptions.</returns>
            <note>Subject is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.GetSubjects2Async">
            <remarks>FOR USE WITH ELLUCIAN CDM</remarks>
            <summary>
            Retrieves all subjects.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Subject2">Subjects.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.GetSubjectByGuid2Async(System.String)">
            <remarks>FOR USE WITH ELLUCIAN CDM</remarks>
            <summary>
            Retrieves a subject by GUID.
            </summary>
            <returns>A <see cref="T:Ellucian.Colleague.Dtos.Subject2">Subject.</see></returns> 
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.PostSubject(Ellucian.Colleague.Dtos.Subject2)">
            <summary>
            Creates a Subject.
            </summary>
            <param name="subject"><see cref="T:Ellucian.Colleague.Dtos.Subject2">Subject</see> to create</param>
            <returns>Newly created <see cref="T:Ellucian.Colleague.Dtos.Subject2">Subject</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.PutSubject(System.String,Ellucian.Colleague.Dtos.Subject2)">
            <summary>
            Updates a Subject.
            </summary>
            <param name="id">Id of the Subject to update</param>
            <param name="subject"><see cref="T:Ellucian.Colleague.Dtos.Subject2">Subject</see> to create</param>
            <returns>Updated <see cref="T:Ellucian.Colleague.Dtos.Subject2">Subject</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.SubjectsController.DeleteSubject(System.String)">
            <summary>
            Delete an existing Subject
            </summary>
            <param name="id">Id of the Subject to delete</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TermsController">
            <summary>
            Provides access to Term data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TermsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.ITermRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TermsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="termRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.ITermRepository">ITermRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">Logger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TermsController.GetPlanningTermsAsync">
            <summary>
            Retrieves all Terms that are available to add to a Degree Plan for planning purposes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Term">Terms</see> that are available to add to a Degree Plan for planning purposes.</returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Term is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TermsController.GetRegistrationTermsAsync">
            <summary>
            Retrieves all Terms that are open for pre-registration or registration.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Term">Terms</see> that are open for pre-registration or registration.</returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Term is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TermsController.GetAllTermsAsync(System.Nullable{System.DateTime})">
            <summary>
            Retrieves all terms with the option to limit by start date.
            </summary>
            <param name="startsOnOrAfter">The earliest start date of terms to retrieve. May be null to get all terms.</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.Term">Terms</see>. If a start date was specified, then all Terms starting on or after the start date.</returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Term is cached for 24 hours.</note>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TermsController.GetAsync(System.String)">
            <summary>
            Retrieves a specific Term.
            </summary>
            <param name="id">Id of the term desired</param>
            <returns>The requested <see cref="T:Ellucian.Colleague.Dtos.Student.Term">Term</see></returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Term is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TestResultsController">
            <summary>
            Provides access to Student Test Results data for Admissions, Placement and Other Tests
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestResultsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ITestResultService,Ellucian.Colleague.Domain.Student.Repositories.ITestResultRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TestsResultsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="testResultService">Service for TestResult <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ITestResultService">ITestResultService</see>/></param>
            <param name="testResultRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.ITestResultRepository">ITestResultRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestResultsController.GetAsync(System.String,System.String)">
            <summary>
            Gets test results for a specific student.
            </summary>
            <param name="studentId">Student ID to retrieve test scores for</param>
            <param name="type">Type of test to select (admissions, placement, other).  If no type is provided all tests will be returned. </param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.TestResult">Test Results</see> for the given student, limited to type requested.</returns>
            <accessComments>
            1. User must be requesting their own data.
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestResultsController.Get2Async(System.String,System.String)">
            <summary>
            Gets test results for a specific student.
            </summary>
            <param name="studentId">Student ID to retrieve test scores for</param>
            <param name="type">Type of test to select (admissions, placement, other).  If no type is provided all tests will be returned. </param>
            <returns>The <see cref="T:Ellucian.Colleague.Dtos.Student.TestResult2">Test Results</see> for the given student, limited to type requested.</returns>
            <accessComments>
            1. User must be requesting their own data.
            2. An Advisor with any of the following codes is accessing the student's data if the student is not assigned advisee.
            VIEW.ANY.ADVISEE
            REVIEW.ANY.ADVISEE
            UPDATE.ANY.ADVISEE
            ALL.ACCESS.ANY.ADVISEE
            3. An Advisor with any of the following codes is accessing the student's data if the student is assigned advisee.
            VIEW.ASSIGNED.ADVISEES
            REVIEW.ASSIGNED.ADVISEES
            UPDATE.ASSIGNED.ADVISEES
            ALL.ACCESS.ASSIGNED.ADVISEES
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestResultsController.QueryTestResultsAsync(Ellucian.Colleague.Dtos.Student.TestResultsQueryCriteria)">
            <summary>
            Gets all test results for a list of Student Ids
            </summary>
            <param name="criteria">DTO Object containing a list of student Ids and Type.</param>
            <returns>TestResults DTO Objects</returns>
            <accessComments>
            API endpoint is secured with VIEW.STUDENT.INFORMATION permission.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestResultsController.QueryTestResults2Async(Ellucian.Colleague.Dtos.Student.TestResultsQueryCriteria)">
            <summary>
            Gets all test results for a list of Student Ids
            </summary>
            <param name="criteria">DTO Object containing a list of student Ids and Type.</param>
            <returns>TestResults DTO Objects</returns>
            <accessComments>
            User with VIEW.STUDENT.INFORMATION permission can retrieve test results for the students. 
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TestsController">
            <summary>
            Provides access to Non Courses (Tests) data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TestsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="testRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TestsController.GetAsync">
            <summary>
            Gets information for all Tests
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Domain.Student.Entities.Test">Tests</see></returns>
            [CacheControlFilter(Public = true, MaxAgeHours = 1, Revalidate = true)]
            <note>Test is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TopicCodesController">
            <summary>
            Provides access to TopicCodes
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TopicCodesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
             <summary>
             TopicCodesController constructor
             </summary>
             <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
             <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="logger">Repository of type <see cref="T:Microsoft.Extensions.Logging.ILogger">ILogger</see></param>
             <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TopicCodesController.GetAsync">
            <summary>
            Retrieves all Topic Codes.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.TopicCode">Topic Code</see> codes and descriptions</returns>
            <note>TopicCode is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TranscriptCategoriesController">
            <summary>
            Provides access to transcript category data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TranscriptCategoriesController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the TranscriptCategoriesController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="referenceDataRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Student.Repositories.IStudentReferenceDataRepository">IStudentReferenceDataRepository</see></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TranscriptCategoriesController.GetAsync">
            <summary>
            Retrieves all Transcript Categories.
            </summary>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Student.TranscriptCategory">Transcript Category</see> codes and descriptions.</returns>
            <note>TranscriptCategory is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TranscriptGroupingsController">
            <summary>
            Provides access to transcript grouping data.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TranscriptGroupingsController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Ellucian.Colleague.Coordination.Student.Services.ITranscriptGroupingService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Initializes a new instance of the MajorsController class.
            </summary>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="transcriptGroupingService">Service of type <see cref="T:Ellucian.Colleague.Coordination.Student.Services.ITranscriptGroupingService">ITranscriptGroupingService</see></param>
            <param name="logger">Interface to Logger</param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TranscriptGroupingsController.GetSelectableTranscriptGroupingsAsync">
            <summary>
            Return the set of transcript groupings that are user-selectable
            </summary>
            <returns>A set of transcript groupings</returns>
            <note>TranscriptGrouping is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.EmployeeTimeSummaryController">
            <summary>
            Exposes access to employee time summary information 
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.EmployeeTimeSummaryController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.IEmployeeTimeSummaryService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="employeeTimeSummaryService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.EmployeeTimeSummaryController.QueryEmployeeTimeSummaryAsync(Ellucian.Colleague.Dtos.TimeManagement.EmployeeTimeSummaryQueryCriteria)">
            <summary>
            Gets a summary of employee time information based on criteria provided.
            
            The endpoint will not return the requested EmployeeTimeSummary if:
                1.  400 - criteria was not provided
                2.  403 - criteria contains Ids that do not have permission to get requested EmployeeTimeSummary
                3.  404 - EmployeeTimeSummary resources requested do not exist
            </summary>
            <param name="criteria">Criteria used to select EmployeeTimeSummary objects <see cref="T:Ellucian.Colleague.Dtos.TimeManagement.EmployeeTimeSummaryQueryCriteria">.</see></param>
            <returns>A list of <see cref="T:Ellucian.Colleague.Dtos.TimeManagement.EmployeeTimeSummary"> objects.</see></returns>
            <accessComments>
            When a supervisor Id is provided as part of the criteria, the authenticated user must have supervisory permissions
            or be a proxy for supervisor. If no supervisor Id is provided, only EmployeeTimeSummary objects for the authenticated user
            may be requested
            </accessComments>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeCalculationDefinitionsController">
            <summary>
            Exposes access to employee time cards for time entry
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeCalculationDefinitionsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.IOvertimeCalculationDefinitionsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            OvertimeCalculationDefinitionsController constructor
            </summary>
            
            <param name="logger"></param>
            <param name="overtimeCalculationDefinitionsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeCalculationDefinitionsController.GetOvertimeCalculationDefinitionsAsync">
            <summary>
            Gets all overtime calculation definitions.
            See the OvertimeCalculationDefinition object description for information on its properties.
            This endpoint will return an error if:
             1. 400 - An unhandled error occurs while getting overtime calculation definitions 
            </summary>
            <returns>A list of Overtime Calculation Definitions</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeController">
            <summary>
            OvertimeController
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeController.#ctor(Ellucian.Colleague.Coordination.TimeManagement.Services.IOvertimeCalculationService,Microsoft.Extensions.Logging.ILogger,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="overtimeCalculationService"></param>
            <param name="logger"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeController.QueryByPostOvertime(Ellucian.Colleague.Dtos.TimeManagement.OvertimeQueryCriteria,System.String)">
            <summary>
            Requests an overtime calculation result for a provided the person and date range.
            The person and date range are specified in the OvertimeQueryCriteria object in the request body.
            See documentation for OvertimeQueryCriteria for information on individual properties.
            
            This endpoint will return an error if:
                1. 400 - The OvertimeQueryCriteria is not provided
                2. 400 - The OvertimeQueryCriteria is incorrectly formatted
                3. 403 - The logged in user does not have permission to access the information requested in the criteria
                4. 400 - An unhandled exception occurs on the server
            
            </summary>
            <accessComments>
            In order to calculate overtime, the current user must:
            1. Be the employee. An employee cannot calculate overtime for other employees.
            2. Be the employee's supervisor. A supervior can only calculate overtime for his/her supervisees.
            3. Be a proxy for the employee's supervisor. A proxy for a supervisor can only calculate overtime for the supervisor's supervisees.
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not calculate and return overtime for any of the criteria.
            </accessComments>
            <param name="criteria">An array of OvertimeQueryCriteria objects. This API will calculate overtime for each of the criteria objects.</param>
            <param name="effectivePersonId">If proxying for a supervisor, set the supervisor's person id to this URI query parameter</param>
            <returns>An Overtime Calculation Result</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.OvertimeController.QueryByPostOvertimes(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.TimeManagement.OvertimeQueryCriteria},System.String)">
            <summary>
            Use this route to calculate overtime in bulk. This route reduces load on the API servers and is much more effective
            for the bulk calculation use case than issuing separate requests to calculate overtime. The ClientQueryId GUID attributes in the OvertimeQueryCriteria
            object and the OvertimeCalculationResult object allow the consuming client to "join" any given request to its associated response.
            
            The persons and date ranges are specified in the OvertimeQueryCriteria objects in the request body.
            See documentation for OvertimeQueryCriteria for information on individual properties.
            
            This endpoint will return an error if:
                1. 400 - An OvertimeQueryCriteria is not provided
                2. 400 - Any OvertimeQueryCriteria is incorrectly formatted
                3. 403 - The logged in user does not have permission to access the information requested in the criteria
                4. 400 - An unhandled exception occurs on the server
            
            </summary>
            <accessComments>
            In order to calculate overtime, the current user must:
            1. Be the employee. An employee cannot calculate overtime for other employees.
            2. Be the employee's supervisor. A supervior can only calculate overtime for his/her supervisees.
            3. Be a proxy for the employee's supervisor. A proxy for a supervisor can only calculate overtime for the supervisor's supervisees.
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not calculate and return overtime for any of the criteria.
            </accessComments>
            <param name="criteria">An array of OvertimeQueryCriteria objects. This API will calculate overtime for each of the criteria objects.</param>
            <param name="effectivePersonId">If proxying for a supervisor, set the supervisor's person id to this URI query parameter</param>
            <returns>A array of Overtime Calculation Results</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardHistoriesController">
            <summary>
            Exposes access to employee time cards for time entry
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardHistoriesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ITimecardHistoriesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Timecard Histories controller constructor
            </summary>
            
            <param name="logger"></param>
            <param name="timecardHistoriesService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardHistoriesController.GetTimecardHistoriesAsync(System.DateTime,System.DateTime)">
            <summary>
            Gets all timecard histories for the currently authenticated API user (as an employee) that exist between a start date and an end date.
            
            Example:  if the current user is an employee, all of the employees timecard histories between the start date and end date will be returned.
            Example:  if the current user is a manager, all of his/her supervised employees' timecard histories between a start date and an end date will be returned.
            
            The endpoint will not return the requested timecard histories if:
                1.  400 - the startDate or endDate is not included in request URI
                2.  403 - User does not have permission to get requested timecard histories
            </summary>
            
            <returns>
            A list of timecard histories.  
            See the documentation for TimecardHistory for specific property information.
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardHistoriesController.GetTimecardHistories2Async(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            Gets all timecard histories for the currently authenticated API user (as an employee) that exist between a start date and an end date.
            
            Example: If the current user is an employee, all of the employees timecard histories between the start date and end date will be returned.
            Example: If the current user is a manager, all of his/her supervised employees' timecard histories between a start date and an end date will be returned.
            Example: If the current user is an admin, this endpoint returns the timecard histories between the start date and end date for the effectivePersonId
            The endpoint will not return the requested timecard histories if:
                1.  400 - the startDate or endDate is not included in request URI
                2.  403 - User does not have permission to get requested timecard histories
            </summary>
            /// <param name="startDate">
            Start Date
            </param>
            /// <param name="endDate">
            End Date
            </param>
            <param name="effectivePersonId">
            Optional parameter for passing effective person Id
            </param>
            <param name="statusAction">
            Optional parameter for passing Time Card Status 
            </param>
            <returns>
            A list of timecard histories.  
            See the documentation for TimecardHistory for specific property information.
            </returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController">
            <summary>
            Exposes access to employee time cards for time entry
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ITimecardsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            TimeCards controller constructor
            </summary>
            
            <param name="logger"></param>
            <param name="timecardsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetTimecardsAsync">
            <summary>
            Gets all timecards for the currently authenticated API user (as an employee).
            All timecards will be returned regardless of status.
            
            Example:  if the current user is an employee, all of the employees timecards will be returned.
            Example:  if the current user is a manager, all of his/her supervised employees' timecards will be returned.
            
            The endpoint will not return the requested timecard if:
                1.  400 - Id is not included in request URI
                2.  403 - User does not have permisttion to get requested timecard
            </summary>
            
            <returns>A list of timecards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetTimecardAsync(System.String)">
            <summary>
            Gets a single timecard for a given timecard Id
            
            The endpoint will not return the requested timecard if:
                1.  400 - Id is not included in request URI
                2.  400 - Unhandled application exception             
                3.  403 - User does not have permisttion to get requested timecard
                4.  404 - Given timecard Id is not found
            </summary>
            
            <param name="id"></param>
            <returns>The requested timecard object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.CreateTimecardAsync(Ellucian.Colleague.Dtos.TimeManagement.Timecard)">
            <summary>
            Create a single Timecard. This POST endpoint will create a Timecard along with it's associated time entries.
            
            The endpoint will reject the creation of a Timecard if:
                1. 403 - Employee does not have the correct permissions to create the Timecard
                2. 409 - The Timecard resource has changed on server
                3. 409 - The Timecard resource is locked by another resource
                
            See the descriptions of the individual properties for more information about acceptable data values
            </summary>
            
            <param name="timecard"></param>
            <returns>The Timecard created, including the new id returned in the response.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.UpdateTimecardAsync(Ellucian.Colleague.Dtos.TimeManagement.Timecard)">
            <summary>
            Updates the requested Timecard and associated time entries.
            
            Performs the following actions on associated time entries:
                1.  A new time entry record will be created.
                2.  An existing time entry record will be modified.
                3.  The absence of a prior time entry record will prompt a deletion.
            
            The endpoint will reject the update of a Timecard if:
                1. 403 - Person does not have the correct permissions to update the Timecard
                2. 404 - The Timecard resource requested for update does not exist
                2. 409 - The Timecard resource has changed on server
                3. 409 - The Timecard resource is locked by another resource
            </summary>
            
            <param name="timecard"></param>
            <returns>A timecard</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetTimecards2Async(System.String)">
            <summary>
            Gets all timecards for the currently authenticated API user (as an employee).
            All timecards will be returned regardless of status.
            
            Example:  if the current user is an employee, all of the employees timecards will be returned.
            Example:  if the current user is a manager, all of his/her supervised employees' timecards will be returned.
            
            The endpoint will not return the requested timecard if:
                1.  400 - Id is not included in request URI
                2.  403 - User does not have permisttion to get requested timecard
            </summary>
            
            ///<param name="effectivePersonId">
            /// Optional parameter for passing effective person Id
            ///</param>
            <returns>A list of timecards</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetTimecard2Async(System.String,System.String)">
            <summary>
            Gets a single timecard for a given timecard Id
            
            The endpoint will not return the requested timecard if:
                1.  400 - Id is not included in request URI
                2.  400 - Unhandled application exception             
                3.  403 - User does not have permisttion to get requested timecard
                4.  404 - Given timecard Id is not found
            </summary>
            
            <param name="id"></param>
            <param name="effectivePersonId"></param>
            <returns>The requested timecard object</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.CreateTimecard2Async(Ellucian.Colleague.Dtos.TimeManagement.Timecard2,System.String)">
            <summary>
            Create a single Timecard. This POST endpoint will create a Timecard along with it's associated time entries.
            
            The endpoint will reject the creation of a Timecard if:
                1. 403 - Employee does not have the correct permissions to create the Timecard
                2. 409 - The Timecard resource has changed on server
                3. 409 - The Timecard resource is locked by another resource
                
            See the descriptions of the individual properties for more information about acceptable data values
            </summary>
            
            <param name="timecard2"></param>
            <param name="effectivePersonId"></param>
            <returns>The Timecard created, including the new id returned in the response.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.BulkCreateTimecardsAsync(System.Collections.Generic.IEnumerable{Ellucian.Colleague.Dtos.TimeManagement.CreateTimecardRequest},System.String)">
            <summary>
            Use this route to create multiple timecards at once. This route reduces load on the API servers and is much more effective
            for the use case than issuing separate requests to create single timecards. The RequestGuid attributes in the CreateTimecardRequest
            object and the CreateTimecardResponse object allow the consuming client to "join" any given request to its associated response.
            </summary>
            <accessComments>
            In order to create a timecard for an employee, the current user must:
            1. Be the employee. An employee cannot create timecards for other employees.
            2. Be the employee's supervisor. A supervior can only create timecards for his/her supervisees.
            3. Be a proxy for the employee's supervisor. A proxy for a supervisor can only create timecards for the supervisor's supervisees.
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not create any of the requested timecards.
            </accessComments>
            <param name="createRequests">Specify the array of CreateTimecardRequest objects in the body of the request</param>
            <param name="effectivePersonId">Specify the effectivePersonId as a parameter in the URI of the request. Specify the personId of someone else when the current user is proxying for someone else. </param>
            <returns>An array of CreateTimecardResponse objects that indicate the success or failure of the associated create request. If the StatusCode in the response is a 409 Conflict, the timecard
            already exists. The consuming client can use the ResourceLocation and the TimecardId attributes of the CreateTimecardResponse object to get or update the existing resource.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.UpdateTimecard2Async(Ellucian.Colleague.Dtos.TimeManagement.Timecard2,System.String)">
            <summary>
            Updates the requested Timecard and associated time entries. The effectivePersonId argument is optional.
            <br />
            Performs the following actions on associated time entries:
                1.  A new time entry record will be created.
                2.  An existing time entry record will be modified.
                3.  The absence of a prior time entry record will prompt a deletion.
            
            The endpoint will reject the update of a Timecard if:
                1. 403 - Person does not have the correct permissions to update the Timecard
                2. 404 - The Timecard resource requested for update does not exist
                3. 409 - The Timecard resource has changed on server
                4. 409 - The Timecard resource is locked by another resource
            </summary>
            <accessComments>
            1. Employees can update their own timecards.
            2. Supervisors who have a role associated to the permission code - APPROVE.REJECT.TIME.ENTRY -
            can update timecards for employees for whom they supervise.
            3. Supervisors can authorize other users (Proxies) via Employee Proxy Self Service. A user who is proxying for a supervisor with the
            proper permission code can update timecards for employees for whom the supervisor supervises.
            </accessComments>
            <param name="timecard2">The timecard object to update</param>
            <param name="effectivePersonId">Optional: If the current user is proxying for a supervisor, submit the supervisor's personId as the effectivePersonId</param>
            <returns>A timecard</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetTimecardsAssociatedWithLeaveRequestsAsync(System.String,System.String)">
            <summary>
            Retrieves timecards that are associated with the leave requests
            </summary>
            <accessComments>
            1) Any authenticated user can view the timecards associated to their own leave requests.
            2) Leave approvers(users with the permission APPROVE.REJECT.LEAVE.REQUEST) or their proxies can view the timecards associated to the leave requests of their supervisees. 
            </accessComments>
            <param name="leaveRequestId">Optional parameter to fetch timecard linked to a specific leave request id</param>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.TimeManagement.Timecard2"/>List of Timecard DTO</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned incase of any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to view timecards linked to the leave requests.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetTimecardsForLeaveAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Retrieves timecards associated with leave employees with timecards
            </summary>
            <accessComments>
            1) Any authenticated user can view the timecards associated to their own leave requests.
            2) Leave approvers(users with the permission APPROVE.REJECT.LEAVE.REQUEST) or their proxies can view the timecards associated to the leave requests of their supervisees.
            </accessComments>
            <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <param name="lookbackStartDate">Optional parameter for enforcing a lookback period</param>
            <returns><see cref="T:Ellucian.Colleague.Dtos.TimeManagement.Timecard2"/>List of Timecard DTO</returns>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.BadRequest returned incase of any unexpected error has occured.</exception>
            <exception><see cref="!:HttpResponseException">HttpResponseException</see> with <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> containing <see cref="T:System.Net.HttpStatusCode">HttpStatusCode</see>.Forbidden returned if the user is not allowed to view timecards linked to the leave requests.</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardsController.GetPositionPayPeriodsTimecardsAsync(System.Boolean,System.String)">
            <summary>
            This ethos pro-code api end-point will return the following necessary information needed to perform clock-in/out from the experience.
            1. Pay period information for all active clock positions for today.
            2. Timecards associated with the employee.
            3. Latest status of all the associated timecards.
            This API also performs a few of the data validations.
            The requested information must be owned by the employee.
            </summary>
            <param name="employeeId">Optional parameter: employeeId for whom the position pay periods and the timecards information is being requested.</param>      
            <param name="getAll">Optiomal parameter: Gets only the position pay periods information when set to false</param>
            <returns>PositionPayPeriodsTimecards DTO</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController">
            <summary>
            TimecardStatuses Controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ITimecardStatusesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="timecardStatusService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController.CreateTimecardStatusAsync(System.String,Ellucian.Colleague.Dtos.TimeManagement.TimecardStatus,System.String)">
            <summary>
            Creates a timecard status for the given timecard. A TimecardStatus represents an action performed on a Timecard at a point in time.
            Along with the TimecardStatus, a TimecardHistory record is also created. The TimecardHistory is a copy of the Timecard
            during the state in which the TimecardStatus was actioned.
            Once a status record is created, it can be read, but never modified.
            Changes in status should create a new timecard status record for the associated timecard.
            
            Example: If an employee submits a Timecard for approval, a TimecardStatus is created indicating the action performed by the employee. A TimecardHistory record is also created which is a copy of the Timecard when it was submitted.
            
            The endpoint will reject the creation of a TimecardStatus if:
                1. 400 - TimecardStatus object is not included in request body
                2. 400 - TimecardStatus timecardId is not same as uri timecardId
            </summary>
            
            <accessComments>
            In order to create a timecard status for an employee, the current user must be:
            1. The employee. An employee cannot create statuses for other employees or,
            2. The employee's supervisor. A supervior can only create statuses for his/her supervisees or
            3. A proxy for the employee's supervisor. A proxy for a supervisor can only create statuses for the supervisor's supervisees.
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not create any of the requested timecards.
            </accessComments>
            
            <param name="id"></param>
            <param name="status"></param>
            <param name="effectivePersonId">Specify the effectivePersonId as a parameter in the URI of the request. Specify the personId of someone else when the current user is proxying for someone else. </param>
            <returns>The newly created timecard status</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController.CreateTimecardStatusesAsync(System.Collections.Generic.List{Ellucian.Colleague.Dtos.TimeManagement.TimecardStatus},System.String)">
            <summary>
            Creates a set of timecard statuses. Replaces the individual TimecardStatus post method.
            Each TimecardStatus represents an action performed on a Timecard at a point in time.
            Along with the TimecardStatus, a TimecardHistory record is also created. The TimecardHistory is a copy of the Timecard
            during the state in which the TimecardStatus was actioned.
            Once  a status record is created, it can be read, but never modified.
            Changes in status should create a new timecard status record for the associated timecard.
            
            Example: If an employee submits a Timecard for approval, a TimecardStatus is created indicating the action performed by the employee. A TimecardHistory record is also created which is a copy of the Timecard when it was submitted.
            
            The endpoint will reject the creation of TimecardStatus if:
                1. Bad Request: 400 - No TimecardStatus objects are included, or any TimecardStatus object does not provide valid data
                2. Forbidden: 403 - User does not have permissions to create a TimecardStatus object for any incoming object
            </summary>
            
            <accessComments>
            In order to create timecard statuses for an employee, the current user must be:
            1. The employee; an employee cannot create timecards for other employees or,
            2. The employee's supervisor; a supervior can only create timecards for his/her supervisees or
            3. A proxy for the employee's supervisor; a proxy for a supervisor can only create timecards for the supervisor's supervisees.
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not create any of the requested timecards.
            </accessComments>
            
            <param name="statuses"></param>
            <param name="effectivePersonId">Specify the effectivePersonId as a parameter in the URI of the request. Specify the personId of someone else when the current user is proxying for someone else. </param>
            <returns>The list of all successfully created timecard statuses. Any errors are logged but do not fail the request unless all items fail to post.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController.GetTimecardStatusesByTimecardIdAsync(System.String,System.String)">
            <summary>
            Gets all timecard statuses for a given Timecard id.
            The status with the most recent timestamp add datetime should be considered the active status for the timecard
            
            The endpoint will reject the update of a Timecard if:
                1. Bad Request: 400 - Timecard id is not provided in URI
                2. Forbidden: 403 - User does not have permissions to get the requested TimecardStatus object
            </summary>
            <accessComments>
            In order to get a timecard status for an employee, the current user must be:
            1. The employee. An employee cannot get a timecard status for another employees or,
            2. The employee's supervisor. A supervior can only get timecard statuses for his/her supervisees or,
            3. A proxy of the employee's supervisor. A proxy-supervisor can only get the timecard statuses of their grantor's supervisees
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not create any of the requested timecards.
            </accessComments>
            <param name="id"></param>
            <param name="effectivePersonId"></param>
            <returns>All statuses for the timecard</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController.QueryTimecardStatusesAsync(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Gets all timecard statuses for a given set of Timecard ids.
            The status with the most recent timestamp add datetime should be considered the active status for the timecard
            
            The endpoint will reject the update of a Timecard if:
                1. Bad request: 400 - Timecard id is not provided in URI 
                2. Forbidden: 403 - User does not have permissions to get one or more of the TimecardStatus objects
            </summary>
            <accessComments>
            In order to get timecard statuses for an employee, the current user must be:
            1. The employee. An employee cannot get a timecard status for another employees or,
            2. The employee's supervisor. A supervior can only get timecard statuses for his/her supervisees or
            3. A proxy of the supervisor. A proxy-supervisor can only get timecard statuses their grantor's supervisees
            
            If any of these conditions fail, this route will return a 403 Forbidden status and no TimecardStatuses will be returned
            </accessComments>
            <param name="effectivePersonId">Person Id of the effective user</param>
            <param name="timecardIds">Collection of timecardids to retrieve statuses of</param>
            <returns>All statuses for the timecard</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimecardStatusesController.GetLatestTimecardStatusesAsync(System.String)">
             <summary>
             Get the latest timecard statuses for which you have permission to view. A single timecard can have multiple
             statuses, and this endpoint returns the most recent of the statuses.
             </summary>
             
             The endpoint will reject the update of a Timecard if:
                 1. Forbidden: 403 - User does not have permissions to get the timecard statuses for the effective user
             
            <accessComments>
             In order to get the latest timecard statuses, the current user must be:
             1. The employee. An employee cannot get timecard statuses for another employees or,
             2. The employee's supervisor. A supervior can only get timecard statuses for his/her supervisees or
             3. A proxy of the supervisor. A proxy-supervisor can only get timecard statuses their grantor's supervisees
             
             If any of these conditions fail, this route will return a 403 Forbidden status and no TimecardStatuses will be returned
             </accessComments>
            ///<param name="effectivePersonId">
            /// Optional parameter for passing effective person Id - will use current user Id if parameter is null or empty
            ///</param>
            <returns>Latest statuses for all timecards for which you have permission to view</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeEntryCommentsController">
            <summary>
            Comments controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeEntryCommentsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ITimeEntryCommentsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
             Constructs the comments controller
            </summary>
            <param name="logger"></param>
            <param name="commentsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeEntryCommentsController.GetTimeEntryCommentsAsync(System.String)">
            <summary>
            Gets all time entry comments records the logged in user has permission to get. 
            These time entry comments records may be associated to the time entry of the current user, or to the time entry of a subordinate if the current user has a supervisor role.
            See the TimeEntryComments for specific properties of the created and returned objects.
            </summary>
            
            <exception>Forbidden. The user is attempting to access time entry comments for an entity other than self or subordinates. </exception>
            <exception>BadRequest. The server cannot or will not process the request due to something that is perceived to be a client error.</exception>
            
            <param name="effectivePersonId">
            Optional parameter for passing effective person Id
            </param>
            <returns>A list of time entry comments records</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeEntryCommentsController.CreateTimeEntryCommentsAsync(Ellucian.Colleague.Dtos.TimeManagement.TimeEntryComments,System.String)">
            <summary>
            Creates a time entry comments record. 
            This time entry comments record may be associated to the time entry of the current user, or to the time entry of a subordinate if the current user has a supervisor role.
            See the TimeEntryComments for specific properties of the created and returned object.
            </summary>
            
            <exception>Forbidden.  The user is attempting to create time entry comments for an entity other than self or subordinates. </exception>
            <exception>BadRequest. The server cannot or will not process the request due to something that is perceived to be a client error.</exception>
            
            <accessComments>
            In order to create a time entry comments for an employee, the current user must be:
            1. The employee. An employee cannot create comments for other employees or,
            2. The employee's supervisor. A supervior can only create comments for his/her supervisees or
            3. A proxy for the employee's supervisor. A proxy for a supervisor can only create comments for the supervisor's supervisees.
            
            If any of these conditions fail, this route will return a 403 Forbidden status and not create any of the requested timecards.
            </accessComments>
            
            <param name="comments"></param>
            <param name="effectivePersonId"></param>
            <returns>TimeEntryComments</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeHistoryCommentsController">
            <summary>
            Comments controller
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeHistoryCommentsController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ITimeHistoryCommentsService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
             Constructs the comments controller
            </summary>
            <param name="logger"></param>
            <param name="commentsService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeHistoryCommentsController.GetTimeHistoryCommentsAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all time History comments records the logged in user has permission to get. 
            These time History comments records may be associated to the time History of the current user, or to the time History of a subordinate if the current user has a supervisor role.
            See the TimeHistoryComments for specific properties of the created and returned objects.
            Error conditions: 
            1.  400 - Bad request.
            </summary>
            
            ///<param name="timeCardHistoryIds">
            /// mandatory parameter for passing all timeCardHistoryIds for which we need to fetch comments
            ///</param>
            <returns>A list of time History comments records</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeHistoryCommentsController.GetTimeHistoryComments2Async(System.String)">
            <summary>
            Gets all time History comments records the logged in user has permission to get. 
            These time History comments records may be associated to the time History of the current user, or to the time History of a subordinate if the current user has a supervisor role.
            See the TimeHistoryComments for specific properties of the created and returned objects.
            Error conditions: 
            1.  400 - Bad request.
            </summary>
            
            ///<param name="effectivePersonId">
            /// Optional parameter for passing effective person Id
            ///</param>
            <returns>A list of time History comments records</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeManagementConfigurationController">
            <summary>
            Time Management Configuration Controller routes requests for configurations for time management
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeManagementConfigurationController.#ctor(Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ITimeManagementConfigurationService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Time Management Configuration Controller constructor
            </summary>
            <param name="adapterRegistry"></param>
            <param name="logger"></param>
            <param name="timeManagementConfigurationService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.TimeManagement.TimeManagementConfigurationController.GetTimeManagementConfigurationAsync">
            <summary>
            Get Time Management Configuration for environment.
            
            A succesful request will return a status code of 200 and a TimeManagementConfiguration object.
            An unsuccesful request will return a status code of 400
            </summary>
            <accessComments>
            Any authenticated user can get these resources
            </accessComments>
            <returns>A TimeManagementConfiguration</returns>
            <note>TimeManagementConfiguration is cached for 24 hours.</note>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.UsersController">
            <summary>
            Exposure of User information
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.#ctor(Ellucian.Colleague.Domain.Repositories.IUserRepository,Ellucian.Web.Adapters.IAdapterRegistry,Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.Base.Services.IProxyService,Ellucian.Colleague.Coordination.Base.Services.ISelfservicePreferencesService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            UsersController constructor
            </summary>
            <param name="userRepository">Repository of type <see cref="T:Ellucian.Colleague.Domain.Repositories.IUserRepository">IUserRepository</see></param>
            <param name="adapterRegistry">Adapter registry of type <see cref="T:Ellucian.Web.Adapters.IAdapterRegistry">IAdapterRegistry</see></param>
            <param name="logger">Interface to logger of type <see cref="T:Microsoft.Extensions.Logging.ILogger"/>ILogger</param>
            <param name="proxyService">Interface to the proxy coordination service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.IProxyService"/>IProxyService</param>
            <param name="selfservicePreferencesService">Interface to the SelfservicePreferences coordination service of type <see cref="T:Ellucian.Colleague.Coordination.Base.Services.ISelfservicePreferencesService"/></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.GetUsers(System.String)">
            <summary>
            Returns the users with login IDs that start with the specified query string.
            </summary>
            <param name="q">The query string</param>
            <returns>All <see cref="T:Ellucian.Colleague.Dtos.Base.User">user names that matched the query.</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.PostUserProxyPermissionsAsync(Ellucian.Colleague.Dtos.Base.ProxyPermissionAssignment,System.String)">
            <summary>
            Post changes to a user's proxy permissions
            </summary>
            <param name="assignment">The proxy permissions being changed</param>
            <param name="useEmployeeGroups">Optional parameter used to differentiate between employee proxy and person proxy</param>
            <returns>A collection of <see cref="T:Ellucian.Colleague.Dtos.Base.ProxyAccessPermission">proxy access permissions</see>.</returns>
            <accessComments>
            Any logged in user can update their own proxy permissions.       
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.PostUserProxyPermissionsV2Async(Ellucian.Colleague.Dtos.Base.ProxyPermissionAssignment,System.String)">
            <summary>
            Post changes to a user's proxy permissions
            </summary>
            <param name="assignment">The proxy permissions being changed</param>
            <param name="useEmployeeGroups">Optional parameter used to differentiate between employee proxy and person proxy</param>
            <returns>A collection of <see cref="T:Ellucian.Colleague.Dtos.Base.ProxyAccessPermission">proxy access permissions</see>.</returns>
            <accessComments>
            Any logged in user can update their own proxy permissions.
            A user with the permission ADD.ALL.HR.PROXY is considered as an admin and can update proxy permissions of any employee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.GetUserProxyPermissionsAsync(System.String,System.String)">
            <summary>
            Gets a collection of proxy access permissions, by user, for the supplied person
            </summary>
            <param name="userId">The identifier of the entity of interest</param>
            <returns>A collection of proxy access permissions for the supplied person</returns>
            <param name="useEmployeeGroups">Optional parameter used to differentiate between employee proxy and person proxy</param>
            <accessComments>
            Any logged in user can get their own proxy access permissions. 
            A user with the permission ADD.ALL.HR.PROXY is considered as an admin and can access the proxy access permissions of any employee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.GetUserProxySubjectsAsync(System.String)">
            <summary>
            Gets the proxy user's proxy subjects. Note: "proxy subject" means the user that has granted
            proxy access to the proxy user. The proxy user may act on behalf of the proxy subject.
            </summary>
            <param name="userId">The proxy user's person ID.</param>
            <returns></returns>
            <accessComments>
            Only the current user can get their own proxy subjects.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.PostProxyCandidateAsync(Ellucian.Colleague.Dtos.Base.ProxyCandidate)">
            <summary>
            Create a Proxy Candidate
            </summary>
            <param name="candidate">A <see cref="T:Ellucian.Colleague.Dtos.Base.ProxyCandidate"/> object containing the values to store</param>
            <returns>The created <see cref="T:Ellucian.Colleague.Dtos.Base.ProxyCandidate"/></returns>
            <accessComments>
            Only the current user can create their own proxy candidate. 
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.GetUserProxyCandidatesAsync(System.String)">
            <summary>
            Gets a collection of proxy candidates that the proxy user has submitted for evaluation.
            </summary>
            <param name="userId">ID of the user granting access</param>
            <returns>A collection of proxy candidates</returns>
            <accessComments>
             Any logged in user can get their proxy candidates.
             A user with the permission ADD.ALL.HR.PROXY is considered as an admin and can access the proxy candidates of any employee.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.PostProxyUserAsync(Ellucian.Colleague.Dtos.Base.PersonProxyUser)">
            <summary>
            Creates a Person record for the purposes of becoming a proxy user.  The Proxy Parameters (PRXP) form Allow Addition of New Users field must be turned on.
            </summary>
            <param name="user">Information about the <see cref="T:Ellucian.Colleague.Dtos.Base.PersonProxyUser">proxy user</see> to create</param>
            <returns>The created <see cref="T:Ellucian.Colleague.Dtos.Base.PersonProxyUser">proxy user</see></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.GetSelfservicePreferenceAsync(System.String,System.String)">
            <summary>
            Retrieves the user's preferences for the given self service module.
            </summary>
            <param name="personId">Person for which to retrieve preferences</param>
            <param name="preferenceType">The key for the self service module</param>
            <returns>SelfservicePreference for the module for the user</returns>
            <accessComments>
            Only the current user can get their own preferences.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.UpdateSelfservicePreferenceAsync(Ellucian.Colleague.Dtos.Base.SelfservicePreference)">
            <summary>
            Updates the user's preferences with the given parameters.
            </summary>
            <param name="selfservicePreference">The user preference to be updated</param>
            <returns>The updated user preference</returns>
            <accessComments>
            Only the current user can update their preferences.
            </accessComments>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UsersController.DeleteSelfServicePreferenceAsync(System.String,System.String)">
            <summary>
            Delete a user preference
            </summary>
            <param name="personId">The person ID belonging to the preference to delete</param>
            <param name="preferenceType">The type of preference to delete</param>
            <returns>nothing</returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.UtilitiesController">
            <summary>
            Provides a top-level controller for API utilities.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.#ctor(Ellucian.Web.Http.Configuration.ISettingsRepository,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Cache.ICacheProvider,Ellucian.Web.Http.Configuration.ApiSettings,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Ellucian.Colleague.Coordination.Base.Services.ICacheManagementService,Microsoft.Extensions.Options.IOptions{Ellucian.Colleague.Api.Models.ColleaguePubSubOptions},StackExchange.Redis.ISubscriber)">
            <summary>
            Default constructor.
            </summary>
            <param name="settingsRepository">ISettingsRepository instance</param>
            <param name="logger">ILogger instance</param>
            <param name="cacheProvider">Cache provider instance</param>
            <param name="apiSettings">IConfigurationService instance</param>
            <param name="environment">IWebHostEnvironment instance</param>
            <param name="cacheManagementService"></param>
            <param name="configManagementPubSubOptions"></param>
            <param name="pubSubSubscriber"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.Index">
            <summary>
            Gets the index page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.CacheManagement">
            <summary>
            Allows for viewing of cache keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.GetSanitizedCacheValue(System.String)">
            <summary>
            Returns a YAML-like result with string values changed to "==NOTNULL==" or "null" to indicate properties that have values and those that don't.
            Must be a localhost request.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.RemoveCacheValue(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Allows removal of cache elements based on the provided keys for localhost requests only.
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.ClearCache">
            <summary>
            Gets the clear cache page. This action currently clears the cache.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Controllers.UtilitiesController.UtilityCacheRepository">
            <summary>
            Private repository class which extends the base caching repository; a bit of a hack so this controller
            can access methods in the abstract base caching repository
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.BackupConfig">
            <summary>
            Backs up API config
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Controllers.UtilitiesController.RestoreConfig">
            <summary>
            Backs up API config
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Converters.ColleagueDateTimeConverter">
            <summary>
            This converter overrides json.net's default IsoDateTimeConverter when
            de-serializing DateTimeOffset objects
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Converters.ColleagueDateTimeConverter._colleagueTimeZoneId">
            <summary>
            The default time zone identifier
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Converters.ColleagueDateTimeConverter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Converters.ColleagueDateTimeConverter" /> class.
            </summary>
            <param name="colleagueTimeZoneId">The colleague time zone identifier.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Converters.ColleagueDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object with special treatment for <see cref="T:System.DateTimeOffset"/> types
            </summary>
            <param name="reader">The Newtonsoft.Json.JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Converters.ColleagueDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object with special treatment for <see cref="T:System.DateTimeOffset" /> types
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Helpers.ApiSettingsExtensions">
            <summary>
            Extensions for <see cref="T:Ellucian.Web.Http.Configuration.ApiSettings"/>.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Helpers.ApiSettingsExtensions.AuditLogConfigurationChanges(Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Web.Http.Configuration.ApiSettings,Ellucian.Colleague.Api.Helpers.AuditLogProperties,Ellucian.Logging.AuditLoggingAdapter)">
            <summary>
            Audit log configuration changes for <see cref="T:Ellucian.Web.Http.Configuration.ApiSettings"/>.
            </summary>
            <param name="settings">Current <see cref="T:Ellucian.Web.Http.Configuration.ApiSettings"/>.</param>
            <param name="oldSettings">Old <see cref="T:Ellucian.Web.Http.Configuration.ApiSettings"/>.</param>
            <param name="props">Audit log information properties.</param>
            <param name="auditLog">The audit log instance</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Helpers.ResourceFileExtension">
            <summary>
            Extensions for <see cref="T:Ellucian.Web.Resource.ResourceFile"/>.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Helpers.ResourceFileExtension.AuditLogConfigurationChanges(Ellucian.Web.Resource.ResourceFile,Ellucian.Web.Resource.ResourceFile,Ellucian.Colleague.Api.Helpers.AuditLogProperties,Ellucian.Logging.AuditLoggingAdapter)">
            <summary>
            Audit log configuration changes for a <see cref="T:Ellucian.Web.Resource.ResourceFile"/>.
            </summary>
            <param name="resourceFile">Current <see cref="T:Ellucian.Web.Resource.ResourceFile"/>.</param>
            <param name="oldResourceFile">Old <see cref="T:Ellucian.Web.Resource.ResourceFile"/>.</param>
            <param name="props">Audit log information properties.</param>
            <param name="auditLog">The audit log instance.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Helpers.WebApiSettingsExtensions">
            <summary>
            Extensions for <see cref="T:Ellucian.Colleague.Api.Models.WebApiSettings"/>.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Helpers.WebApiSettingsExtensions.AuditLogConfigurationChanges(Ellucian.Colleague.Api.Models.WebApiSettings,Ellucian.Colleague.Api.Models.WebApiSettings,Ellucian.Colleague.Api.Helpers.AuditLogProperties,Ellucian.Logging.AuditLoggingAdapter)">
            <summary>
            Audit log configuration changes for <see cref="T:Ellucian.Colleague.Api.Models.WebApiSettings"/>.
            </summary>
            <param name="settings">Current <see cref="T:Ellucian.Colleague.Api.Models.WebApiSettings"/>.</param>
            <param name="oldSettings">Old <see cref="T:Ellucian.Colleague.Api.Models.WebApiSettings"/>.</param>
            <param name="props">Audit log information properties.</param>
            <param name="auditLog">The audit log instance.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Licensing.ModuleConstants">
            <summary>
            Defines all module codes.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.Base">
            <summary>
            Base module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.Student">
            <summary>
            Student module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.Planning">
            <summary>
            Planning module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.Finance">
            <summary>
            Student Finance module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.FinancialAid">
            <summary>
            Financial Aid module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.ColleagueFinance">
            <summary>
            Colleague Finance module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.ResidenceLife">
            <summary>
            Residence Life optional module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.HumanResources">
            <summary>
            Human Resources module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.ProjectsAccounting">
            <summary>
            Projects Accounting module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.CampusOrgs">
            <summary>
            Campus Organizations module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.TimeManagement">
            <summary>
            Time Entry module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.FALink">
            <summary>
            FA Link optional module code
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Licensing.ModuleConstants.BudgetManagement">
            <summary>
            Budget Management module code
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.MetadataAttributes.BulkSupportedAttribute">
            <summary>
            Allows for bulk support indication
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.MetadataAttributes.BulkSupportedAttribute.IsSupported">
            <summary>
            Returns true if this action is bulk supported, otherwise false.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.MetadataAttributes.BulkSupportedAttribute.#ctor(System.Boolean)">
            <summary>
            The constructor. 
            </summary>
            <param name="isSupported">Default parameter of true, so you only need to specify if false (or don't even include the attribute).</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.MetadataAttributes.EedmSupportedAttribute">
            <summary>
            The attribute can indicate if an action/route is Eedm supported.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.MetadataAttributes.EedmSupportedAttribute.IsSupported">
            <summary>
            Returns true if this action is Eedm supported, otherwise false.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.MetadataAttributes.EedmSupportedAttribute.#ctor(System.Boolean)">
            <summary>
            The constructor. 
            </summary>
            <param name="isSupported">Default parameter of true, so you only need to specify if false (or don't even include the attribute).</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthorizationOptions">
            <summary>
            Allows for the type for the handler
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler">
            <summary>
            Provides an HTTP module that enables basic authentication  with Colleague API.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthorizationOptions},Ellucian.Colleague.Domain.Repositories.ISessionRepository,Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="sessionRepository"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            The middleware action to see if we are OK handling this request
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.AuthenticateUserAsync(System.String,Microsoft.AspNetCore.Http.IHeaderDictionary)">
            <summary>
            Attempts to perform a standard login against Colleague using the provided basic credentials as
            an asynchronous transaction.
            </summary>
            <param name="credentials">The base64 encoded basic authentication credentials.</param>
            <param name="headers"></param>
            <returns>
            Tuple result:
            Item1: boolean: Validation, True if successful, False if not.
            Item2: IPrincipal: Principal, populated upon successful authentication.
            </returns>
            <exception cref="T:System.FormatException">Invalid basic credentials format</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.TryGetExistingSessionAsync(System.String)">
            <summary>
            Attempts to retrieve an existing Colleague session as an asynchronous transaction
            using the provided basic credentials.
            </summary>
            <param name="credentials">The base64 encoded basic authentication credentials.</param>
            <returns>
            Tuple:
            Item1: boolean: Validation, True if successful, False if not.
            Item2: IPrincipal: Principal, populated upon successful retrieval of an existing session.
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.SetPrincipal(Microsoft.AspNetCore.Http.HttpContext,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Sets the current principal.
            </summary>
            <param name="context">HttpContext</param>
            <param name="principal">The principal to set.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.WriteResponse(Microsoft.AspNetCore.Http.HttpContext,System.Net.HttpStatusCode)">
            <summary>
            Writes the provided status code and string content to the HTTP response stream.
            </summary>
            <param name="context">HttpContext</param>
            <param name="statusCode"><see cref="T:System.Net.HttpStatusCode"/> to return.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBasicAuthenticationHandler.GetProductNameAndVersion(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String@,System.String@)">
            <summary>
            Gets the values of the product name and product version headers. Both must be present otherwise
            default values are returned.
            </summary>
            <param name="headers"></param>
            <param name="productName">The value of the product name header.</param>
            <param name="productVersion">The value of the product version header.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthorizationOptions">
            <summary>
            Allows for the type for the handler
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler">
            <summary>
            Provides an HTTP module that enables basic authentication  with Colleague API.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthorizationOptions},Ellucian.Colleague.Domain.Repositories.ISessionRepository,Ellucian.Web.Http.Configuration.ISettingsRepository,Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="sessionRepository"></param>
            <param name="settingsRepository"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            The middleware action to see if we are OK handling this request
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.AuthenticateUserAsync(System.String,System.String,System.String,System.String,Microsoft.AspNetCore.Http.IHeaderDictionary)">
            <summary>
            Attempts to perform a standard login against Colleague using the provided basic credentials as
            an asynchronous transaction.
            </summary>
            <param name="proxyId">The Oauth Proxy UserName.</param>
            <param name="password">The Oauth Proxy password.</param>
            <param name="personGuid">The person guid for context extracted from the token.</param>
            <param name="username">The person userID for logging into Colleague.</param>
            <param name="headers">Context Header Values from Http Request.</param>
            <returns>
            Tuple result:
            Item1: boolean: Validation, True if successful, False if not.
            Item2: IPrincipal: Principal, populated upon successful authentication.
            </returns>
            <exception cref="T:System.FormatException">Invalid basic credentials format</exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.TryGetExistingSessionAsync(System.String,System.String,System.String)">
            <summary>
            Attempts to retrieve an existing Colleague session as an asynchronous transaction
            using the provided basic credentials.
            </summary>
            <param name="proxyId">The Oauth Proxy ID from settings.config.</param>
            <param name="password">The Oauth Password from settings.config.</param>
            <param name="personGuid">The GUID for the person from the credentials subject used for context.</param>
            <returns>
            Tuple:
            Item1: boolean: Validation, True if successful, False if not.
            Item2: IPrincipal: Principal, populated upon successful retrieval of an existing session.
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.SetPrincipal(Microsoft.AspNetCore.Http.HttpContext,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Sets the current principal.
            </summary>
            <param name="context">HttpContext</param>
            <param name="principal">The principal to set.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.WriteResponse(Microsoft.AspNetCore.Http.HttpContext,System.Net.HttpStatusCode,System.String)">
            <summary>
            Writes the provided status code and string content to the HTTP response stream.
            </summary>
            <param name="context">HttpContext</param>
            <param name="statusCode"><see cref="T:System.Net.HttpStatusCode"/> to return.</param>
            <param name="content">String content to return.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.GetProductNameAndVersion(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String@,System.String@)">
            <summary>
            Gets the values of the product name and product version headers. Both must be present otherwise
            default values are returned.
            </summary>
            <param name="headers"></param>
            <param name="productName">The value of the product name header.</param>
            <param name="productVersion">The value of the product version header.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.ValidateCurrentToken(Microsoft.AspNetCore.Http.HttpContext,System.String,Ellucian.Web.Http.Configuration.Settings)">
            <summary>
            Validate the input security token
            </summary>
            <param name="context"></param>
            <param name="token">Jwt Bearer Security Token</param>
            <param name="settings"></param>
            <returns>
            boolean: Validation, True if successful, False if not.
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueBearerAuthenticationHandler.GetClaim(System.String,System.String)">
            <summary>
            Get a requested claim type from the bearer security token
            </summary>
            <param name="token"></param>
            <param name="claimType"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.ColleagueJwtAuthorizationOptions">
            <summary>
            Allows for the type for the handler
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.ColleagueJwtAuthenticationHandler">
            <summary>
            Provides an HTTP module that enables basic authentication  with Colleague API.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueJwtAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Ellucian.Colleague.Api.Middleware.ColleagueJwtAuthorizationOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,Ellucian.Web.Security.JwtHelper)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
            <param name="jwtHelper"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueJwtAuthenticationHandler.SetPrincipal(Microsoft.AspNetCore.Http.HttpContext,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Sets the current principal.
            </summary>
            <param name="context">HttpContext</param>
            <param name="principal">The principal to set.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.ColleagueJwtAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            See if this user has JWT to authenticate
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Middleware.CorrelationIdMiddleware">
            <summary>
            Sets TraceIdentifier to a Guid for Correlation ID usage
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.CorrelationIdMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Middleware.CorrelationIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ApiSettingsModel">
            <summary>
            A view model that contains all the general API settings that can be set through the API Settings UI.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsModel.ProfileName">
            <summary>
            The name of the current settings profile being used (development, production, etc)
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsModel.Id">
            <summary>
            The ID to this API Settings Model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsModel.Version">
            <summary>
            The current version of the API
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsModel.PhotoSettings">
            <summary>
            Gets or sets the <see cref="T:Ellucian.Colleague.Api.Models.PhotoSettingsModel"/>.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsModel.ReportSettings">
            <summary>
            Instance of a report settings view model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsModel.CacheSettings">
            <summary>
            Instance of the Web API cache settings.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ApiSettingsModel.#ctor">
            <summary>
            Constructor for an API Settings Model
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel">
            <summary>
            API settings profile model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel.CurrentProfileName">
            <summary>
            Gets or sets the current profile name.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel.NewProfileName">
            <summary>
            Gets or sets the new profile name.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel.ExistingProfileNames">
            <summary>
            Gets or sets a list of all existing profile names.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel.SelectedExistingProfileName">
            <summary>
            Gets or set the selected <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ApiSettingsProfileModel.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ApiStatusModel">
            <summary>
            Api Status Model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiStatusModel.UnSuccessfulLoginCounter">
            <summary>
            Count of Unsuccessful logins
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiStatusModel.UseDasDataReader">
            <summary>
            Gets or Sets the boolean value for DAS Datareader usuage
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ApiTests">
            <summary>
            API tests model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ApiTests.Tests">
            <summary>
            Gets or sets the lists of tests.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ApiTests.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.CacheManagementViewModel">
            <summary>
            View model for CacheManagement page
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheManagementViewModel.CacheKeys">
            <summary>
            Cache keys list
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheManagementViewModel.Application">
            <summary>
            Application identification string
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheManagementViewModel.Host">
            <summary>
            Intended for the machine name of the host to assist in recognizing where it is executing.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheManagementViewModel.ErrorMessage">
            <summary>
            Error message for the view model or action attempted.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheManagementViewModel.ConfirmationUrl">
            <summary>
            We need to redirect to a confirmation URL because the app will restart.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.CacheSettingsModel">
            <summary>
            Cache settings model
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.SupportedCacheProviders">
            <summary>
            Gets or sets the list of supported Web API cache providers.
            </summary>
            <value>
            The list of supported Web API cache providers.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.SelectedCacheProvider">
            <summary>
            Gets or sets the cache provider to be used for this Colleague Web API definition.
            </summary>
            <value>
            The cache provider.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.TraceLevelOptions">
            <summary>
            Gets or sets the available trace level options for API cache diagnostics.
            </summary>
            <value>
            The trace level options.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.SelectedCacheTraceLevel">
            <summary>
            Gets or sets the cache trace level to be used for this Colleague Web API definition.
            </summary>
            <value>
            The cache trace level.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.CacheHost">
            <summary>
            Gets or sets the cache host to be used for this Colleague Web API definition.
            </summary>
            <value>
            The cache host.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.CachePort">
            <summary>
            Gets or sets the cache port to be used for this Colleague Web API definition.
            </summary>
            <value>
            The cache port.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.CacheSettingsModel.CacheName">
            <summary>
            Gets or sets the name of the cache to be used for this Colleague Web API definition.
            </summary>
            <value>
            The name of the cache.
            </value>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.CacheSettingsModel.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.APPSETTINGS_KEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.DEFAULT_NAMESPACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.DEFAULT_CONFIG_CHANNEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.DEFAULT_CACHE_CHANNEL">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.ConfigManagementEnabled">
            <summary>
            Whether or not pub/sub is enabled for configuration management (i.e. EACSS)
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.CacheManagementEnabled">
            <summary>
            Whether or not pub/sub is enabled for cache management 
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.ConnectionString">
            <summary>
            The pub/sub Redis connection string.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.Namespace">
            <summary>
            The namespace to separate messages according to area/application.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.ConfigChannel">
            <summary>
            The channel for configuration-related change notifications.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ColleaguePubSubOptions.CacheChannel">
            <summary>
            The channel for cache removal notifications.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.IntegrationApiErrorMessage">
            <summary>
            A standard error message for the Integration API
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.IntegrationApiErrorMessage.Code">
            <summary>
            Standard error code, as defined in the CDM
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.IntegrationApiErrorMessage.Description">
            <summary>
            Standard error description, corresponding to the Code
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.IntegrationApiErrorMessage.ReturnCode">
            <summary>
            HTTP status code for this error
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.IntegrationApiErrorMessage.#ctor(System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructor
            </summary>
            <param name="code">Error code</param>
            <param name="description">Error description</param>
            <param name="returnCode">HTTP status code</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.IntegrationApiErrorMessage.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Overload constructor
            </summary>
            <param name="code">Error code</param>
            <param name="description">Error description</param>
            <param name="returnCode">Integer value of HTTP return code</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.KeyManagementViewModel">
            <summary>
            Used for key management page
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.KeyManagementViewModel.KeyStrategies">
            <summary>
            Available approaches for key management
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.KeyManagementViewModel.KeyStrategy">
            <summary>
            The strategy for the key.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.KeyManagementViewModel.KeyPath">
            <summary>
            The path to the key repository. Ideally, a UNC path to support web farms.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.KeyManagementViewModel.FixedKey">
            <summary>
            The fixed key to use. Changing this means the application should re-protect the already protected values.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.KeyManagementViewModel.ErrorMessage">
            <summary>
            Used for validation or other issues.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.KeyManagementViewModel.ConfirmationUrl">
            <summary>
            We need to redirect to a confirmation URL because the app will restart.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.PhotoSettingsModel">
            <summary>
            API photo settings model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PhotoSettingsModel.BasePhotoUrl">
            <summary>
            Gets or sets the base photo URL.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PhotoSettingsModel.ImageTypes">
            <summary>
            Gets or sets a list of supported image types.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PhotoSettingsModel.SelectedImageType">
            <summary>
            Gets or sets the selected image type.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PhotoSettingsModel.ImageExtension">
            <summary>
            Gets or sets the image extension.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PhotoSettingsModel.CustomHeaders">
            <summary>
            Gets or sets a list of custom headers.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.PhotoSettingsModel.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.PhotoSettingsModel.ParseFormattedUrl(System.String)">
            <summary>
            Populates the BasePhotoUrl and ImageExtension properties.
            </summary>
            <param name="formattedUrl"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.PhotoSettingsModel.GetFormattedUrl">
            <summary>
            Builds the full image URL using the BasePhotoUrl and ImageExtension properties.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.PubSubNotificationBase">
            <summary>
            Base class for serialization
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PubSubNotificationBase.HostName">
            <summary>
            Host name initiating the notification (i.e. the publisher)
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.PubSubCacheNotification">
            <summary>
            Notification for cache removal.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PubSubCacheNotification.CacheKeys">
            <summary>
            Keys to remove
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.PubSubConfigNotification">
            <summary>
            Notification for cache removal.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.PubSubConfigNotification.Checksum">
            <summary>
            Checksum of config backup
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ReportSettingsModel">
            <summary>
            View model that contains API report settings
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ReportSettingsModel.ReportLogoPath">
            <summary>
            The path to the report logo image file
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ReportSettingsModel.UnofficialWatermarkPath">
            <summary>
            The path to the report watermark image file
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ReportSettingsModel.#ctor">
            <summary>
            Constructor for a ReportSettingsModel
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ResourceFileEntryModel">
            <summary>
            Object that reflects the data in a single resource file. 
            Includes an object to retain the original value and to keep track of changes made to the entry.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.Key">
            <summary>
            Gets or sets the value of the key of the resource file entry.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.Value">
            <summary>
            Gets or sets the value of the resource file entry.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.Comment">
            <summary>
            Gets or sets the comment of the resource file entry.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.OriginalValue">
            <summary>
            Gets or sets the original value to keep track of modified values.
            </summary>
            <value>
            The original value.
            </value>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Models.ResourceFileEntryModel"/> class.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Models.ResourceFileEntryModel"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ResourceFileEntryModel.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Models.ResourceFileEntryModel"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="comment">The comment.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.ResourceFileModel">
            <summary>
            Object that reflects a resource file
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileModel.ResourceFilePath">
            <summary>
            Gets or sets the full path of the resource file.
            </summary>
            <value>
            The path of the resource file.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileModel.ResourceFileName">
            <summary>
            Gets the name of the resource file from the resource file path
            </summary>
            <value>
            The name of the resource file.
            </value>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.ResourceFileModel.ResourceFileEntries">
            <summary>
            Gets or sets the resource file entries.
            </summary>
            <value>
            The resource file entries.
            </value>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ResourceFileModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Models.ResourceFileModel"/> class.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ResourceFileModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Models.ResourceFileModel"/> class.
            </summary>
            <param name="path">Path of the resource file</param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Models.ResourceFileModel.#ctor(System.String,System.Collections.Generic.List{Ellucian.Colleague.Api.Models.ResourceFileEntryModel})">
            <summary>
            Initializes a new instance of the <see cref="T:Ellucian.Colleague.Api.Models.ResourceFileModel"/> class.
            </summary>
            <param name="path">The path of the resource file.</param>
            <param name="resItems">The resource items within the resource file.</param>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.SaasStagingConfiguration">
            <summary>
            SaaS Staging Configuration object
            More info here:
            https://confluence.ellucian.com/display/colleague/Config+Staging+File+Template
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.SaasStagingConfiguration.ApplicationName">
            <summary>
            Application's name (Web API / Self Service / UI)
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.SaasStagingConfiguration.MinimumConfigVersion">
            <summary>
            Application's config version must be same or higher than this minimum config version for the file to be applied.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.SaasStagingConfiguration.UpdateSettings">
            <summary>
            Collection of settings to be updated
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.UpdateSetting">
            <summary>
            Object describing the setting to be updated
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.UpdateSetting.SettingName">
            <summary>
            Name of setting
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.UpdateSetting.SettingSecondaryName">
            <summary>
            Secondary name of setting
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.UpdateSetting.SettingValue">
            <summary>
            New value of the setting
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.TestConnection">
            <summary>
            Test connection model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.TestConnection.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.TestConnection.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.TestLogin">
            <summary>
            Test login model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.TestLogin.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.TestLogin.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.TestLogin.BaseUrl">
            <summary>
            Gets or sets the base API URL.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Models.WebApiSettings">
            <summary>
            Web API settings model.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.AccountName">
            <summary>
            Gets or sets the DMI account name.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.IpAddress">
            <summary>
            Gets or sets the DMI IP address.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.Port">
            <summary>
            Gets or sets the DMI listener port number.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.Secure">
            <summary>
            Gets or sets a flag indicating whether or not the DMI connection is secure.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.HostNameOverride">
            <summary>
            Gets or sets the certificate host name override.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.ConnectionPoolSize">
            <summary>
            Gets or sets the size of the connection pool.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.SharedSecret1">
            <summary>
            Gets or sets the shared secret.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.SharedSecret2">
            <summary>
            Gets or sets the shared secret confirmation.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.LogLevels">
            <summary>
            Gets or sets the available log levels.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.LogLevel">
            <summary>
            Gets or sets the log level.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.ProfileName">
            <summary>
            Gets or sets the API profile name.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.MachineKeySettingError">
            <summary>
            Gets or sets the machine key setting error message.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.MachineKeySettingWarning">
            <summary>
            Gets or sets the machine key setting warning message.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasAccountName">
            <summary>
            Gets or sets the DAS account name.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasIpAddress">
            <summary>
            Gets or sets the DAS IP address.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasPort">
            <summary>
            Gets or sets the DAS listener port number.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasSecure">
            <summary>
            Gets or sets a flag indicating whether or not the DAS connection is secure.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasHostNameOverride">
            <summary>
            Gets or sets the certificate host name override for the secure DAS connection.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasConnectionPoolSize">
            <summary>
            Gets or sets the size of the DAS connection pool.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasUsername">
            <summary>
            Gets or sets the DAS username.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DasPassword">
            <summary>
            Gets or sets the DAS password.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.UseDasDatareader">
            <summary>
            Gets or sets the DAS settings flag.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.OauthIssuerUrl">
            <summary>
            Gets or sets the Oauth Issuer Url.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.OauthProxyUsername">
            <summary>
            Gets or sets the Oauth Proxy login.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.OauthProxyPassword">
            <summary>
            Gets or sets the Oauth Proxy password.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.SupportedCultures">
            <summary>
            Gets or sets the available cultures.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.SupportedUiCultures">
            <summary>
            Gets or sets the available UI cultures.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DefaultCulture">
            <summary>
            Gets or sets the default culture.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Models.WebApiSettings.DefaultUiCulture">
            <summary>
            Gets or sets the default UI culture.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Options.CookiePolicySettings">
            <summary>
            Allows for programmatic setting of cookie policy.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.CookiePolicySettings.CookieSecurePolicy">
            <summary>
            The cookie secure policy. Affects if cookies require HTTPS or only HTTP. Options: <see cref="P:Ellucian.Colleague.Api.Options.CookiePolicySettings.CookieSecurePolicy"/>
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Options.DataProtectionSettings">
            <summary>
            This allows for some configuration of dataprotection behavior
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Options.DataProtectionSettings.SettingsKey">
            <summary>
            This is the key for retrieval in te
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.DataProtectionSettings.FixedKeyManagerKey">
            <summary>
            This is the key to use for the FixedKeyManager should the option for using a FixedKey be used.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.DataProtectionSettings.NetworkPath">
            <summary>
            This is the network path for storing XML keys in a web farm environment. 
            Should be a UNC path or, if a a path that is mounted/mapped consistently between hosts and files, XML key 
            synchronization will be the responsibility of the system administrators.
            If empty, it defaults to the ProtectionKeys directory within the App_Data folder.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.DataProtectionSettings.DataProtectionMode">
            <summary>
            Which protection mode is configured.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.DataProtectionSettings.AwsKeyPath">
            <summary>
            Path/key for AWS secrets manager for storing the key
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Options.DataProtectionMode">
            <summary>
            Allows for an indicator of which provider to configure for the application
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Options.DataProtectionMode.FixedKey">
            <summary>
            Uses the FixedKeyManager to provide a static key for data encryption. This is similar to MachineKey.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Options.DataProtectionMode.NetworkShare">
            <summary>
            Uses a network share path for data protection
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Options.DataProtectionMode.AWS">
            <summary>
            Uses the AWS secrets manager data protection provider.
            See https://github.com/aws/aws-ssm-data-protection-provider-for-aspnet
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Options.SettingsFileOptions">
            <summary>
            Allows for the options for settings file.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Options.SettingsFileOptions.Key">
            <summary>
            The key for the configuration file.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.SettingsFileOptions.Path">
            <summary>
            Path to the settings.config file.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.SettingsFileOptions.BackupPath">
            <summary>
            Backup path for the settings file.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Options.SettingsFileOptions.IsRelative">
            <summary>
            Are the paths present relative to the application content root.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Program">
            <summary>
            The main entry point for Ellucian Colleague API
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Program.Main(System.String[])">
            <summary>
            The main entry point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates the host 
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Ellucian.Colleague.Api.RouteConstants">
            <summary>
            Maintains the accept header constants. Some of them have a version placeholder that is expected to be replaced
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationMaximumMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.maximum.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationSectionsMaximumMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.sections-maximum.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationVendorsMaximumMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.vendors-maximum.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationMinimumMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.minimum.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationRoomAvailabilityQapiMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.room-availability.v{0}+json";
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationRoomMinimumQapiMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.room-minimum.v{0}+json";
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationAfaTransactionsQapiMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.afa_transactions.v{0}+json";
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationStudentTranscriptGradesOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.student-transcript-grades-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationStudentUnverifiedGradesSubmissionsFormat">
            <summary>
            "application/vnd.hedtech.integration.student-unverified-grades-submissions.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationStudentAcademicProgramSubmissionsFormat">
            <summary>
            "application/vnd.hedtech.integration.student-academic-programs-submissions.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationStudentAcademicProgramReplacements">
            <summary>
            "application/vnd.hedtech.integration.student-academic-programs-replacements.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationStudentTranscriptGradesAdjustmentsFormat">
            <summary>
            "application/vnd.hedtech.integration.student-transcript-grades-adjustments.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationSectionRegistrationGradeOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.section-registrations-grade-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationAdmissionApplicationsSubmissionsFormat">
            <summary>
            "application/vnd.hedtech.integration.admission-applications-submissions.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationProspectOpportunitiesSubmissionsFormat">
            <summary>
            "application/vnd.hedtech.integration.prospect-opportunities-submissions.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationPersonMatchingRequestsInitiationsProspectsFormat">
            <summary>
            "application/vnd.hedtech.integration.person-matching-requests-initiations-prospects.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationCompoundConfigurationSettingsOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.compound-configuration-settings-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationConfigurationSettingsOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.configuration-settings-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationDefaultSettingsOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.default-settings-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationDefaultSettingsAdvancedSearchOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.default-settings-advanced-search-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationMappingSettingsOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.mapping-settings-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationCollectionConfigurationSettingsOptionsFormat">
            <summary>
            "application/vnd.hedtech.integration.collection-configuration-settings-options.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationBulkRequestMediaTypeFormat">
            <summary>
            "application/vnd.hedtech.integration.bulk-requests.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationOpenApiMetdataTypeFormat">
            <summary>
            "application/vnd.oai.openapi.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationOpenApiMetdataPublishTypeFormat">
            <summary>
            "application/vnd.oai.openapi.publish.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationDefaultOpenApiMetdataTypeFormat">
            <summary>
            "application/vnd.oai.openapi+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.HedtechIntegrationPersonFiltersPersonsFormat">
            <summary>
            "application/vnd.hedtech.integration.person-filters-persons.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianPDFMediaTypeFormat">
            <summary>
            "application/vnd.ellucian.v{0}+pdf"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianJsonPilotMediaTypeFormat">
            <summary>
            "application/vnd.ellucian-pilot.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianJsonIlpMediaTypeFormat">
            <summary>
            "application/vnd.ellucian-ilp.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianHumanResourceDemographicsTypeFormat">
            <summary>
            "application/vnd.ellucian-human-resource-demographics.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianStepUpAuthenticationFormat">
            <summary>
            "application/vnd.ellucian-step-up-authentication.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianConfigurationFormat">
            <summary>
            "application/vnd.ellucian-configuration.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianProxyUserFormat">
            <summary>
            "application/vnd.ellucian-proxy-user.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianInvalidKeysFormat">
            <summary>
            "application/vnd.ellucian-with-invalid-keys.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianPersonSearchExactMatchFormat">
            <summary>
            "application/vnd.ellucian-person-search-exact-match.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseNoteFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-note.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseFollowUpFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-followup.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseCommCodeFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-comm-code.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseTypeFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-type.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCasePriorityFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-priority.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseCloseFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-close.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseSetReminderFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-set-reminder.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseManageRemindersFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-manage-reminders.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseSendMailFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-send-mail.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianRetentionAlertCaseReassignFormat">
            <summary>
            "application/vnd.ellucian-retention-alert-case-reassign.v{0}+json"
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.RouteConstants.EllucianInstantEnrollmentFormat">
            <summary>
            "application/vnd.ellucian-instant-enrollment.v{0}+json"
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            The app startup method.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Ellucian.Colleague.Api.Startup.Configuration">
            <summary>
            The configuration for the application.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures ASP.NET services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime)">
            <summary>
            Configures the ASP.NET application
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="lifetime"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Startup.OnAppStopping">
            <summary>
            When app stops gracefully
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Utility.AppConfigUtility">
            <summary>
            Utility for managing configuration for this application
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Utility.AppConfigUtility.ApiConfigVersion">
            <summary>
            API config version
            MUST be incremented everytime any setting/property is added/removed/renamed in any of the setting groups.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.AppConfigUtility.ConfigServiceClientSettings">
            <summary>
            config service client settings
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.AppConfigUtility.StorageServiceClient">
            <summary>
            Config service client for sending requests to the storage service.
            This client gets set by the first call to GetApiConfigurationObject() below, 
            which provides this instance's namespace that the client requires.
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.AppConfigUtility.HostEnvironment">
            <summary>
            Allows for knowing the host for building paths, etc.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.#ctor(Ellucian.Web.Http.Configuration.ISettingsRepository,Ellucian.Web.Http.Configuration.IApiSettingsRepository,Ellucian.Web.Resource.IResourceRepository,Microsoft.Extensions.Logging.ILogger,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            
            </summary>
            <param name="settingsRepository"></param>
            <param name="apiSettingsRepository"></param>
            <param name="resourceRepository"></param>
            <param name="logger"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.GetApiConfigurationObject">
            <summary>
            Get back the overall config object which contains all of API's various config data objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.CheckStorageServiceHealth">
            <summary>
            Checks the EACSS health
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.RestoreApiBackupConfiguration(System.String,System.Boolean,System.String)">
            <summary>
            Restores this API instance's config data using the latest backup retrieved from Colleague DB.
            An optional date time filter can be used.
            Also optionally perform merging of any applicable settings, such as the resource files. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.ApplyStagingConfigFile">
            <summary>
            Apply config changes from a valid staging config file.
            This action will occur only once. The staging config file will be archived after it is processed and will not be processed again.
            </summary>
            <returns>True if changes occurred. False if no changes made.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.UpdateConfigsWithStagingData(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Api.Models.SaasStagingConfiguration)">
            <summary>
            Similar to the restore method, but the source is the staging config file.
            </summary>
            <param name="logger"></param>
            <param name="stagingConfig"></param>
            <returns>True if changes occurred. False if no changes made.</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.GetSettingFromStagingConfigFile(Ellucian.Colleague.Api.Models.SaasStagingConfiguration,System.String)">
            <summary>
            Return the UpdateSetting object from the staging config object with matching setting name
            </summary>
            <param name="stagingConfig"></param>
            <param name="primarySettingName"></param>
            <returns></returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.GetStagingConfig(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Return the staging config object, if a valid file exists.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.AppConfigUtility.ArchiveStagingConfigFile(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Rename/archive the stagingconfigfile so that it doesn't get re-applied on next startup.
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Utility.IntegrationApiUtility">
            <summary>
            Static helper class for the Integration API
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.DefaultErrorCode">
            <summary>
            Default error code
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.DefaultNotSupportedApiErrorMessage">
            <summary>
            Default Error message for not supported messages
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.DefaultMessage">
            <summary>
            Default error message
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.DefaultApiError">
            <summary>
            Default API error
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.DefaultNotSupportedApiError">
            <summary>
            Default API error
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.GetDefaultApiError(System.String)">
            <summary>
            Static helper method to get the default API error with a user-provided message
            </summary>
            <param name="message">Message from caller</param>
            <returns>An IntegrationApiError</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ConvertToIntegrationApiException(Ellucian.Colleague.Domain.Exceptions.RepositoryException)">
            <summary>
            Static helper method to convert a repository exception into an integration API exception
            </summary>
            <param name="ex">The repository exception</param>
            <returns>An integration API exception</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ConvertToIntegrationApiError(Ellucian.Colleague.Domain.Entities.RepositoryError)">
            <summary>
            Static helper method to convert a repository error into an integration API error
            </summary>
            <param name="error">A repository error</param>
            <returns>An integration API error</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ConvertToIntegrationApiException(Ellucian.Web.Security.PermissionsException)">
            <summary>
            Static helper method to convert a permissions exception into an integration API exception
            </summary>
            <param name="ex">The permissions exception</param>
            <returns>An integration API exception</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ConvertToIntegrationApiException(System.ArgumentException)">
            <summary>
            Static helper method to convert an argument exception into an integration API exception
            </summary>
            <param name="ex">The argument exception</param>
            <returns>An integration API exception</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ConvertToIntegrationApiException(Ellucian.Web.Http.Exceptions.IntegrationApiException)">
            <summary>
            Static helper method to take an integration API exception and format it for output
            </summary>
            <param name="ex">The repository exception</param>
            <returns>An integration API exception</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ConvertToIntegrationApiException(System.Exception)">
            <summary>
            Static helper method to convert a generic exception into an integration API exception
            </summary>
            <param name="ex">The generic exception</param>
            <returns>An integration API exception</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.PopulateExceptionErrors(Ellucian.Web.Http.Exceptions.IntegrationApiException)">
            <summary>
            Static helper method to take an integration API exception, populate all the messages in it,
            and return another IntegrationApiException
            </summary>
            <param name="ex">The source exception</param>
            <returns>A new exception with populated errors</returns>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.PopulateError(Ellucian.Web.Http.Exceptions.IntegrationApiError)">
            <summary>
            Static helper method to populate the description for an API error
            </summary>
            <param name="error">Current API error</param>
            <returns>Fully populated API error</returns>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.IntegrationApiUtility.ApiErrorMessages">
            <summary>
            List of standard error messages for the Integration API
            </summary>
        </member>
        <member name="T:Ellucian.Colleague.Api.Utility.NullSubscriber">
            <summary>
            Container for DI because we may not always have a subscriber
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Api.Utility.NullSubscriber.Multiplexer">
            <summary>
            Always null, don't use
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.IdentifyEndpoint(StackExchange.Redis.RedisChannel,StackExchange.Redis.CommandFlags)">
            <summary>
            Don't use
            </summary>
            <param name="channel"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.IdentifyEndpointAsync(StackExchange.Redis.RedisChannel,StackExchange.Redis.CommandFlags)">
            <summary>
            Don't use
            </summary>
            <param name="channel"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.IsConnected(StackExchange.Redis.RedisChannel)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Ping(StackExchange.Redis.CommandFlags)">
            <summary>
            Don't Use
            </summary>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.PingAsync(StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Publish(StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue,StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="message"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.PublishAsync(StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue,StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="message"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Subscribe(StackExchange.Redis.RedisChannel,System.Action{StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue},StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Subscribe(StackExchange.Redis.RedisChannel,StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.SubscribeAsync(StackExchange.Redis.RedisChannel,System.Action{StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue},StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.SubscribeAsync(StackExchange.Redis.RedisChannel,StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.SubscribedEndpoint(StackExchange.Redis.RedisChannel)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.TryWait(System.Threading.Tasks.Task)">
            <summary>
            
            </summary>
            <param name="task"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Unsubscribe(StackExchange.Redis.RedisChannel,System.Action{StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue},StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.UnsubscribeAll(StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.UnsubscribeAllAsync(StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.UnsubscribeAsync(StackExchange.Redis.RedisChannel,System.Action{StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue},StackExchange.Redis.CommandFlags)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Wait(System.Threading.Tasks.Task)">
            <summary>
            
            </summary>
            <param name="task"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.Wait``1(System.Threading.Tasks.Task{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="task"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ellucian.Colleague.Api.Utility.NullSubscriber.WaitAll(System.Threading.Tasks.Task[])">
            <summary>
            
            </summary>
            <param name="tasks"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Ellucian.Web.Http.Utilities.SecuritySystemLoginAccessException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ellucian.Web.Http.Utilities.SecuritySystemLoginAccessException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ellucian.Web.Http.Utilities.SecuritySystemLoginAccessException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Ellucian.Web.Http.Utilities.SecuritySystemLoginAccessException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Ellucian.Web.Http.Utilities.SecuritySystemLoginUtilities">
            <summary>
            SystemSystemLoginUtilities that contains static properties useful for interacting with the API as a security system login.
            </summary>
        </member>
        <member name="M:Ellucian.Web.Http.Utilities.SecuritySystemLoginUtilities.GetSecuritySystemLoginApiClient(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets a service client for use in security system applications that require elevated privileges the user
            themselves will not have.
            </summary>
            <returns>An API client authenticated with security system login credentials</returns>
        </member>
        <member name="T:CompTimeController">
            <summary>
            Exposes access to employee comp time for time entry
            </summary>
        </member>
        <member name="M:CompTimeController.#ctor(Microsoft.Extensions.Logging.ILogger,Ellucian.Colleague.Coordination.TimeManagement.Services.ICompTimeService,Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor,Ellucian.Web.Http.Configuration.ApiSettings)">
            <summary>
            Comp Time controller constructor
            </summary>
            
            <param name="logger"></param>
            <param name="compTimeService"></param>
            <param name="actionContextAccessor"></param>
            <param name="apiSettings"></param>
        </member>
        <member name="M:CompTimeController.QueryCompTimeAccrualAsync(Ellucian.Colleague.Dtos.TimeManagement.CompTimeAccrualQueryCriteria,System.String)">
            <summary>
            Gets the comp time record associated with the pay period id for the currently authenticated API user (as an employee).
            
            Example:  if the current user is an employee, the associated comp time accrual record to the pay period id will be returned.
            Example:  if the current user is a manager, the associated comp time accrual record to the pay period id will be returned.
            
            The endpoint will not return the requested CompTimeAccrual if:
                1.  400 - Ids were not included in request URI
                2.  403 - User does not have permission to get requested CompTimeAccrual
                3.  404 - The Comp Time Accrual resources requested does not exist
            </summary>
            
            /// <param name="criteria"></param>
            /// <param name="effectivePersonId">
            /// Optional parameter for passing effective person Id
            ///</param>
            <returns>A comp time accrual record</returns>
        </member>
        <member name="M:CompTimeController.QueryOvertimeCompTimeThresholdAllocationAsync(Ellucian.Colleague.Dtos.TimeManagement.OvertimeCompTimeThresholdAllocationCriteria,System.String)">
            <summary>
            Gets a collection of all associated OvertimeCompTimeThresholdAllocations with employee, pay period id and end date, and week start and end date.
            
            Example:  if the current user is an employee, the associated OvertimeCompTimeThresholdAllocations to the pay period id will be returned.
            Example:  if the current user is a manager, the associated OvertimeCompTimeThresholdAllocations to the pay period id will be returned for the employee being viewed.
            
            The endpoint will not return the requested collection of OvertimeCompTimeThresholdAllocation if:
                1.  400 - One of the required criteria properties is missing
                2.  403 - User does not have permission to get requested OvertimeCompTimeThresholdAllocation
                3.  404 - The OvertimeCompTimeThresholdAllocation resources requested do not exist
            </summary>
            
            /// <param name="criteria">The employee id, pay period id, pay period end date, week start date, and week end date</param>
            /// <param name="effectivePersonId">Optional parameter for passing effective person Id</param>
            <returns>A list of OvertimeCompTimeThresholdAllocation</returns>
            <accessComments>
            An authenticated user (supervisor) with the following permission code may retrieve OvertimeCompTimeThresholdAllocations for any of their supervisees.
            For proxy-supervisors to retrieve supervisee data, the grantor must have the permission code below.
            APPROVE.REJECT.TIME.ENTRY
            </accessComments>
        </member>
        <member name="M:CompTimeController.UpdateCompTimeAccrualAsync(Ellucian.Colleague.Dtos.TimeManagement.CompTimeAccrual,System.String)">
            <summary>
            Updates the requested comp time accrual record and associated accrual detail records. The effectivePersonId argument is optional.
            <br />
            Performs the following actions on associated time entries:
                1.  A new accrual detail record will be created.
                2.  An existing accrual detail record will be modified.
                3.  The absence of a prior accrual detail record will prompt a deletion.
            
            The endpoint will reject the update of a Comp Time Accrual if:
                1. 403 - Person does not have the correct permissions to update Comp Time
                2. 404 - The Comp Time Accrual resource requested for update does not exist
                2. 409 - The Comp Time Accrual resource has changed on server
                3. 409 - The Comp Time Accrual resource is locked by another resource
            </summary>
            <accessComments>
            1. Employees can update their own Comp Time Accrual records.
            2. Supervisors who have a role associated to the permission code - APPROVE.REJECT.TIME.ENTRY -
            can update comp time for employees for whom they supervise.
            3. Supervisors can authorize other users (Proxies) via Employee Proxy Self Service. A user who is proxying for a supervisor with the
            proper permission code can update comp time accrual records for employees for whom the supervisor supervises.
            </accessComments>
            <param name="compTimeAccrual">The comp time accrual record</param>
            <param name="effectivePersonId">Optional: If the current user is proxying for a supervisor, submit the supervisor's personId as the effectivePersonId</param>
            <returns>A CompTimeAccrual record</returns>
        </member>
        <member name="M:CompTimeController.DeleteCompTimeAccrualAsync(System.String,System.String)">
            <summary>
            Delete a CompTimeAccrual record
            The endpoint will thrown an exception if:
                1.  400 - Id is not included in request URI
                2.  403 - User does not have permission to delete requested CompTimeAccrual
                3.  404 - The Comp Time Accrual resource requested to be deleted does not exist
            </summary>
            <param name="id">CompTimeAccrual Id to delete</param>
            <param name="effectivePersonId">Optional: If the current user is proxying for a supervisor, submit the supervisor's personId as the effectivePersonId</param>
            <accessComments>
            Users with the following permission codes can delete update CompTimeAccrual:
            APPROVE.REJECT.TIME.ENTRY
            </accessComments>
        </member>
        <member name="M:CompTimeController.ValidateCompTimeAsync(Ellucian.Colleague.Dtos.TimeManagement.ValidateCompTimeCriteria,System.String)">
            <summary>
            Validates the the comp time submitted by an authenticated API user (as an employee).
            
            Example:  if the current user is an employee, the associated comp time accrual record to the pay period id will be returned.
            Example:  if the current user is a manager, the associated comp time accrual record to the pay period id will be returned.
            
            The endpoint will not return a ValidateCompTimeResponse if:
                1.  400 - Criteria is not included in the body
                2.  403 - User does not have permission to get validate this CompTimeAccrual record
            </summary>
            
            /// <param name="criteria"></param>
            /// <param name="effectivePersonId">
            /// Optional parameter for passing effective person Id
            ///</param>
            <returns>A ValidateCompTimeResponse</returns>
        </member>
    </members>
</doc>
